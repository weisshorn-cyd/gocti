// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package gocti

import (
	"context"

	"github.com/weisshorn-cyd/gocti/api"
	"github.com/weisshorn-cyd/gocti/entity"
	"github.com/weisshorn-cyd/gocti/system"
)

// Helper methods declarations

func (client *OpenCTIAPIClient) CreateAttackPattern(
	ctx context.Context,
	customAttributes string,
	input entity.AttackPatternAddInput,
) (entity.AttackPattern, error) {
	return api.StructuredCreate[entity.AttackPattern, entity.AttackPattern](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateCampaign(
	ctx context.Context,
	customAttributes string,
	input entity.CampaignAddInput,
) (entity.Campaign, error) {
	return api.StructuredCreate[entity.Campaign, entity.Campaign](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateCaseIncident(
	ctx context.Context,
	customAttributes string,
	input entity.CaseIncidentAddInput,
) (entity.CaseIncident, error) {
	return api.StructuredCreate[entity.CaseIncident, entity.CaseIncident](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateCaseRfi(
	ctx context.Context,
	customAttributes string,
	input entity.CaseRfiAddInput,
) (entity.CaseRfi, error) {
	return api.StructuredCreate[entity.CaseRfi, entity.CaseRfi](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateCaseRft(
	ctx context.Context,
	customAttributes string,
	input entity.CaseRftAddInput,
) (entity.CaseRft, error) {
	return api.StructuredCreate[entity.CaseRft, entity.CaseRft](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateCaseTemplate(
	ctx context.Context,
	customAttributes string,
	input system.CaseTemplateAddInput,
) (system.CaseTemplate, error) {
	return api.StructuredCreate[system.CaseTemplate, system.CaseTemplate](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateChannel(
	ctx context.Context,
	customAttributes string,
	input entity.ChannelAddInput,
) (entity.Channel, error) {
	return api.StructuredCreate[entity.Channel, entity.Channel](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateCourseOfAction(
	ctx context.Context,
	customAttributes string,
	input entity.CourseOfActionAddInput,
) (entity.CourseOfAction, error) {
	return api.StructuredCreate[entity.CourseOfAction, entity.CourseOfAction](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateDataComponent(
	ctx context.Context,
	customAttributes string,
	input entity.DataComponentAddInput,
) (entity.DataComponent, error) {
	return api.StructuredCreate[entity.DataComponent, entity.DataComponent](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateDataSource(
	ctx context.Context,
	customAttributes string,
	input entity.DataSourceAddInput,
) (entity.DataSource, error) {
	return api.StructuredCreate[entity.DataSource, entity.DataSource](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateEvent(
	ctx context.Context,
	customAttributes string,
	input entity.EventAddInput,
) (entity.Event, error) {
	return api.StructuredCreate[entity.Event, entity.Event](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateExternalReference(
	ctx context.Context,
	customAttributes string,
	input entity.ExternalReferenceAddInput,
) (entity.ExternalReference, error) {
	return api.StructuredCreate[entity.ExternalReference, entity.ExternalReference](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateFeedback(
	ctx context.Context,
	customAttributes string,
	input entity.FeedbackAddInput,
) (entity.Feedback, error) {
	return api.StructuredCreate[entity.Feedback, entity.Feedback](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateGroup(
	ctx context.Context,
	customAttributes string,
	input system.GroupAddInput,
) (system.Group, error) {
	return api.StructuredCreate[system.Group, system.Group](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateGrouping(
	ctx context.Context,
	customAttributes string,
	input entity.GroupingAddInput,
) (entity.Grouping, error) {
	return api.StructuredCreate[entity.Grouping, entity.Grouping](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateIdentity(
	ctx context.Context,
	customAttributes string,
	input entity.IdentityAddInput,
) (entity.Identity, error) {
	return api.StructuredCreate[entity.Identity, entity.Identity](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateIncident(
	ctx context.Context,
	customAttributes string,
	input entity.IncidentAddInput,
) (entity.Incident, error) {
	return api.StructuredCreate[entity.Incident, entity.Incident](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateIndicator(
	ctx context.Context,
	customAttributes string,
	input entity.IndicatorAddInput,
) (entity.Indicator, error) {
	return api.StructuredCreate[entity.Indicator, entity.Indicator](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateInfrastructure(
	ctx context.Context,
	customAttributes string,
	input entity.InfrastructureAddInput,
) (entity.Infrastructure, error) {
	return api.StructuredCreate[entity.Infrastructure, entity.Infrastructure](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateIntrusionSet(
	ctx context.Context,
	customAttributes string,
	input entity.IntrusionSetAddInput,
) (entity.IntrusionSet, error) {
	return api.StructuredCreate[entity.IntrusionSet, entity.IntrusionSet](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateKillChainPhase(
	ctx context.Context,
	customAttributes string,
	input entity.KillChainPhaseAddInput,
) (entity.KillChainPhase, error) {
	return api.StructuredCreate[entity.KillChainPhase, entity.KillChainPhase](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateLabel(
	ctx context.Context,
	customAttributes string,
	input entity.LabelAddInput,
) (entity.Label, error) {
	return api.StructuredCreate[entity.Label, entity.Label](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateLanguage(
	ctx context.Context,
	customAttributes string,
	input entity.LanguageAddInput,
) (entity.Language, error) {
	return api.StructuredCreate[entity.Language, entity.Language](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateLocation(
	ctx context.Context,
	customAttributes string,
	input entity.LocationAddInput,
) (entity.Location, error) {
	return api.StructuredCreate[entity.Location, entity.Location](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateMalware(
	ctx context.Context,
	customAttributes string,
	input entity.MalwareAddInput,
) (entity.Malware, error) {
	return api.StructuredCreate[entity.Malware, entity.Malware](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateMalwareAnalysis(
	ctx context.Context,
	customAttributes string,
	input entity.MalwareAnalysisAddInput,
) (entity.MalwareAnalysis, error) {
	return api.StructuredCreate[entity.MalwareAnalysis, entity.MalwareAnalysis](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateMarkingDefinition(
	ctx context.Context,
	customAttributes string,
	input entity.MarkingDefinitionAddInput,
) (entity.MarkingDefinition, error) {
	return api.StructuredCreate[entity.MarkingDefinition, entity.MarkingDefinition](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateNarrative(
	ctx context.Context,
	customAttributes string,
	input entity.NarrativeAddInput,
) (entity.Narrative, error) {
	return api.StructuredCreate[entity.Narrative, entity.Narrative](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateNote(
	ctx context.Context,
	customAttributes string,
	input entity.NoteAddInput,
) (entity.Note, error) {
	return api.StructuredCreate[entity.Note, entity.Note](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateObservedData(
	ctx context.Context,
	customAttributes string,
	input entity.ObservedDataAddInput,
) (entity.ObservedData, error) {
	return api.StructuredCreate[entity.ObservedData, entity.ObservedData](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateOpinion(
	ctx context.Context,
	customAttributes string,
	input entity.OpinionAddInput,
) (entity.Opinion, error) {
	return api.StructuredCreate[entity.Opinion, entity.Opinion](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateReport(
	ctx context.Context,
	customAttributes string,
	input entity.ReportAddInput,
) (entity.Report, error) {
	return api.StructuredCreate[entity.Report, entity.Report](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateRole(
	ctx context.Context,
	customAttributes string,
	input system.RoleAddInput,
) (system.Role, error) {
	return api.StructuredCreate[system.Role, system.Role](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateStatusTemplate(
	ctx context.Context,
	customAttributes string,
	input system.StatusTemplateAddInput,
) (system.StatusTemplate, error) {
	return api.StructuredCreate[system.StatusTemplate, system.StatusTemplate](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateStixCoreRelationship(
	ctx context.Context,
	customAttributes string,
	input entity.StixCoreRelationshipAddInput,
) (entity.StixCoreRelationship, error) {
	return api.StructuredCreate[entity.StixCoreRelationship, entity.StixCoreRelationship](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateStixCyberObservable(
	ctx context.Context,
	customAttributes string,
	input entity.StixCyberObservableAddInput,
) (entity.StixCyberObservable, error) {
	return api.StructuredCreate[entity.StixCyberObservable, entity.StixCyberObservable](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateStixDomainObject(
	ctx context.Context,
	customAttributes string,
	input entity.StixDomainObjectAddInput,
) (entity.StixDomainObject, error) {
	return api.StructuredCreate[entity.StixDomainObject, entity.StixDomainObject](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateTask(
	ctx context.Context,
	customAttributes string,
	input entity.TaskAddInput,
) (entity.Task, error) {
	return api.StructuredCreate[entity.Task, entity.Task](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateTaskTemplate(
	ctx context.Context,
	customAttributes string,
	input system.TaskTemplateAddInput,
) (system.TaskTemplate, error) {
	return api.StructuredCreate[system.TaskTemplate, system.TaskTemplate](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateThreatActorGroup(
	ctx context.Context,
	customAttributes string,
	input entity.ThreatActorGroupAddInput,
) (entity.ThreatActorGroup, error) {
	return api.StructuredCreate[entity.ThreatActorGroup, entity.ThreatActorGroup](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateThreatActorIndividual(
	ctx context.Context,
	customAttributes string,
	input entity.ThreatActorIndividualAddInput,
) (entity.ThreatActorIndividual, error) {
	return api.StructuredCreate[entity.ThreatActorIndividual, entity.ThreatActorIndividual](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateTool(
	ctx context.Context,
	customAttributes string,
	input entity.ToolAddInput,
) (entity.Tool, error) {
	return api.StructuredCreate[entity.Tool, entity.Tool](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateUser(
	ctx context.Context,
	customAttributes string,
	input system.UserAddInput,
) (system.User, error) {
	return api.StructuredCreate[system.User, system.User](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateVocabulary(
	ctx context.Context,
	customAttributes string,
	input entity.VocabularyAddInput,
) (entity.Vocabulary, error) {
	return api.StructuredCreate[entity.Vocabulary, entity.Vocabulary](
		ctx, client, customAttributes, input,
	)
}

func (client *OpenCTIAPIClient) CreateVulnerability(
	ctx context.Context,
	customAttributes string,
	input entity.VulnerabilityAddInput,
) (entity.Vulnerability, error) {
	return api.StructuredCreate[entity.Vulnerability, entity.Vulnerability](
		ctx, client, customAttributes, input,
	)
}
