name: go
on:
  push:
    branches:
      - master
      - main
  pull_request:
    paths:
      - '**.go'
      - '**go.mod'
      - '**go.sum'

permissions:
  contents: read

env:
  GO_VERSION: '1.23.5'
  GOLANGCI_LINT_VERSION: 'v2.1.6'

jobs:
  golangci-lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: .
          args: --config=".golangci.yaml"

  go-test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Start environment
        run: docker compose --file ./docker-compose.yml --env-file ./docker-compose.env up -d
      - name: Wait on OpenCTI to be reachable
        run: while [ "$(curl -o /dev/null -s -w %{http_code} localhost:8080)" -ne 200 ]; do echo "waiting..."; sleep 5; done
      - name: Run tests
        run: |
          export CGO_ENABLED=1
          export OPENCTI_URL=http://localhost:8080
          export OPENCTI_TOKEN=f25e14de-9daa-11ef-97a3-03bdd8270110
          go test -failfast -race -coverpkg=./... -covermode=atomic -coverprofile=coverage.txt ./... -timeout 60s
      - name: Tear down environment
        run: docker compose --env-file ./docker-compose.env down --volumes --timeout 30
