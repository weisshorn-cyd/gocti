name: go
on:
  push:
    branches:
      - master
      - main
  pull_request:

permissions:
  contents: read

jobs:
  golangci-lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.57.2

  go-test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'
          cache: true
      - name: Start environment
        run: docker compose --file ./docker-compose.yml --env-file ./docker-compose.env up -d
      - name: Wait on OpenCTI to be reachable
        run: while [ "$(curl -o /dev/null -s -w %{http_code} localhost:8080)" -ne 200 ]; do echo "waiting..."; sleep 5; done
      - name: Run tests
        run: |
          export CGO_ENABLED=1
          export OPENCTI_URL=http://localhost:8080
          export OPENCTI_TOKEN=f25e14de-9daa-11ef-97a3-03bdd8270110
          go test -failfast -race -coverpkg=./... -covermode=atomic -coverprofile=coverage.txt ./... -timeout 60s
      - name: Tear down environment
        run: docker compose --env-file ./docker-compose.env down --volumes --timeout 30
