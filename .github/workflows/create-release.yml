name: create-release
on:
  pull_request:
    types:
      - closed

permissions:
  contents:
    write

jobs:
  create-release:
    if: ${{ (github.event.pull_request.merged == true) && contains(github.event.pull_request.labels.*.name, 'release') }}
    name: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find release version
        run: |
          RELEASE=$(sed -En "s/^## \[(.*)\] \- [0-9]{4}\-[0-9]{2}\-[0-9]{2}$/\1/p" ./CHANGELOG.md | head -1)
          if [ -z "$RELEASE" ]; then
            echo "Could not find release version"
            exit 1
          fi
          echo "Release of version v$RELEASE"
          echo "RELEASE_VERSION=$RELEASE" >> "$GITHUB_ENV"

      - name: Get OpenCTI version
        run: |
          VERSION=$(sed -n 's/.*opencti\/platform:\(.*\)$/\1/p' ./docker-compose.yml | head -1)
          echo "OpenCTI version $VERSION"
          echo "OPENCTI_VERSION=$VERSION" >> "$GITHUB_ENV"

      - name: Build release name
        id: release
        run: echo "name=Version $RELEASE_VERSION (for OpenCTI $OPENCTI_VERSION)" >> $GITHUB_OUTPUT

      - name: Build release tag
        id: tag
        run: echo "name=v$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Build release body
        run: |
          echo "BODY<<EOF" >> $GITHUB_ENV
          echo "$(awk '/## \[/{if (!first) {first=1; next} else exit} first' ./CHANGELOG.md)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.release.outputs.name }}
          body: ${{ env.BODY }}
          tag_name: ${{ steps.tag.outputs.name }}
          draft: false
