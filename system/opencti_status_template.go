// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package system

import (
	"fmt"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type StatusTemplate struct {
	graphql.StatusTemplate `gocti:",squash"`
}

//go:embed default_properties/status_template_default_properties.txt
var statusTemplateDefaultProperties string

func (s StatusTemplate) DefaultProperties() string {
	return statusTemplateDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/status_template_list_query.txt
var statusTemplateListQueryString string

func (s StatusTemplate) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		statusTemplateListQueryString,
		customAttributes,
	)
}

func (s StatusTemplate) ListResponseField() string { return "statusTemplates" }

// Implementing the [api.ReadableEntity] interface.

func (s StatusTemplate) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            statusTemplate (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (s StatusTemplate) ReadResponseField() string { return "statusTemplate" }

// Implementing the [api.CreatableEntity] interface.

func (s StatusTemplate) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: StatusTemplateAddInput!) {
            statusTemplateAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (s StatusTemplate) CreateResponseField() string { return "statusTemplateAdd" }

// StatusTemplateAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StatusTemplateAddInput struct {
	// StatusTemplateAddInput
	Name  string `gocti:"name"  json:"name,omitempty"`
	Color string `gocti:"color" json:"color,omitempty"`
}

func (input StatusTemplateAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (s StatusTemplate) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                statusTemplateDelete (id: $id)
            }`
}

func (s StatusTemplate) DeleteResponseField() string { return "statusTemplateDelete" }
