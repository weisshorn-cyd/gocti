// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package system

import (
	"fmt"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type Role struct {
	graphql.Role `gocti:",squash"`
}

//go:embed default_properties/role_default_properties.txt
var roleDefaultProperties string

func (r Role) DefaultProperties() string {
	return roleDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/role_list_query.txt
var roleListQueryString string

func (r Role) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		roleListQueryString,
		customAttributes,
	)
}

func (r Role) ListResponseField() string { return "roles" }

// Implementing the [api.ReadableEntity] interface.

func (r Role) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            role (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (r Role) ReadResponseField() string { return "role" }

// Implementing the [api.CreatableEntity] interface.

func (r Role) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: RoleAddInput!) {
            roleAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (r Role) CreateResponseField() string { return "roleAdd" }

// RoleAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type RoleAddInput struct {
	// RoleAddInput
	Name             string `gocti:"name"             json:"name,omitempty"`
	Description      string `gocti:"description"      json:"description,omitempty"`
	ClientMutationID string `gocti:"clientMutationId" json:"clientMutationId,omitempty"`
}

func (input RoleAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (r Role) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                roleEdit (id: $id) {
                    delete
                }
            }`
}

func (r Role) DeleteResponseField() string { return "roleEdit" }
