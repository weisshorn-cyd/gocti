// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package system

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type CaseTemplate struct {
	graphql.CaseTemplate `gocti:",squash"`
}

//go:embed default_properties/case_template_default_properties.txt
var caseTemplateDefaultProperties string

func (c CaseTemplate) DefaultProperties() string {
	return caseTemplateDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/case_template_list_query.txt
var caseTemplateListQueryString string

func (c CaseTemplate) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		caseTemplateListQueryString,
		customAttributes,
	)
}

func (c CaseTemplate) ListResponseField() string { return "caseTemplates" }

// Implementing the [api.ReadableEntity] interface.

func (c CaseTemplate) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            caseTemplate (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (c CaseTemplate) ReadResponseField() string { return "caseTemplate" }

// Implementing the [api.CreatableEntity] interface.

func (c CaseTemplate) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: CaseTemplateAddInput!) {
            caseTemplateAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (c CaseTemplate) CreateResponseField() string { return "caseTemplateAdd" }

// CaseTemplateAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CaseTemplateAddInput struct {
	// CaseTemplateAddInput
	Name        string     `gocti:"name"        json:"name,omitempty"`
	Description string     `gocti:"description" json:"description,omitempty"`
	Created     *time.Time `gocti:"created"     json:"created,omitempty"`
	Tasks       []string   `gocti:"tasks"       json:"tasks,omitempty"`
}

func (input CaseTemplateAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (c CaseTemplate) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                caseTemplateDelete (id: $id)
            }`
}

func (c CaseTemplate) DeleteResponseField() string { return "caseTemplateDelete" }
