// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package gocti

import (
	"context"

	"github.com/weisshorn-cyd/gocti/api"
	"github.com/weisshorn-cyd/gocti/entity"
	"github.com/weisshorn-cyd/gocti/system"
)

// Helper methods declarations

func (client *OpenCTIAPIClient) DeleteAttackPattern(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.AttackPattern](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteCampaign(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Campaign](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteCaseIncident(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.CaseIncident](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteCaseRfi(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.CaseRfi](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteCaseRft(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.CaseRft](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteCaseTemplate(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[system.CaseTemplate](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteChannel(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Channel](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteCourseOfAction(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.CourseOfAction](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteDataComponent(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.DataComponent](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteDataSource(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.DataSource](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteEvent(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Event](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteExternalReference(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.ExternalReference](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteFeedback(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Feedback](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteGroup(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[system.Group](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteGrouping(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Grouping](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteIdentity(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Identity](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteIncident(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Incident](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteIndicator(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Indicator](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteInfrastructure(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Infrastructure](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteIntrusionSet(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.IntrusionSet](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteKillChainPhase(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.KillChainPhase](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteLabel(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Label](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteLanguage(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Language](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteLocation(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Location](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteMalware(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Malware](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteMalwareAnalysis(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.MalwareAnalysis](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteMarkingDefinition(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.MarkingDefinition](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteNarrative(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Narrative](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteNote(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Note](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteObservedData(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.ObservedData](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteOpinion(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Opinion](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteReport(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Report](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteRole(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[system.Role](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteStatusTemplate(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[system.StatusTemplate](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteStixCoreObject(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.StixCoreObject](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteStixCoreRelationship(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.StixCoreRelationship](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteStixCyberObservable(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.StixCyberObservable](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteStixDomainObject(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.StixDomainObject](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteSubType(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[system.SubType](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteTask(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Task](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteTaskTemplate(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[system.TaskTemplate](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteThreatActorGroup(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.ThreatActorGroup](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteThreatActorIndividual(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.ThreatActorIndividual](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteTool(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Tool](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteUser(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[system.User](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteVocabulary(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Vocabulary](ctx, client, id)
}

func (client *OpenCTIAPIClient) DeleteVulnerability(
	ctx context.Context,
	id string,
) (string, error) {
	return api.Delete[entity.Vulnerability](ctx, client, id)
}
