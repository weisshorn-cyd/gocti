// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type Infrastructure struct {
	graphql.Infrastructure `gocti:",squash"`
}

//go:embed default_properties/infrastructure_default_properties.txt
var infrastructureDefaultProperties string

func (i Infrastructure) DefaultProperties() string {
	return infrastructureDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/infrastructure_list_query.txt
var infrastructureListQueryString string

func (i Infrastructure) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		infrastructureListQueryString,
		customAttributes,
	)
}

func (i Infrastructure) ListResponseField() string { return "infrastructures" }

// Implementing the [api.ReadableEntity] interface.

func (i Infrastructure) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            infrastructure (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (i Infrastructure) ReadResponseField() string { return "infrastructure" }

// Implementing the [api.CreatableEntity] interface.

func (i Infrastructure) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: InfrastructureAddInput!) {
            infrastructureAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (i Infrastructure) CreateResponseField() string { return "infrastructureAdd" }

// InfrastructureAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type InfrastructureAddInput struct {
	// InfrastructureAddInput
	StixID              string     `gocti:"stix_id"               json:"stix_id,omitempty"`
	XOpenctiStixIDs     []string   `gocti:"x_opencti_stix_ids"    json:"x_opencti_stix_ids,omitempty"`
	Name                string     `gocti:"name"                  json:"name,omitempty"`
	Description         string     `gocti:"description"           json:"description,omitempty"`
	Aliases             []string   `gocti:"aliases"               json:"aliases,omitempty"`
	InfrastructureTypes []string   `gocti:"infrastructure_types"  json:"infrastructure_types,omitempty"`
	FirstSeen           *time.Time `gocti:"first_seen"            json:"first_seen,omitempty"`
	LastSeen            *time.Time `gocti:"last_seen"             json:"last_seen,omitempty"`
	Confidence          int        `gocti:"confidence"            json:"confidence,omitempty"`
	Revoked             bool       `gocti:"revoked"               json:"revoked,omitempty"`
	Lang                string     `gocti:"lang"                  json:"lang,omitempty"`
	CreatedBy           string     `gocti:"createdBy"             json:"createdBy,omitempty"`
	ObjectOrganization  []string   `gocti:"objectOrganization"    json:"objectOrganization,omitempty"`
	ObjectMarking       []string   `gocti:"objectMarking"         json:"objectMarking,omitempty"`
	ObjectLabel         []string   `gocti:"objectLabel"           json:"objectLabel,omitempty"`
	ExternalReferences  []string   `gocti:"externalReferences"    json:"externalReferences,omitempty"`
	KillChainPhases     []string   `gocti:"killChainPhases"       json:"killChainPhases,omitempty"`
	Created             *time.Time `gocti:"created"               json:"created,omitempty"`
	Modified            *time.Time `gocti:"modified"              json:"modified,omitempty"`
	XOpenctiWorkflowID  string     `gocti:"x_opencti_workflow_id" json:"x_opencti_workflow_id,omitempty"`
	ClientMutationID    string     `gocti:"clientMutationId"      json:"clientMutationId,omitempty"`
	Update              bool       `gocti:"update"                json:"update,omitempty"`
	File                []byte     `gocti:"file"                  json:"file,omitempty"`
}

func (input InfrastructureAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (i Infrastructure) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                infrastructureEdit (id: $id) {
                    delete
                }
            }`
}

func (i Infrastructure) DeleteResponseField() string { return "infrastructureEdit" }
