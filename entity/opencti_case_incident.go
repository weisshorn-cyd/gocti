// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type CaseIncident struct {
	graphql.CaseIncident `gocti:",squash"`
}

//go:embed default_properties/case_incident_default_properties.txt
var caseIncidentDefaultProperties string

func (c CaseIncident) DefaultProperties() string {
	return caseIncidentDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/case_incident_list_query.txt
var caseIncidentListQueryString string

func (c CaseIncident) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		caseIncidentListQueryString,
		customAttributes,
	)
}

func (c CaseIncident) ListResponseField() string { return "caseIncidents" }

// Implementing the [api.ReadableEntity] interface.

func (c CaseIncident) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            caseIncident (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (c CaseIncident) ReadResponseField() string { return "caseIncident" }

// Implementing the [api.CreatableEntity] interface.

func (c CaseIncident) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: CaseIncidentAddInput!) {
            caseIncidentAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (c CaseIncident) CreateResponseField() string { return "caseIncidentAdd" }

// CaseIncidentAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CaseIncidentAddInput struct {
	// CaseIncidentAddInput
	StixID             string                      `gocti:"stix_id"               json:"stix_id,omitempty"`
	XOpenctiStixIDs    []string                    `gocti:"x_opencti_stix_ids"    json:"x_opencti_stix_ids,omitempty"`
	Name               string                      `gocti:"name"                  json:"name,omitempty"`
	Severity           string                      `gocti:"severity"              json:"severity,omitempty"`
	Priority           string                      `gocti:"priority"              json:"priority,omitempty"`
	Description        string                      `gocti:"description"           json:"description,omitempty"`
	Content            string                      `gocti:"content"               json:"content,omitempty"`
	ContentMapping     string                      `gocti:"content_mapping"       json:"content_mapping,omitempty"`
	Confidence         int                         `gocti:"confidence"            json:"confidence,omitempty"`
	Revoked            bool                        `gocti:"revoked"               json:"revoked,omitempty"`
	Lang               string                      `gocti:"lang"                  json:"lang,omitempty"`
	Objects            []string                    `gocti:"objects"               json:"objects,omitempty"`
	CreatedBy          string                      `gocti:"createdBy"             json:"createdBy,omitempty"`
	ObjectMarking      []string                    `gocti:"objectMarking"         json:"objectMarking,omitempty"`
	ObjectAssignee     []string                    `gocti:"objectAssignee"        json:"objectAssignee,omitempty"`
	ObjectParticipant  []string                    `gocti:"objectParticipant"     json:"objectParticipant,omitempty"`
	ObjectOrganization []string                    `gocti:"objectOrganization"    json:"objectOrganization,omitempty"`
	ObjectLabel        []string                    `gocti:"objectLabel"           json:"objectLabel,omitempty"`
	ExternalReferences []string                    `gocti:"externalReferences"    json:"externalReferences,omitempty"`
	Created            *time.Time                  `gocti:"created"               json:"created,omitempty"`
	Modified           *time.Time                  `gocti:"modified"              json:"modified,omitempty"`
	ResponseTypes      []string                    `gocti:"response_types"        json:"response_types,omitempty"`
	CaseTemplates      []string                    `gocti:"caseTemplates"         json:"caseTemplates,omitempty"`
	XOpenctiWorkflowID string                      `gocti:"x_opencti_workflow_id" json:"x_opencti_workflow_id,omitempty"`
	File               []byte                      `gocti:"file"                  json:"file,omitempty"`
	ClientMutationID   string                      `gocti:"clientMutationId"      json:"clientMutationId,omitempty"`
	Update             bool                        `gocti:"update"                json:"update,omitempty"`
	AuthorizedMembers  []graphql.MemberAccessInput `gocti:"authorized_members"    json:"authorized_members,omitempty"`
}

func (input CaseIncidentAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (c CaseIncident) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                caseIncidentDelete (id: $id)
            }`
}

func (c CaseIncident) DeleteResponseField() string { return "caseIncidentDelete" }
