// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type Malware struct {
	graphql.Malware `gocti:",squash"`
}

//go:embed default_properties/malware_default_properties.txt
var malwareDefaultProperties string

func (m Malware) DefaultProperties() string {
	return malwareDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/malware_list_query.txt
var malwareListQueryString string

func (m Malware) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		malwareListQueryString,
		customAttributes,
	)
}

func (m Malware) ListResponseField() string { return "malwares" }

// Implementing the [api.ReadableEntity] interface.

func (m Malware) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String) {
            malware (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (m Malware) ReadResponseField() string { return "malware" }

// Implementing the [api.CreatableEntity] interface.

func (m Malware) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: MalwareAddInput!) {
            malwareAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (m Malware) CreateResponseField() string { return "malwareAdd" }

// MalwareAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MalwareAddInput struct {
	// MalwareAddInput
	StixID                    string     `gocti:"stix_id"                     json:"stix_id,omitempty"`
	XOpenctiStixIDs           []string   `gocti:"x_opencti_stix_ids"          json:"x_opencti_stix_ids,omitempty"`
	Name                      string     `gocti:"name"                        json:"name,omitempty"`
	Description               string     `gocti:"description"                 json:"description,omitempty"`
	MalwareTypes              []string   `gocti:"malware_types"               json:"malware_types,omitempty"`
	Aliases                   []string   `gocti:"aliases"                     json:"aliases,omitempty"`
	IsFamily                  bool       `gocti:"is_family"                   json:"is_family,omitempty"`
	FirstSeen                 *time.Time `gocti:"first_seen"                  json:"first_seen,omitempty"`
	LastSeen                  *time.Time `gocti:"last_seen"                   json:"last_seen,omitempty"`
	ArchitectureExecutionEnvs []string   `gocti:"architecture_execution_envs" json:"architecture_execution_envs,omitempty"`
	ImplementationLanguages   []string   `gocti:"implementation_languages"    json:"implementation_languages,omitempty"`
	Capabilities              []string   `gocti:"capabilities"                json:"capabilities,omitempty"`
	Confidence                int        `gocti:"confidence"                  json:"confidence,omitempty"`
	Revoked                   bool       `gocti:"revoked"                     json:"revoked,omitempty"`
	Lang                      string     `gocti:"lang"                        json:"lang,omitempty"`
	CreatedBy                 string     `gocti:"createdBy"                   json:"createdBy,omitempty"`
	ObjectMarking             []string   `gocti:"objectMarking"               json:"objectMarking,omitempty"`
	ObjectAssignee            []string   `gocti:"objectAssignee"              json:"objectAssignee,omitempty"`
	ObjectOrganization        []string   `gocti:"objectOrganization"          json:"objectOrganization,omitempty"`
	ObjectLabel               []string   `gocti:"objectLabel"                 json:"objectLabel,omitempty"`
	ExternalReferences        []string   `gocti:"externalReferences"          json:"externalReferences,omitempty"`
	KillChainPhases           []string   `gocti:"killChainPhases"             json:"killChainPhases,omitempty"`
	Samples                   []string   `gocti:"samples"                     json:"samples,omitempty"`
	Created                   *time.Time `gocti:"created"                     json:"created,omitempty"`
	Modified                  *time.Time `gocti:"modified"                    json:"modified,omitempty"`
	XOpenctiWorkflowID        string     `gocti:"x_opencti_workflow_id"       json:"x_opencti_workflow_id,omitempty"`
	ClientMutationID          string     `gocti:"clientMutationId"            json:"clientMutationId,omitempty"`
	Update                    bool       `gocti:"update"                      json:"update,omitempty"`
	File                      []byte     `gocti:"file"                        json:"file,omitempty"`
}

func (input MalwareAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (m Malware) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                malwareEdit (id: $id) {
                    delete
                }
            }`
}

func (m Malware) DeleteResponseField() string { return "malwareEdit" }
