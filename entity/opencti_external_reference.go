// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type ExternalReference struct {
	graphql.ExternalReference `gocti:",squash"`
}

//go:embed default_properties/external_reference_default_properties.txt
var externalReferenceDefaultProperties string

func (e ExternalReference) DefaultProperties() string {
	return externalReferenceDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/external_reference_list_query.txt
var externalReferenceListQueryString string

func (e ExternalReference) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		externalReferenceListQueryString,
		customAttributes,
	)
}

func (e ExternalReference) ListResponseField() string { return "externalReferences" }

// Implementing the [api.ReadableEntity] interface.

func (e ExternalReference) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            externalReference (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (e ExternalReference) ReadResponseField() string { return "externalReference" }

// Implementing the [api.CreatableEntity] interface.

func (e ExternalReference) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: ExternalReferenceAddInput!) {
            externalReferenceAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (e ExternalReference) CreateResponseField() string { return "externalReferenceAdd" }

// ExternalReferenceAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ExternalReferenceAddInput struct {
	// ExternalReferenceAddInput
	StixID           string     `gocti:"stix_id"            json:"stix_id,omitempty"`
	XOpenctiStixIDs  []string   `gocti:"x_opencti_stix_ids" json:"x_opencti_stix_ids,omitempty"`
	SourceName       string     `gocti:"source_name"        json:"source_name,omitempty"`
	Description      string     `gocti:"description"        json:"description,omitempty"`
	URL              string     `gocti:"url"                json:"url,omitempty"`
	Hash             string     `gocti:"hash"               json:"hash,omitempty"`
	File             []byte     `gocti:"file"               json:"file,omitempty"`
	ExternalID       string     `gocti:"external_id"        json:"external_id,omitempty"`
	Created          *time.Time `gocti:"created"            json:"created,omitempty"`
	Modified         *time.Time `gocti:"modified"           json:"modified,omitempty"`
	ClientMutationID string     `gocti:"clientMutationId"   json:"clientMutationId,omitempty"`
	Update           bool       `gocti:"update"             json:"update,omitempty"`
}

func (input ExternalReferenceAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (e ExternalReference) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                externalReferenceEdit (id: $id) {
                    delete
                }
            }`
}

func (e ExternalReference) DeleteResponseField() string { return "externalReferenceEdit" }
