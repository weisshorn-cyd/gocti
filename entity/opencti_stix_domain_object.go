// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type StixDomainObject struct {
	graphql.StixDomainObject `gocti:",squash"`
}

//go:embed default_properties/stix_domain_object_default_properties.txt
var stixDomainObjectDefaultProperties string

func (s StixDomainObject) DefaultProperties() string {
	return stixDomainObjectDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/stix_domain_object_list_query.txt
var stixDomainObjectListQueryString string

func (s StixDomainObject) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		stixDomainObjectListQueryString,
		customAttributes,
	)
}

func (s StixDomainObject) ListResponseField() string { return "stixDomainObjects" }

// Implementing the [api.ReadableEntity] interface.

func (s StixDomainObject) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            stixDomainObject (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (s StixDomainObject) ReadResponseField() string { return "stixDomainObject" }

// Implementing the [api.CreatableEntity] interface.

func (s StixDomainObject) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: StixDomainObjectAddInput!) {
            stixDomainObjectAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (s StixDomainObject) CreateResponseField() string { return "stixDomainObjectAdd" }

// StixDomainObjectAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixDomainObjectAddInput struct {
	// StixDomainObjectAddInput
	StixID             string     `gocti:"stix_id"            json:"stix_id,omitempty"`
	XOpenctiStixIDs    []string   `gocti:"x_opencti_stix_ids" json:"x_opencti_stix_ids,omitempty"`
	Name               string     `gocti:"name"               json:"name,omitempty"`
	Description        string     `gocti:"description"        json:"description,omitempty"`
	Confidence         int        `gocti:"confidence"         json:"confidence,omitempty"`
	PatternType        string     `gocti:"pattern_type"       json:"pattern_type,omitempty"`
	Context            string     `gocti:"context"            json:"context,omitempty"`
	Pattern            string     `gocti:"pattern"            json:"pattern,omitempty"`
	Aliases            []string   `gocti:"aliases"            json:"aliases,omitempty"`
	XOpenctiAliases    []string   `gocti:"x_opencti_aliases"  json:"x_opencti_aliases,omitempty"`
	Type               string     `gocti:"type"               json:"type,omitempty"`
	CreatedBy          string     `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []string   `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectLabel        []string   `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	KillChainPhases    []string   `gocti:"killChainPhases"    json:"killChainPhases,omitempty"`
	ExternalReferences []string   `gocti:"externalReferences" json:"externalReferences,omitempty"`
	Objects            []string   `gocti:"objects"            json:"objects,omitempty"`
	ClientMutationID   string     `gocti:"clientMutationId"   json:"clientMutationId,omitempty"`
	Created            *time.Time `gocti:"created"            json:"created,omitempty"`
	Modified           *time.Time `gocti:"modified"           json:"modified,omitempty"`
	Update             bool       `gocti:"update"             json:"update,omitempty"`
}

func (input StixDomainObjectAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (s StixDomainObject) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                stixDomainObjectEdit (id: $id) {
                    delete
                }
            }`
}

func (s StixDomainObject) DeleteResponseField() string { return "stixDomainObjectEdit" }
