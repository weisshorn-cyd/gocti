// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type Vocabulary struct {
	graphql.Vocabulary `gocti:",squash"`
}

//go:embed default_properties/vocabulary_default_properties.txt
var vocabularyDefaultProperties string

func (v Vocabulary) DefaultProperties() string {
	return vocabularyDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/vocabulary_list_query.txt
var vocabularyListQueryString string

func (v Vocabulary) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		vocabularyListQueryString,
		customAttributes,
	)
}

func (v Vocabulary) ListResponseField() string { return "vocabularies" }

// Implementing the [api.ReadableEntity] interface.

func (v Vocabulary) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            vocabulary (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (v Vocabulary) ReadResponseField() string { return "vocabulary" }

// Implementing the [api.CreatableEntity] interface.

func (v Vocabulary) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: VocabularyAddInput!) {
            vocabularyAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (v Vocabulary) CreateResponseField() string { return "vocabularyAdd" }

// VocabularyAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type VocabularyAddInput struct {
	// VocabularyAddInput
	StixID          string     `gocti:"stix_id"            json:"stix_id,omitempty"`
	XOpenctiStixIDs []string   `gocti:"x_opencti_stix_ids" json:"x_opencti_stix_ids,omitempty"`
	Name            string     `gocti:"name"               json:"name,omitempty"`
	Description     string     `gocti:"description"        json:"description,omitempty"`
	Category        string     `gocti:"category"           json:"category,omitempty"`
	Order           int        `gocti:"order"              json:"order,omitempty"`
	Created         *time.Time `gocti:"created"            json:"created,omitempty"`
	Modified        *time.Time `gocti:"modified"           json:"modified,omitempty"`
	Aliases         []string   `gocti:"aliases"            json:"aliases,omitempty"`
	Update          bool       `gocti:"update"             json:"update,omitempty"`
}

func (input VocabularyAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (v Vocabulary) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                vocabularyDelete (id: $id)
            }`
}

func (v Vocabulary) DeleteResponseField() string { return "vocabularyDelete" }
