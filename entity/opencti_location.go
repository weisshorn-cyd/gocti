// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type Location struct {
	graphql.Location `gocti:",squash"`
}

//go:embed default_properties/location_default_properties.txt
var locationDefaultProperties string

func (l Location) DefaultProperties() string {
	return locationDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/location_list_query.txt
var locationListQueryString string

func (l Location) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		locationListQueryString,
		customAttributes,
	)
}

func (l Location) ListResponseField() string { return "locations" }

// Implementing the [api.ReadableEntity] interface.

func (l Location) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            location (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (l Location) ReadResponseField() string { return "location" }

// Implementing the [api.CreatableEntity] interface.

func (l Location) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: LocationAddInput!) {
            locationAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (l Location) CreateResponseField() string { return "locationAdd" }

// LocationAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type LocationAddInput struct {
	// LocationAddInput
	StixID             string     `gocti:"stix_id"               json:"stix_id,omitempty"`
	XOpenctiStixIDs    []string   `gocti:"x_opencti_stix_ids"    json:"x_opencti_stix_ids,omitempty"`
	Type               string     `gocti:"type"                  json:"type,omitempty"`
	Name               string     `gocti:"name"                  json:"name,omitempty"`
	Description        string     `gocti:"description"           json:"description,omitempty"`
	Latitude           float64    `gocti:"latitude"              json:"latitude,omitempty"`
	Longitude          float64    `gocti:"longitude"             json:"longitude,omitempty"`
	Precision          float64    `gocti:"precision"             json:"precision,omitempty"`
	XOpenctiAliases    []string   `gocti:"x_opencti_aliases"     json:"x_opencti_aliases,omitempty"`
	Confidence         int        `gocti:"confidence"            json:"confidence,omitempty"`
	Revoked            bool       `gocti:"revoked"               json:"revoked,omitempty"`
	Lang               string     `gocti:"lang"                  json:"lang,omitempty"`
	CreatedBy          string     `gocti:"createdBy"             json:"createdBy,omitempty"`
	ObjectMarking      []string   `gocti:"objectMarking"         json:"objectMarking,omitempty"`
	ObjectLabel        []string   `gocti:"objectLabel"           json:"objectLabel,omitempty"`
	ExternalReferences []string   `gocti:"externalReferences"    json:"externalReferences,omitempty"`
	ClientMutationID   string     `gocti:"clientMutationId"      json:"clientMutationId,omitempty"`
	Created            *time.Time `gocti:"created"               json:"created,omitempty"`
	Modified           *time.Time `gocti:"modified"              json:"modified,omitempty"`
	XOpenctiWorkflowID string     `gocti:"x_opencti_workflow_id" json:"x_opencti_workflow_id,omitempty"`
	Update             bool       `gocti:"update"                json:"update,omitempty"`
}

func (input LocationAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (l Location) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                locationEdit (id: $id) {
                    delete
                }
            }`
}

func (l Location) DeleteResponseField() string { return "locationEdit" }
