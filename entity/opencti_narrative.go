// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type Narrative struct {
	graphql.Narrative `gocti:",squash"`
}

//go:embed default_properties/narrative_default_properties.txt
var narrativeDefaultProperties string

func (n Narrative) DefaultProperties() string {
	return narrativeDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/narrative_list_query.txt
var narrativeListQueryString string

func (n Narrative) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		narrativeListQueryString,
		customAttributes,
	)
}

func (n Narrative) ListResponseField() string { return "narratives" }

// Implementing the [api.ReadableEntity] interface.

func (n Narrative) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            narrative (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (n Narrative) ReadResponseField() string { return "narrative" }

// Implementing the [api.CreatableEntity] interface.

func (n Narrative) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: NarrativeAddInput!) {
            narrativeAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (n Narrative) CreateResponseField() string { return "narrativeAdd" }

// NarrativeAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type NarrativeAddInput struct {
	// NarrativeAddInput
	StixID             string     `gocti:"stix_id"               json:"stix_id,omitempty"`
	XOpenctiStixIDs    []string   `gocti:"x_opencti_stix_ids"    json:"x_opencti_stix_ids,omitempty"`
	Name               string     `gocti:"name"                  json:"name,omitempty"`
	Description        string     `gocti:"description"           json:"description,omitempty"`
	NarrativeTypes     []string   `gocti:"narrative_types"       json:"narrative_types,omitempty"`
	Aliases            []string   `gocti:"aliases"               json:"aliases,omitempty"`
	Confidence         int        `gocti:"confidence"            json:"confidence,omitempty"`
	Revoked            bool       `gocti:"revoked"               json:"revoked,omitempty"`
	Lang               string     `gocti:"lang"                  json:"lang,omitempty"`
	CreatedBy          string     `gocti:"createdBy"             json:"createdBy,omitempty"`
	ObjectMarking      []string   `gocti:"objectMarking"         json:"objectMarking,omitempty"`
	ObjectOrganization []string   `gocti:"objectOrganization"    json:"objectOrganization,omitempty"`
	ObjectLabel        []string   `gocti:"objectLabel"           json:"objectLabel,omitempty"`
	ExternalReferences []string   `gocti:"externalReferences"    json:"externalReferences,omitempty"`
	Created            *time.Time `gocti:"created"               json:"created,omitempty"`
	Modified           *time.Time `gocti:"modified"              json:"modified,omitempty"`
	ClientMutationID   string     `gocti:"clientMutationId"      json:"clientMutationId,omitempty"`
	Update             bool       `gocti:"update"                json:"update,omitempty"`
	File               []byte     `gocti:"file"                  json:"file,omitempty"`
	XOpenctiWorkflowID string     `gocti:"x_opencti_workflow_id" json:"x_opencti_workflow_id,omitempty"`
}

func (input NarrativeAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (n Narrative) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                narrativeDelete (id: $id)
            }`
}

func (n Narrative) DeleteResponseField() string { return "narrativeDelete" }
