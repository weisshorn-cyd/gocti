// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type Report struct {
	graphql.Report `gocti:",squash"`
}

//go:embed default_properties/report_default_properties.txt
var reportDefaultProperties string

func (r Report) DefaultProperties() string {
	return reportDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/report_list_query.txt
var reportListQueryString string

func (r Report) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		reportListQueryString,
		customAttributes,
	)
}

func (r Report) ListResponseField() string { return "reports" }

// Implementing the [api.ReadableEntity] interface.

func (r Report) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String) {
            report (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (r Report) ReadResponseField() string { return "report" }

// Implementing the [api.CreatableEntity] interface.

func (r Report) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: ReportAddInput!) {
            reportAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (r Report) CreateResponseField() string { return "reportAdd" }

// ReportAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ReportAddInput struct {
	// ReportAddInput
	StixID              string                      `gocti:"stix_id"               json:"stix_id,omitempty"`
	XOpenctiStixIDs     []string                    `gocti:"x_opencti_stix_ids"    json:"x_opencti_stix_ids,omitempty"`
	Name                string                      `gocti:"name"                  json:"name,omitempty"`
	Description         string                      `gocti:"description"           json:"description,omitempty"`
	Content             string                      `gocti:"content"               json:"content,omitempty"`
	ContentMapping      string                      `gocti:"content_mapping"       json:"content_mapping,omitempty"`
	Published           *time.Time                  `gocti:"published"             json:"published,omitempty"`
	ReportTypes         []graphql.ReportType        `gocti:"report_types"          json:"report_types,omitempty"`
	XOpenctiReliability string                      `gocti:"x_opencti_reliability" json:"x_opencti_reliability,omitempty"`
	Revoked             bool                        `gocti:"revoked"               json:"revoked,omitempty"`
	Lang                string                      `gocti:"lang"                  json:"lang,omitempty"`
	Confidence          int                         `gocti:"confidence"            json:"confidence,omitempty"`
	CreatedBy           string                      `gocti:"createdBy"             json:"createdBy,omitempty"`
	ObjectOrganization  []string                    `gocti:"objectOrganization"    json:"objectOrganization,omitempty"`
	ObjectMarking       []string                    `gocti:"objectMarking"         json:"objectMarking,omitempty"`
	ObjectAssignee      []string                    `gocti:"objectAssignee"        json:"objectAssignee,omitempty"`
	ObjectParticipant   []string                    `gocti:"objectParticipant"     json:"objectParticipant,omitempty"`
	ObjectLabel         []string                    `gocti:"objectLabel"           json:"objectLabel,omitempty"`
	ExternalReferences  []string                    `gocti:"externalReferences"    json:"externalReferences,omitempty"`
	Objects             []string                    `gocti:"objects"               json:"objects,omitempty"`
	Created             *time.Time                  `gocti:"created"               json:"created,omitempty"`
	Modified            *time.Time                  `gocti:"modified"              json:"modified,omitempty"`
	XOpenctiWorkflowID  string                      `gocti:"x_opencti_workflow_id" json:"x_opencti_workflow_id,omitempty"`
	ClientMutationID    string                      `gocti:"clientMutationId"      json:"clientMutationId,omitempty"`
	Update              bool                        `gocti:"update"                json:"update,omitempty"`
	File                []byte                      `gocti:"file"                  json:"file,omitempty"`
	AuthorizedMembers   []graphql.MemberAccessInput `gocti:"authorized_members"    json:"authorized_members,omitempty"`
}

func (input ReportAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (r Report) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                reportEdit (id: $id) {
                    delete
                }
            }`
}

func (r Report) DeleteResponseField() string { return "reportEdit" }
