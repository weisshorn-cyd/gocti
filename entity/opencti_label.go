// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package entity

import (
	"fmt"
	"time"

	"github.com/weisshorn-cyd/gocti/graphql"

	_ "embed"
)

type Label struct {
	graphql.Label `gocti:",squash"`
}

//go:embed default_properties/label_default_properties.txt
var labelDefaultProperties string

func (l Label) DefaultProperties() string {
	return labelDefaultProperties
}

// Implementing the [api.ListableEntity] interface.

//go:embed list_queries/label_list_query.txt
var labelListQueryString string

func (l Label) ListQueryString(customAttributes string) string {
	return fmt.Sprintf(
		labelListQueryString,
		customAttributes,
	)
}

func (l Label) ListResponseField() string { return "labels" }

// Implementing the [api.ReadableEntity] interface.

func (l Label) ReadQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`query ($id: String!) {
            label (id: $id) {%s}
        }`,
		customAttributes,
	)
}

func (l Label) ReadResponseField() string { return "label" }

// Implementing the [api.CreatableEntity] interface.

func (l Label) CreateQueryString(customAttributes string) string {
	return fmt.Sprintf(
		`mutation ($input: LabelAddInput!) {
            labelAdd (input: $input) {%s}
        }`,
		customAttributes,
	)
}

func (l Label) CreateResponseField() string { return "labelAdd" }

// LabelAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type LabelAddInput struct {
	// LabelAddInput
	StixID           string     `gocti:"stix_id"            json:"stix_id,omitempty"`
	XOpenctiStixIDs  []string   `gocti:"x_opencti_stix_ids" json:"x_opencti_stix_ids,omitempty"`
	Value            string     `gocti:"value"              json:"value,omitempty"`
	Color            string     `gocti:"color"              json:"color,omitempty"`
	Created          *time.Time `gocti:"created"            json:"created,omitempty"`
	Modified         *time.Time `gocti:"modified"           json:"modified,omitempty"`
	ClientMutationID string     `gocti:"clientMutationId"   json:"clientMutationId,omitempty"`
	Update           bool       `gocti:"update"             json:"update,omitempty"`
}

func (input LabelAddInput) Input() (map[string]any, error) {
	return map[string]any{
		"input": input,
	}, nil
}

// Implementing the [api.DeletableEntity] interface.

func (l Label) DeleteQueryString() string {
	return `mutation ($id: ID!) {
                labelEdit (id: $id) {
                    delete
                }
            }`
}

func (l Label) DeleteResponseField() string { return "labelEdit" }
