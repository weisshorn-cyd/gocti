// Code generated by '/tools/gocti_type_generator' for OpenCTI version 6.7.12 - DO NOT EDIT.

package graphql

import (
	"reflect"
	"time"

	"github.com/goccy/go-json"
)

// AdministrativeArea represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AdministrativeArea struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Location
	Name            string   `gocti:"name"              json:"name,omitempty"`
	Description     string   `gocti:"description"       json:"description,omitempty"`
	Latitude        float64  `gocti:"latitude"          json:"latitude,omitempty"`
	Longitude       float64  `gocti:"longitude"         json:"longitude,omitempty"`
	Precision       float64  `gocti:"precision"         json:"precision,omitempty"`
	XOpenctiAliases []string `gocti:"x_opencti_aliases" json:"x_opencti_aliases,omitempty"`

	// AdministrativeArea
	Country Country `gocti:"country" json:"country,omitempty"`
}

func (a AdministrativeArea) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAdministrativeArea AdministrativeArea

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAdministrativeArea)(&a))
}

// Artifact represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Artifact struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// HashedObservable
	Hashes []Hash `gocti:"hashes" json:"hashes,omitempty"`

	// Artifact
	MimeType                string   `gocti:"mime_type"                  json:"mime_type,omitempty"`
	PayloadBin              string   `gocti:"payload_bin"                json:"payload_bin,omitempty"`
	URL                     string   `gocti:"url"                        json:"url,omitempty"`
	EncryptionAlgorithm     string   `gocti:"encryption_algorithm"       json:"encryption_algorithm,omitempty"`
	DecryptionKey           string   `gocti:"decryption_key"             json:"decryption_key,omitempty"`
	XOpenctiAdditionalNames []string `gocti:"x_opencti_additional_names" json:"x_opencti_additional_names,omitempty"`
}

func (a Artifact) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempArtifact Artifact

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempArtifact)(&a))
}

// ArtifactAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ArtifactAddInput struct {
	// ArtifactAddInput
	Hashes                  []HashInput `gocti:"hashes"                     json:"hashes,omitempty"`
	MimeType                string      `gocti:"mime_type"                  json:"mime_type,omitempty"`
	PayloadBin              string      `gocti:"payload_bin"                json:"payload_bin,omitempty"`
	URL                     string      `gocti:"url"                        json:"url,omitempty"`
	EncryptionAlgorithm     string      `gocti:"encryption_algorithm"       json:"encryption_algorithm,omitempty"`
	DecryptionKey           string      `gocti:"decryption_key"             json:"decryption_key,omitempty"`
	XOpenctiAdditionalNames []string    `gocti:"x_opencti_additional_names" json:"x_opencti_additional_names,omitempty"`
	File                    []byte      `gocti:"file"                       json:"file,omitempty"`
}

func (a ArtifactAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempArtifactAddInput ArtifactAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempArtifactAddInput)(&a))
}

// Assignee represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Assignee struct {
	// Assignee
	ID         string `gocti:"id"          json:"id,omitempty"`
	Name       string `gocti:"name"        json:"name,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`
}

func (a Assignee) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAssignee Assignee

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAssignee)(&a))
}

// AttackPattern represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AttackPattern struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// AttackPattern
	Name                      string                   `gocti:"name"                         json:"name,omitempty"`
	Description               string                   `gocti:"description"                  json:"description,omitempty"`
	Aliases                   []string                 `gocti:"aliases"                      json:"aliases,omitempty"`
	XMitrePlatforms           []string                 `gocti:"x_mitre_platforms"            json:"x_mitre_platforms,omitempty"`
	XMitrePermissionsRequired []string                 `gocti:"x_mitre_permissions_required" json:"x_mitre_permissions_required,omitempty"`
	XMitreDetection           string                   `gocti:"x_mitre_detection"            json:"x_mitre_detection,omitempty"`
	XMitreID                  string                   `gocti:"x_mitre_id"                   json:"x_mitre_id,omitempty"`
	KillChainPhases           []KillChainPhase         `gocti:"killChainPhases"              json:"killChainPhases,omitempty"`
	CoursesOfAction           CourseOfActionConnection `gocti:"coursesOfAction"              json:"coursesOfAction,omitempty"`
	ParentAttackPatterns      AttackPatternConnection  `gocti:"parentAttackPatterns"         json:"parentAttackPatterns,omitempty"`
	SubAttackPatterns         AttackPatternConnection  `gocti:"subAttackPatterns"            json:"subAttackPatterns,omitempty"`
	IsSubAttackPattern        bool                     `gocti:"isSubAttackPattern"           json:"isSubAttackPattern,omitempty"`
	DataComponents            DataComponentConnection  `gocti:"dataComponents"               json:"dataComponents,omitempty"`
}

func (a AttackPattern) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAttackPattern AttackPattern

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAttackPattern)(&a))
}

// AttackPatternConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AttackPatternConnection struct {
	// AttackPatternConnection
	PageInfo PageInfo            `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []AttackPatternEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (a AttackPatternConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAttackPatternConnection AttackPatternConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAttackPatternConnection)(&a))
}

// AttackPatternEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AttackPatternEdge struct {
	// AttackPatternEdge
	Cursor string        `gocti:"cursor" json:"cursor,omitempty"`
	Node   AttackPattern `gocti:"node"   json:"node,omitempty"`
}

func (a AttackPatternEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAttackPatternEdge AttackPatternEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAttackPatternEdge)(&a))
}

// AttributeBasedOn represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AttributeBasedOn struct {
	// AttributeBasedOn
	Identifier      string   `gocti:"identifier"      json:"identifier,omitempty"`
	Representations []string `gocti:"representations" json:"representations,omitempty"`
}

func (a AttributeBasedOn) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAttributeBasedOn AttributeBasedOn

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAttributeBasedOn)(&a))
}

// AttributeColumn represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AttributeColumn struct {
	// AttributeColumn
	ColumnName    string                       `gocti:"column_name"   json:"column_name,omitempty"`
	Configuration AttributeColumnConfiguration `gocti:"configuration" json:"configuration,omitempty"`
}

func (a AttributeColumn) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAttributeColumn AttributeColumn

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAttributeColumn)(&a))
}

// AttributeColumnConfiguration represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AttributeColumnConfiguration struct {
	// AttributeColumnConfiguration
	Separator   string `gocti:"separator"    json:"separator,omitempty"`
	PatternDate string `gocti:"pattern_date" json:"pattern_date,omitempty"`
	Timezone    string `gocti:"timezone"     json:"timezone,omitempty"`
}

func (a AttributeColumnConfiguration) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAttributeColumnConfiguration AttributeColumnConfiguration

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAttributeColumnConfiguration)(&a))
}

// AttributeRef represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AttributeRef struct {
	// AttributeRef
	Multiple bool     `gocti:"multiple" json:"multiple,omitempty"`
	ID       string   `gocti:"id"       json:"id,omitempty"`
	IDs      []string `gocti:"ids"      json:"ids,omitempty"`
}

func (a AttributeRef) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAttributeRef AttributeRef

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAttributeRef)(&a))
}

// AutonomousSystem represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AutonomousSystem struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// AutonomousSystem
	Number int    `gocti:"number" json:"number,omitempty"`
	Name   string `gocti:"name"   json:"name,omitempty"`
	Rir    string `gocti:"rir"    json:"rir,omitempty"`
}

func (a AutonomousSystem) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAutonomousSystem AutonomousSystem

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAutonomousSystem)(&a))
}

// AutonomousSystemAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type AutonomousSystemAddInput struct {
	// AutonomousSystemAddInput
	Number int    `gocti:"number" json:"number,omitempty"`
	Name   string `gocti:"name"   json:"name,omitempty"`
	Rir    string `gocti:"rir"    json:"rir,omitempty"`
	File   []byte `gocti:"file"   json:"file,omitempty"`
}

func (a AutonomousSystemAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(a).IsZero() {
		return []byte("null"), nil
	}

	type tempAutonomousSystemAddInput AutonomousSystemAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempAutonomousSystemAddInput)(&a))
}

// BankAccount represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type BankAccount struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// BankAccount
	Iban          string `gocti:"iban"           json:"iban,omitempty"`
	Bic           string `gocti:"bic"            json:"bic,omitempty"`
	AccountNumber string `gocti:"account_number" json:"account_number,omitempty"`
}

func (b BankAccount) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(b).IsZero() {
		return []byte("null"), nil
	}

	type tempBankAccount BankAccount

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempBankAccount)(&b))
}

// BankAccountAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type BankAccountAddInput struct {
	// BankAccountAddInput
	Iban          string `gocti:"iban"           json:"iban,omitempty"`
	Bic           string `gocti:"bic"            json:"bic,omitempty"`
	AccountNumber string `gocti:"account_number" json:"account_number,omitempty"`
	File          []byte `gocti:"file"           json:"file,omitempty"`
}

func (b BankAccountAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(b).IsZero() {
		return []byte("null"), nil
	}

	type tempBankAccountAddInput BankAccountAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempBankAccountAddInput)(&b))
}

// Campaign represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Campaign struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Campaign
	Name        string     `gocti:"name"        json:"name,omitempty"`
	Description string     `gocti:"description" json:"description,omitempty"`
	Aliases     []string   `gocti:"aliases"     json:"aliases,omitempty"`
	FirstSeen   *time.Time `gocti:"first_seen"  json:"first_seen,omitempty"`
	LastSeen    *time.Time `gocti:"last_seen"   json:"last_seen,omitempty"`
	Objective   string     `gocti:"objective"   json:"objective,omitempty"`
}

func (c Campaign) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCampaign Campaign

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCampaign)(&c))
}

// Capability represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Capability struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// Capability
	Name           string            `gocti:"name"            json:"name,omitempty"`
	Description    string            `gocti:"description"     json:"description,omitempty"`
	AttributeOrder int               `gocti:"attribute_order" json:"attribute_order,omitempty"`
	CreatedAt      *time.Time        `gocti:"created_at"      json:"created_at,omitempty"`
	UpdatedAt      *time.Time        `gocti:"updated_at"      json:"updated_at,omitempty"`
	EditContext    []EditUserContext `gocti:"editContext"     json:"editContext,omitempty"`
}

func (c Capability) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCapability Capability

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCapability)(&c))
}

// Case represents a GraphQL INTERFACE
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [CaseIncident]
// - [CaseRfi]
// - [CaseRft]
// - [Feedback]
//
// (See the examples for ways to decode an interface field into an implementation).
type Case struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Case
	Name        string         `gocti:"name"        json:"name,omitempty"`
	Description string         `gocti:"description" json:"description,omitempty"`
	Content     string         `gocti:"content"     json:"content,omitempty"`
	Tasks       TaskConnection `gocti:"tasks"       json:"tasks,omitempty"`

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (c Case) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[CaseIncident](),
		reflect.TypeFor[CaseRfi](),
		reflect.TypeFor[CaseRft](),
		reflect.TypeFor[Feedback](),
	}
}

func (c Case) Remainder() map[string]any {
	return c.Remain
}

func (c Case) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCase Case

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCase)(&c))
}

// CaseConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CaseConnection struct {
	// CaseConnection
	PageInfo PageInfo   `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []CaseEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (c CaseConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCaseConnection CaseConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCaseConnection)(&c))
}

// CaseEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CaseEdge struct {
	// CaseEdge
	Cursor string `gocti:"cursor" json:"cursor,omitempty"`
	Node   Case   `gocti:"node"   json:"node,omitempty"`
}

func (c CaseEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCaseEdge CaseEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCaseEdge)(&c))
}

// CaseIncident represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CaseIncident struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Case
	Name        string         `gocti:"name"        json:"name,omitempty"`
	Description string         `gocti:"description" json:"description,omitempty"`
	Content     string         `gocti:"content"     json:"content,omitempty"`
	Tasks       TaskConnection `gocti:"tasks"       json:"tasks,omitempty"`

	// CaseIncident
	Rating        int      `gocti:"rating"         json:"rating,omitempty"`
	ResponseTypes []string `gocti:"response_types" json:"response_types,omitempty"`
	Severity      string   `gocti:"severity"       json:"severity,omitempty"`
	Priority      string   `gocti:"priority"       json:"priority,omitempty"`
}

func (c CaseIncident) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCaseIncident CaseIncident

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCaseIncident)(&c))
}

// CaseRfi represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CaseRfi struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Case
	Name        string         `gocti:"name"        json:"name,omitempty"`
	Description string         `gocti:"description" json:"description,omitempty"`
	Content     string         `gocti:"content"     json:"content,omitempty"`
	Tasks       TaskConnection `gocti:"tasks"       json:"tasks,omitempty"`

	// CaseRfi
	InformationTypes           []string                      `gocti:"information_types"          json:"information_types,omitempty"`
	Severity                   string                        `gocti:"severity"                   json:"severity,omitempty"`
	Priority                   string                        `gocti:"priority"                   json:"priority,omitempty"`
	XOpenctiRequestAccess      string                        `gocti:"x_opencti_request_access"   json:"x_opencti_request_access,omitempty"`
	RequestAccessConfiguration RfiRequestAccessConfiguration `gocti:"requestAccessConfiguration" json:"requestAccessConfiguration,omitempty"`
	XOpenctiWorkflowID         string                        `gocti:"x_opencti_workflow_id"      json:"x_opencti_workflow_id,omitempty"`
}

func (c CaseRfi) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCaseRfi CaseRfi

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCaseRfi)(&c))
}

// CaseRft represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CaseRft struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Case
	Name        string         `gocti:"name"        json:"name,omitempty"`
	Description string         `gocti:"description" json:"description,omitempty"`
	Content     string         `gocti:"content"     json:"content,omitempty"`
	Tasks       TaskConnection `gocti:"tasks"       json:"tasks,omitempty"`

	// CaseRft
	TakedownTypes []string `gocti:"takedown_types" json:"takedown_types,omitempty"`
	Severity      string   `gocti:"severity"       json:"severity,omitempty"`
	Priority      string   `gocti:"priority"       json:"priority,omitempty"`
}

func (c CaseRft) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCaseRft CaseRft

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCaseRft)(&c))
}

// CaseTemplate represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CaseTemplate struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// CaseTemplate
	Created     *time.Time             `gocti:"created"     json:"created,omitempty"`
	Modified    *time.Time             `gocti:"modified"    json:"modified,omitempty"`
	Name        string                 `gocti:"name"        json:"name,omitempty"`
	Description string                 `gocti:"description" json:"description,omitempty"`
	Tasks       TaskTemplateConnection `gocti:"tasks"       json:"tasks,omitempty"`
}

func (c CaseTemplate) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCaseTemplate CaseTemplate

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCaseTemplate)(&c))
}

// Channel represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Channel struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Channel
	Name         string   `gocti:"name"          json:"name,omitempty"`
	Description  string   `gocti:"description"   json:"description,omitempty"`
	ChannelTypes []string `gocti:"channel_types" json:"channel_types,omitempty"`
	Aliases      []string `gocti:"aliases"       json:"aliases,omitempty"`
}

func (c Channel) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempChannel Channel

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempChannel)(&c))
}

// City represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type City struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Location
	Name            string   `gocti:"name"              json:"name,omitempty"`
	Description     string   `gocti:"description"       json:"description,omitempty"`
	Latitude        float64  `gocti:"latitude"          json:"latitude,omitempty"`
	Longitude       float64  `gocti:"longitude"         json:"longitude,omitempty"`
	Precision       float64  `gocti:"precision"         json:"precision,omitempty"`
	XOpenctiAliases []string `gocti:"x_opencti_aliases" json:"x_opencti_aliases,omitempty"`

	// City
	Country            Country            `gocti:"country"            json:"country,omitempty"`
	AdministrativeArea AdministrativeArea `gocti:"administrativeArea" json:"administrativeArea,omitempty"`
}

func (c City) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCity City

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCity)(&c))
}

// ConfidenceLevel represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ConfidenceLevel struct {
	// ConfidenceLevel
	MaxConfidence int                       `gocti:"max_confidence" json:"max_confidence,omitempty"`
	Overrides     []ConfidenceLevelOverride `gocti:"overrides"      json:"overrides,omitempty"`
}

func (c ConfidenceLevel) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempConfidenceLevel ConfidenceLevel

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempConfidenceLevel)(&c))
}

// ConfidenceLevelOverride represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ConfidenceLevelOverride struct {
	// ConfidenceLevelOverride
	EntityType    string `gocti:"entity_type"    json:"entity_type,omitempty"`
	MaxConfidence int    `gocti:"max_confidence" json:"max_confidence,omitempty"`
}

func (c ConfidenceLevelOverride) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempConfidenceLevelOverride ConfidenceLevelOverride

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempConfidenceLevelOverride)(&c))
}

// Connector represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Connector struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// Connector
	Name                         string                         `gocti:"name"                           json:"name,omitempty"`
	Active                       bool                           `gocti:"active"                         json:"active,omitempty"`
	Auto                         bool                           `gocti:"auto"                           json:"auto,omitempty"`
	OnlyContextual               bool                           `gocti:"only_contextual"                json:"only_contextual,omitempty"`
	PlaybookCompatible           bool                           `gocti:"playbook_compatible"            json:"playbook_compatible,omitempty"`
	ConnectorTriggerFilters      string                         `gocti:"connector_trigger_filters"      json:"connector_trigger_filters,omitempty"`
	ConnectorType                string                         `gocti:"connector_type"                 json:"connector_type,omitempty"`
	ConnectorScope               []string                       `gocti:"connector_scope"                json:"connector_scope,omitempty"`
	ConnectorState               string                         `gocti:"connector_state"                json:"connector_state,omitempty"`
	ConnectorSchema              string                         `gocti:"connector_schema"               json:"connector_schema,omitempty"`
	ConnectorSchemaUi            string                         `gocti:"connector_schema_ui"            json:"connector_schema_ui,omitempty"`
	ConnectorStateReset          bool                           `gocti:"connector_state_reset"          json:"connector_state_reset,omitempty"`
	ConnectorStateTimestamp      *time.Time                     `gocti:"connector_state_timestamp"      json:"connector_state_timestamp,omitempty"`
	ConnectorUserID              string                         `gocti:"connector_user_id"              json:"connector_user_id,omitempty"`
	ConnectorUser                User                           `gocti:"connector_user"                 json:"connector_user,omitempty"`
	ConnectorQueueDetails        ConnectorQueueDetails          `gocti:"connector_queue_details"        json:"connector_queue_details,omitempty"`
	ConnectorInfo                ConnectorInfo                  `gocti:"connector_info"                 json:"connector_info,omitempty"`
	UpdatedAt                    *time.Time                     `gocti:"updated_at"                     json:"updated_at,omitempty"`
	CreatedAt                    *time.Time                     `gocti:"created_at"                     json:"created_at,omitempty"`
	Config                       ConnectorConfig                `gocti:"config"                         json:"config,omitempty"`
	Works                        []Work                         `gocti:"works"                          json:"works,omitempty"`
	IsManaged                    bool                           `gocti:"is_managed"                     json:"is_managed,omitempty"`
	ManagerCurrentStatus         string                         `gocti:"manager_current_status"         json:"manager_current_status,omitempty"`
	ManagerRequestedStatus       string                         `gocti:"manager_requested_status"       json:"manager_requested_status,omitempty"`
	ManagerContractImage         string                         `gocti:"manager_contract_image"         json:"manager_contract_image,omitempty"`
	ManagerContractDefinition    string                         `gocti:"manager_contract_definition"    json:"manager_contract_definition,omitempty"`
	ManagerContractConfiguration []ManagerContractConfiguration `gocti:"manager_contract_configuration" json:"manager_contract_configuration,omitempty"`
	ManagerConnectorLogs         []string                       `gocti:"manager_connector_logs"         json:"manager_connector_logs,omitempty"`
	ManagerContractHash          string                         `gocti:"manager_contract_hash"          json:"manager_contract_hash,omitempty"`
	BuiltIn                      bool                           `gocti:"built_in"                       json:"built_in,omitempty"`
	Configurations               []ConnectorConfiguration       `gocti:"configurations"                 json:"configurations,omitempty"`
}

func (c Connector) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempConnector Connector

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempConnector)(&c))
}

// ConnectorConfig represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ConnectorConfig struct {
	// ConnectorConfig
	Connection        RabbitMQConnection `gocti:"connection"          json:"connection,omitempty"`
	Listen            string             `gocti:"listen"              json:"listen,omitempty"`
	ListenRouting     string             `gocti:"listen_routing"      json:"listen_routing,omitempty"`
	ListenExchange    string             `gocti:"listen_exchange"     json:"listen_exchange,omitempty"`
	ListenCallbackUri string             `gocti:"listen_callback_uri" json:"listen_callback_uri,omitempty"`
	Push              string             `gocti:"push"                json:"push,omitempty"`
	PushRouting       string             `gocti:"push_routing"        json:"push_routing,omitempty"`
	PushExchange      string             `gocti:"push_exchange"       json:"push_exchange,omitempty"`
}

func (c ConnectorConfig) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempConnectorConfig ConnectorConfig

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempConnectorConfig)(&c))
}

// ConnectorConfiguration represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ConnectorConfiguration struct {
	// ConnectorConfiguration
	ID            string `gocti:"id"            json:"id,omitempty"`
	Name          string `gocti:"name"          json:"name,omitempty"`
	Configuration string `gocti:"configuration" json:"configuration,omitempty"`
}

func (c ConnectorConfiguration) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempConnectorConfiguration ConnectorConfiguration

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempConnectorConfiguration)(&c))
}

// ConnectorInfo represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ConnectorInfo struct {
	// ConnectorInfo
	RunAndTerminate   bool       `gocti:"run_and_terminate"   json:"run_and_terminate,omitempty"`
	Buffering         bool       `gocti:"buffering"           json:"buffering,omitempty"`
	QueueThreshold    float64    `gocti:"queue_threshold"     json:"queue_threshold,omitempty"`
	QueueMessagesSize float64    `gocti:"queue_messages_size" json:"queue_messages_size,omitempty"`
	NextRunDatetime   *time.Time `gocti:"next_run_datetime"   json:"next_run_datetime,omitempty"`
	LastRunDatetime   *time.Time `gocti:"last_run_datetime"   json:"last_run_datetime,omitempty"`
}

func (c ConnectorInfo) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempConnectorInfo ConnectorInfo

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempConnectorInfo)(&c))
}

// ConnectorQueueDetails represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ConnectorQueueDetails struct {
	// ConnectorQueueDetails
	MessagesNumber float64 `gocti:"messages_number" json:"messages_number,omitempty"`
	MessagesSize   float64 `gocti:"messages_size"   json:"messages_size,omitempty"`
}

func (c ConnectorQueueDetails) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempConnectorQueueDetails ConnectorQueueDetails

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempConnectorQueueDetails)(&c))
}

// Container represents a GraphQL INTERFACE
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [Note]
// - [ObservedData]
// - [Opinion]
// - [Report]
// - [Grouping]
// - [Task]
// - [CaseIncident]
// - [CaseRfi]
// - [CaseRft]
// - [Feedback]
//
// (See the examples for ways to decode an interface field into an implementation).
type Container struct {
	// Container
	ID                              string                                    `gocti:"id"                                 json:"id,omitempty"`
	StandardID                      string                                    `gocti:"standard_id"                        json:"standard_id,omitempty"`
	EntityType                      string                                    `gocti:"entity_type"                        json:"entity_type,omitempty"`
	ParentTypes                     []string                                  `gocti:"parent_types"                       json:"parent_types,omitempty"`
	SpecVersion                     string                                    `gocti:"spec_version"                       json:"spec_version,omitempty"`
	CreatedAt                       *time.Time                                `gocti:"created_at"                         json:"created_at,omitempty"`
	UpdatedAt                       *time.Time                                `gocti:"updated_at"                         json:"updated_at,omitempty"`
	DraftVersion                    DraftVersion                              `gocti:"draftVersion"                       json:"draftVersion,omitempty"`
	CreatedBy                       Identity                                  `gocti:"createdBy"                          json:"createdBy,omitempty"`
	ObjectMarking                   []MarkingDefinition                       `gocti:"objectMarking"                      json:"objectMarking,omitempty"`
	ObjectOrganization              []Organization                            `gocti:"objectOrganization"                 json:"objectOrganization,omitempty"`
	ObjectLabel                     []Label                                   `gocti:"objectLabel"                        json:"objectLabel,omitempty"`
	ExternalReferences              ExternalReferenceConnection               `gocti:"externalReferences"                 json:"externalReferences,omitempty"`
	OpinionsMetrics                 OpinionsMetrics                           `gocti:"opinions_metrics"                   json:"opinions_metrics,omitempty"`
	Revoked                         bool                                      `gocti:"revoked"                            json:"revoked,omitempty"`
	Confidence                      int                                       `gocti:"confidence"                         json:"confidence,omitempty"`
	Lang                            string                                    `gocti:"lang"                               json:"lang,omitempty"`
	Created                         *time.Time                                `gocti:"created"                            json:"created,omitempty"`
	Modified                        *time.Time                                `gocti:"modified"                           json:"modified,omitempty"`
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`
	Creators                        []Creator                                 `gocti:"creators"                           json:"creators,omitempty"`
	WorkflowEnabled                 bool                                      `gocti:"workflowEnabled"                    json:"workflowEnabled,omitempty"`
	Status                          Status                                    `gocti:"status"                             json:"status,omitempty"`

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (c Container) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[Note](),
		reflect.TypeFor[ObservedData](),
		reflect.TypeFor[Opinion](),
		reflect.TypeFor[Report](),
		reflect.TypeFor[Grouping](),
		reflect.TypeFor[Task](),
		reflect.TypeFor[CaseIncident](),
		reflect.TypeFor[CaseRfi](),
		reflect.TypeFor[CaseRft](),
		reflect.TypeFor[Feedback](),
	}
}

func (c Container) Remainder() map[string]any {
	return c.Remain
}

func (c Container) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempContainer Container

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempContainer)(&c))
}

// ContainerConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ContainerConnection struct {
	// ContainerConnection
	PageInfo PageInfo        `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []ContainerEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (c ContainerConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempContainerConnection ContainerConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempContainerConnection)(&c))
}

// ContainerEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ContainerEdge struct {
	// ContainerEdge
	Cursor string    `gocti:"cursor" json:"cursor,omitempty"`
	Node   Container `gocti:"node"   json:"node,omitempty"`
}

func (c ContainerEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempContainerEdge ContainerEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempContainerEdge)(&c))
}

// Country represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Country struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Location
	Name            string   `gocti:"name"              json:"name,omitempty"`
	Description     string   `gocti:"description"       json:"description,omitempty"`
	Latitude        float64  `gocti:"latitude"          json:"latitude,omitempty"`
	Longitude       float64  `gocti:"longitude"         json:"longitude,omitempty"`
	Precision       float64  `gocti:"precision"         json:"precision,omitempty"`
	XOpenctiAliases []string `gocti:"x_opencti_aliases" json:"x_opencti_aliases,omitempty"`

	// Country
	Region Region `gocti:"region" json:"region,omitempty"`
}

func (c Country) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCountry Country

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCountry)(&c))
}

// CountryConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CountryConnection struct {
	// CountryConnection
	PageInfo PageInfo      `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []CountryEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (c CountryConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCountryConnection CountryConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCountryConnection)(&c))
}

// CountryEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CountryEdge struct {
	// CountryEdge
	Cursor string  `gocti:"cursor" json:"cursor,omitempty"`
	Node   Country `gocti:"node"   json:"node,omitempty"`
}

func (c CountryEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCountryEdge CountryEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCountryEdge)(&c))
}

// CourseOfAction represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CourseOfAction struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// CourseOfAction
	Name                  string                  `gocti:"name"                     json:"name,omitempty"`
	Description           string                  `gocti:"description"              json:"description,omitempty"`
	XOpenctiAliases       []string                `gocti:"x_opencti_aliases"        json:"x_opencti_aliases,omitempty"`
	XMitreID              string                  `gocti:"x_mitre_id"               json:"x_mitre_id,omitempty"`
	XOpenctiThreatHunting string                  `gocti:"x_opencti_threat_hunting" json:"x_opencti_threat_hunting,omitempty"`
	XOpenctiLogSources    []string                `gocti:"x_opencti_log_sources"    json:"x_opencti_log_sources,omitempty"`
	AttackPatterns        AttackPatternConnection `gocti:"attackPatterns"           json:"attackPatterns,omitempty"`
}

func (c CourseOfAction) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCourseOfAction CourseOfAction

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCourseOfAction)(&c))
}

// CourseOfActionConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CourseOfActionConnection struct {
	// CourseOfActionConnection
	PageInfo PageInfo             `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []CourseOfActionEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (c CourseOfActionConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCourseOfActionConnection CourseOfActionConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCourseOfActionConnection)(&c))
}

// CourseOfActionEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CourseOfActionEdge struct {
	// CourseOfActionEdge
	Cursor string         `gocti:"cursor" json:"cursor,omitempty"`
	Node   CourseOfAction `gocti:"node"   json:"node,omitempty"`
}

func (c CourseOfActionEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCourseOfActionEdge CourseOfActionEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCourseOfActionEdge)(&c))
}

// Creator represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Creator struct {
	// Creator
	ID             string         `gocti:"id"             json:"id,omitempty"`
	Name           string         `gocti:"name"           json:"name,omitempty"`
	EntityType     string         `gocti:"entity_type"    json:"entity_type,omitempty"`
	Representative Representative `gocti:"representative" json:"representative,omitempty"`
}

func (c Creator) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCreator Creator

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCreator)(&c))
}

// Credential represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Credential struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// Credential
	Value string `gocti:"value" json:"value,omitempty"`
}

func (c Credential) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCredential Credential

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCredential)(&c))
}

// CredentialAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CredentialAddInput struct {
	// CredentialAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (c CredentialAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCredentialAddInput CredentialAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCredentialAddInput)(&c))
}

// CryptocurrencyWallet represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CryptocurrencyWallet struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// CryptocurrencyWallet
	Value string `gocti:"value" json:"value,omitempty"`
}

func (c CryptocurrencyWallet) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCryptocurrencyWallet CryptocurrencyWallet

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCryptocurrencyWallet)(&c))
}

// CryptocurrencyWalletAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CryptocurrencyWalletAddInput struct {
	// CryptocurrencyWalletAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (c CryptocurrencyWalletAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCryptocurrencyWalletAddInput CryptocurrencyWalletAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCryptocurrencyWalletAddInput)(&c))
}

// CryptographicKey represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CryptographicKey struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// CryptographicKey
	Value string `gocti:"value" json:"value,omitempty"`
}

func (c CryptographicKey) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCryptographicKey CryptographicKey

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCryptographicKey)(&c))
}

// CryptographicKeyAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CryptographicKeyAddInput struct {
	// CryptographicKeyAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (c CryptographicKeyAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCryptographicKeyAddInput CryptographicKeyAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCryptographicKeyAddInput)(&c))
}

// CsvMapper represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CsvMapper struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// CsvMapper
	Name                  string                    `gocti:"name"                  json:"name,omitempty"`
	HasHeader             bool                      `gocti:"has_header"            json:"has_header,omitempty"`
	Separator             string                    `gocti:"separator"             json:"separator,omitempty"`
	SkipLineChar          string                    `gocti:"skipLineChar"          json:"skipLineChar,omitempty"`
	Representations       []CsvMapperRepresentation `gocti:"representations"       json:"representations,omitempty"`
	Errors                string                    `gocti:"errors"                json:"errors,omitempty"`
	ToConfigurationExport string                    `gocti:"toConfigurationExport" json:"toConfigurationExport,omitempty"`
}

func (c CsvMapper) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCsvMapper CsvMapper

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCsvMapper)(&c))
}

type CsvMapperOperator string

const (
	CsvMapperOperatorEq    CsvMapperOperator = "eq"
	CsvMapperOperatorNotEq CsvMapperOperator = "not_eq"
)

func (c CsvMapperOperator) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCsvMapperOperator CsvMapperOperator

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCsvMapperOperator)(&c))
}

// CsvMapperRepresentation represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CsvMapperRepresentation struct {
	// CsvMapperRepresentation
	ID         string                             `gocti:"id"         json:"id,omitempty"`
	Type       CsvMapperRepresentationType        `gocti:"type"       json:"type,omitempty"`
	Target     CsvMapperRepresentationTarget      `gocti:"target"     json:"target,omitempty"`
	Attributes []CsvMapperRepresentationAttribute `gocti:"attributes" json:"attributes,omitempty"`
	From       string                             `gocti:"from"       json:"from,omitempty"`
	To         string                             `gocti:"to"         json:"to,omitempty"`
}

func (c CsvMapperRepresentation) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCsvMapperRepresentation CsvMapperRepresentation

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCsvMapperRepresentation)(&c))
}

// CsvMapperRepresentationAttribute represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CsvMapperRepresentationAttribute struct {
	// CsvMapperRepresentationAttribute
	Key           string           `gocti:"key"            json:"key,omitempty"`
	Column        AttributeColumn  `gocti:"column"         json:"column,omitempty"`
	BasedOn       AttributeBasedOn `gocti:"based_on"       json:"based_on,omitempty"`
	Ref           AttributeRef     `gocti:"ref"            json:"ref,omitempty"`
	DefaultValues []DefaultValue   `gocti:"default_values" json:"default_values,omitempty"`
}

func (c CsvMapperRepresentationAttribute) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCsvMapperRepresentationAttribute CsvMapperRepresentationAttribute

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCsvMapperRepresentationAttribute)(&c))
}

// CsvMapperRepresentationTarget represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CsvMapperRepresentationTarget struct {
	// CsvMapperRepresentationTarget
	EntityType  string                              `gocti:"entity_type"  json:"entity_type,omitempty"`
	ColumnBased CsvMapperRepresentationTargetColumn `gocti:"column_based" json:"column_based,omitempty"`
}

func (c CsvMapperRepresentationTarget) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCsvMapperRepresentationTarget CsvMapperRepresentationTarget

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCsvMapperRepresentationTarget)(&c))
}

// CsvMapperRepresentationTargetColumn represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type CsvMapperRepresentationTargetColumn struct {
	// CsvMapperRepresentationTargetColumn
	ColumnReference string            `gocti:"column_reference" json:"column_reference,omitempty"`
	Operator        CsvMapperOperator `gocti:"operator"         json:"operator,omitempty"`
	Value           string            `gocti:"value"            json:"value,omitempty"`
}

func (c CsvMapperRepresentationTargetColumn) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCsvMapperRepresentationTargetColumn CsvMapperRepresentationTargetColumn

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCsvMapperRepresentationTargetColumn)(&c))
}

type CsvMapperRepresentationType string

const (
	CsvMapperRepresentationTypeEntity       CsvMapperRepresentationType = "entity"
	CsvMapperRepresentationTypeRelationship CsvMapperRepresentationType = "relationship"
)

func (c CsvMapperRepresentationType) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(c).IsZero() {
		return []byte("null"), nil
	}

	type tempCsvMapperRepresentationType CsvMapperRepresentationType

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempCsvMapperRepresentationType)(&c))
}

// DataComponent represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DataComponent struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// DataComponent
	Name           string                  `gocti:"name"           json:"name,omitempty"`
	Description    string                  `gocti:"description"    json:"description,omitempty"`
	Aliases        []string                `gocti:"aliases"        json:"aliases,omitempty"`
	DataSource     DataSource              `gocti:"dataSource"     json:"dataSource,omitempty"`
	AttackPatterns AttackPatternConnection `gocti:"attackPatterns" json:"attackPatterns,omitempty"`
}

func (d DataComponent) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDataComponent DataComponent

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDataComponent)(&d))
}

// DataComponentConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DataComponentConnection struct {
	// DataComponentConnection
	PageInfo PageInfo            `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []DataComponentEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (d DataComponentConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDataComponentConnection DataComponentConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDataComponentConnection)(&d))
}

// DataComponentEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DataComponentEdge struct {
	// DataComponentEdge
	Cursor string        `gocti:"cursor" json:"cursor,omitempty"`
	Node   DataComponent `gocti:"node"   json:"node,omitempty"`
}

func (d DataComponentEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDataComponentEdge DataComponentEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDataComponentEdge)(&d))
}

// DataSource represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DataSource struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// DataSource
	Name             string                  `gocti:"name"              json:"name,omitempty"`
	Description      string                  `gocti:"description"       json:"description,omitempty"`
	Aliases          []string                `gocti:"aliases"           json:"aliases,omitempty"`
	XMitrePlatforms  []string                `gocti:"x_mitre_platforms" json:"x_mitre_platforms,omitempty"`
	CollectionLayers []string                `gocti:"collection_layers" json:"collection_layers,omitempty"`
	DataComponents   DataComponentConnection `gocti:"dataComponents"    json:"dataComponents,omitempty"`
}

func (d DataSource) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDataSource DataSource

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDataSource)(&d))
}

// DecayChartData represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DecayChartData struct {
	// DecayChartData
	LiveScoreSerie []DecayHistory `gocti:"live_score_serie" json:"live_score_serie,omitempty"`
}

func (d DecayChartData) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDecayChartData DecayChartData

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDecayChartData)(&d))
}

// DecayHistory represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DecayHistory struct {
	// DecayHistory
	UpdatedAt *time.Time `gocti:"updated_at" json:"updated_at,omitempty"`
	Score     int        `gocti:"score"      json:"score,omitempty"`
}

func (d DecayHistory) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDecayHistory DecayHistory

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDecayHistory)(&d))
}

// DecayLiveDetails represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DecayLiveDetails struct {
	// DecayLiveDetails
	LiveScore  int            `gocti:"live_score"  json:"live_score,omitempty"`
	LivePoints []DecayHistory `gocti:"live_points" json:"live_points,omitempty"`
}

func (d DecayLiveDetails) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDecayLiveDetails DecayLiveDetails

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDecayLiveDetails)(&d))
}

// DefaultMarking represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DefaultMarking struct {
	// DefaultMarking
	EntityType string              `gocti:"entity_type" json:"entity_type,omitempty"`
	Values     []MarkingDefinition `gocti:"values"      json:"values,omitempty"`
}

func (d DefaultMarking) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDefaultMarking DefaultMarking

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDefaultMarking)(&d))
}

// DefaultValue represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DefaultValue struct {
	// DefaultValue
	ID   string `gocti:"id"   json:"id,omitempty"`
	Name string `gocti:"name" json:"name,omitempty"`
}

func (d DefaultValue) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDefaultValue DefaultValue

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDefaultValue)(&d))
}

// DefaultValueAttribute represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DefaultValueAttribute struct {
	// DefaultValueAttribute
	Name          string         `gocti:"name"          json:"name,omitempty"`
	Type          string         `gocti:"type"          json:"type,omitempty"`
	DefaultValues []DefaultValue `gocti:"defaultValues" json:"defaultValues,omitempty"`
}

func (d DefaultValueAttribute) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDefaultValueAttribute DefaultValueAttribute

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDefaultValueAttribute)(&d))
}

// Dictionary represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Dictionary struct {
	// Dictionary
	Key   string `gocti:"key"   json:"key,omitempty"`
	Value string `gocti:"value" json:"value,omitempty"`
}

func (d Dictionary) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDictionary Dictionary

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDictionary)(&d))
}

// DictionaryInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DictionaryInput struct {
	// DictionaryInput
	Key   string `gocti:"key"   json:"key,omitempty"`
	Value string `gocti:"value" json:"value,omitempty"`
}

func (d DictionaryInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDictionaryInput DictionaryInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDictionaryInput)(&d))
}

// Directory represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Directory struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// Directory
	Path    string     `gocti:"path"     json:"path,omitempty"`
	PathEnc string     `gocti:"path_enc" json:"path_enc,omitempty"`
	Ctime   *time.Time `gocti:"ctime"    json:"ctime,omitempty"`
	Mtime   *time.Time `gocti:"mtime"    json:"mtime,omitempty"`
	Atime   *time.Time `gocti:"atime"    json:"atime,omitempty"`
}

func (d Directory) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDirectory Directory

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDirectory)(&d))
}

// DirectoryAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DirectoryAddInput struct {
	// DirectoryAddInput
	Path    string     `gocti:"path"     json:"path,omitempty"`
	PathEnc string     `gocti:"path_enc" json:"path_enc,omitempty"`
	Ctime   *time.Time `gocti:"ctime"    json:"ctime,omitempty"`
	Mtime   *time.Time `gocti:"mtime"    json:"mtime,omitempty"`
	Atime   *time.Time `gocti:"atime"    json:"atime,omitempty"`
	File    []byte     `gocti:"file"     json:"file,omitempty"`
}

func (d DirectoryAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDirectoryAddInput DirectoryAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDirectoryAddInput)(&d))
}

// DomainName represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DomainName struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// DomainName
	Value string `gocti:"value" json:"value,omitempty"`
}

func (d DomainName) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDomainName DomainName

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDomainName)(&d))
}

// DomainNameAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DomainNameAddInput struct {
	// DomainNameAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (d DomainNameAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDomainNameAddInput DomainNameAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDomainNameAddInput)(&d))
}

type DraftOperation string

const (
	DraftOperationCreate       DraftOperation = "create"
	DraftOperationUpdate       DraftOperation = "update"
	DraftOperationUpdateLinked DraftOperation = "update_linked"
	DraftOperationDelete       DraftOperation = "delete"
	DraftOperationDeleteLinked DraftOperation = "delete_linked"
)

func (d DraftOperation) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDraftOperation DraftOperation

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDraftOperation)(&d))
}

// DraftVersion represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type DraftVersion struct {
	// DraftVersion
	DraftID        string         `gocti:"draft_id"        json:"draft_id,omitempty"`
	DraftOperation DraftOperation `gocti:"draft_operation" json:"draft_operation,omitempty"`
}

func (d DraftVersion) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(d).IsZero() {
		return []byte("null"), nil
	}

	type tempDraftVersion DraftVersion

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempDraftVersion)(&d))
}

// EditUserContext represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EditUserContext struct {
	// EditUserContext
	Name    string `gocti:"name"    json:"name,omitempty"`
	FocusOn string `gocti:"focusOn" json:"focusOn,omitempty"`
}

func (e EditUserContext) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEditUserContext EditUserContext

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEditUserContext)(&e))
}

// EffectiveConfidenceLevel represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EffectiveConfidenceLevel struct {
	// EffectiveConfidenceLevel
	MaxConfidence int                                `gocti:"max_confidence" json:"max_confidence,omitempty"`
	Overrides     []EffectiveConfidenceLevelOverride `gocti:"overrides"      json:"overrides,omitempty"`
	Source        EffectiveConfidenceLevelSource     `gocti:"source"         json:"source,omitempty"`
}

func (e EffectiveConfidenceLevel) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEffectiveConfidenceLevel EffectiveConfidenceLevel

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEffectiveConfidenceLevel)(&e))
}

// EffectiveConfidenceLevelOverride represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EffectiveConfidenceLevelOverride struct {
	// EffectiveConfidenceLevelOverride
	EntityType    string                         `gocti:"entity_type"    json:"entity_type,omitempty"`
	MaxConfidence int                            `gocti:"max_confidence" json:"max_confidence,omitempty"`
	Source        EffectiveConfidenceLevelSource `gocti:"source"         json:"source,omitempty"`
}

func (e EffectiveConfidenceLevelOverride) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEffectiveConfidenceLevelOverride EffectiveConfidenceLevelOverride

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEffectiveConfidenceLevelOverride)(&e))
}

// EffectiveConfidenceLevelSource represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EffectiveConfidenceLevelSource struct {
	// EffectiveConfidenceLevelSource
	Type   EffectiveConfidenceLevelSourceType   `gocti:"type"   json:"type,omitempty"`
	Object EffectiveConfidenceLevelSourceObject `gocti:"object" json:"object,omitempty"`
}

func (e EffectiveConfidenceLevelSource) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEffectiveConfidenceLevelSource EffectiveConfidenceLevelSource

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEffectiveConfidenceLevelSource)(&e))
}

// EffectiveConfidenceLevelSourceObject represents a GraphQL UNION
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [Group]
// - [User]
//
// (See the examples for ways to decode an interface field into an implementation).
type EffectiveConfidenceLevelSourceObject struct {
	// EffectiveConfidenceLevelSourceObject

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (e EffectiveConfidenceLevelSourceObject) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[Group](),
		reflect.TypeFor[User](),
	}
}

func (e EffectiveConfidenceLevelSourceObject) Remainder() map[string]any {
	return e.Remain
}

func (e EffectiveConfidenceLevelSourceObject) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEffectiveConfidenceLevelSourceObject EffectiveConfidenceLevelSourceObject

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEffectiveConfidenceLevelSourceObject)(&e))
}

type EffectiveConfidenceLevelSourceType string

const (
	EffectiveConfidenceLevelSourceTypeUser   EffectiveConfidenceLevelSourceType = "User"
	EffectiveConfidenceLevelSourceTypeGroup  EffectiveConfidenceLevelSourceType = "Group"
	EffectiveConfidenceLevelSourceTypeBypass EffectiveConfidenceLevelSourceType = "Bypass"
)

func (e EffectiveConfidenceLevelSourceType) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEffectiveConfidenceLevelSourceType EffectiveConfidenceLevelSourceType

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEffectiveConfidenceLevelSourceType)(&e))
}

// EmailAddr represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EmailAddr struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// EmailAddr
	Value       string `gocti:"value"        json:"value,omitempty"`
	DisplayName string `gocti:"display_name" json:"display_name,omitempty"`
}

func (e EmailAddr) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEmailAddr EmailAddr

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEmailAddr)(&e))
}

// EmailAddrAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EmailAddrAddInput struct {
	// EmailAddrAddInput
	Value       string `gocti:"value"        json:"value,omitempty"`
	DisplayName string `gocti:"display_name" json:"display_name,omitempty"`
	File        []byte `gocti:"file"         json:"file,omitempty"`
}

func (e EmailAddrAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEmailAddrAddInput EmailAddrAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEmailAddrAddInput)(&e))
}

// EmailMessage represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EmailMessage struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// EmailMessage
	IsMultipart   bool       `gocti:"is_multipart"   json:"is_multipart,omitempty"`
	AttributeDate *time.Time `gocti:"attribute_date" json:"attribute_date,omitempty"`
	ContentType   string     `gocti:"content_type"   json:"content_type,omitempty"`
	MessageID     string     `gocti:"message_id"     json:"message_id,omitempty"`
	Subject       string     `gocti:"subject"        json:"subject,omitempty"`
	ReceivedLines []string   `gocti:"received_lines" json:"received_lines,omitempty"`
	Body          string     `gocti:"body"           json:"body,omitempty"`
}

func (e EmailMessage) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEmailMessage EmailMessage

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEmailMessage)(&e))
}

// EmailMessageAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EmailMessageAddInput struct {
	// EmailMessageAddInput
	IsMultipart   bool       `gocti:"is_multipart"   json:"is_multipart,omitempty"`
	AttributeDate *time.Time `gocti:"attribute_date" json:"attribute_date,omitempty"`
	ContentType   string     `gocti:"content_type"   json:"content_type,omitempty"`
	MessageID     string     `gocti:"message_id"     json:"message_id,omitempty"`
	Subject       string     `gocti:"subject"        json:"subject,omitempty"`
	ReceivedLines []string   `gocti:"received_lines" json:"received_lines,omitempty"`
	Body          string     `gocti:"body"           json:"body,omitempty"`
	File          []byte     `gocti:"file"           json:"file,omitempty"`
}

func (e EmailMessageAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEmailMessageAddInput EmailMessageAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEmailMessageAddInput)(&e))
}

// EmailMimePartType represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EmailMimePartType struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// EmailMimePartType
	Body               string `gocti:"body"                json:"body,omitempty"`
	ContentType        string `gocti:"content_type"        json:"content_type,omitempty"`
	ContentDisposition string `gocti:"content_disposition" json:"content_disposition,omitempty"`
}

func (e EmailMimePartType) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEmailMimePartType EmailMimePartType

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEmailMimePartType)(&e))
}

// EmailMimePartTypeAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EmailMimePartTypeAddInput struct {
	// EmailMimePartTypeAddInput
	Body               string `gocti:"body"                json:"body,omitempty"`
	ContentType        string `gocti:"content_type"        json:"content_type,omitempty"`
	ContentDisposition string `gocti:"content_disposition" json:"content_disposition,omitempty"`
	File               []byte `gocti:"file"                json:"file,omitempty"`
}

func (e EmailMimePartTypeAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEmailMimePartTypeAddInput EmailMimePartTypeAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEmailMimePartTypeAddInput)(&e))
}

// EntitySetting represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type EntitySetting struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// EntitySetting
	TargetType                  string                        `gocti:"target_type"                   json:"target_type,omitempty"`
	PlatformEntityFilesRef      bool                          `gocti:"platform_entity_files_ref"     json:"platform_entity_files_ref,omitempty"`
	PlatformHiddenType          bool                          `gocti:"platform_hidden_type"          json:"platform_hidden_type,omitempty"`
	EnforceReference            bool                          `gocti:"enforce_reference"             json:"enforce_reference,omitempty"`
	AttributesConfiguration     string                        `gocti:"attributes_configuration"      json:"attributes_configuration,omitempty"`
	AttributesDefinitions       []TypeAttribute               `gocti:"attributesDefinitions"         json:"attributesDefinitions,omitempty"`
	MandatoryAttributes         []string                      `gocti:"mandatoryAttributes"           json:"mandatoryAttributes,omitempty"`
	ScaleAttributes             []ScaleAttribute              `gocti:"scaleAttributes"               json:"scaleAttributes,omitempty"`
	DefaultValuesAttributes     []DefaultValueAttribute       `gocti:"defaultValuesAttributes"       json:"defaultValuesAttributes,omitempty"`
	AvailableSettings           []string                      `gocti:"availableSettings"             json:"availableSettings,omitempty"`
	CreatedAt                   *time.Time                    `gocti:"created_at"                    json:"created_at,omitempty"`
	UpdatedAt                   *time.Time                    `gocti:"updated_at"                    json:"updated_at,omitempty"`
	OverviewLayoutCustomization []OverviewWidgetCustomization `gocti:"overview_layout_customization" json:"overview_layout_customization,omitempty"`
	FintelTemplates             FintelTemplateConnection      `gocti:"fintelTemplates"               json:"fintelTemplates,omitempty"`
	RequestAccessConfiguration  RequestAccessConfiguration    `gocti:"requestAccessConfiguration"    json:"requestAccessConfiguration,omitempty"`
}

func (e EntitySetting) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEntitySetting EntitySetting

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEntitySetting)(&e))
}

// Event represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Event struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Event
	Name        string     `gocti:"name"        json:"name,omitempty"`
	Description string     `gocti:"description" json:"description,omitempty"`
	EventTypes  []string   `gocti:"event_types" json:"event_types,omitempty"`
	StartTime   *time.Time `gocti:"start_time"  json:"start_time,omitempty"`
	StopTime    *time.Time `gocti:"stop_time"   json:"stop_time,omitempty"`
	Aliases     []string   `gocti:"aliases"     json:"aliases,omitempty"`
}

func (e Event) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempEvent Event

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempEvent)(&e))
}

// ExternalReference represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ExternalReference struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixMetaObject
	Created  *time.Time `gocti:"created"  json:"created,omitempty"`
	Modified *time.Time `gocti:"modified" json:"modified,omitempty"`

	// ExternalReference
	SourceName   string                                 `gocti:"source_name"  json:"source_name,omitempty"`
	Description  string                                 `gocti:"description"  json:"description,omitempty"`
	URL          string                                 `gocti:"url"          json:"url,omitempty"`
	Hash         string                                 `gocti:"hash"         json:"hash,omitempty"`
	ExternalID   string                                 `gocti:"external_id"  json:"external_id,omitempty"`
	References   StixObjectOrStixRelationshipConnection `gocti:"references"   json:"references,omitempty"`
	FileID       string                                 `gocti:"fileId"       json:"fileId,omitempty"`
	ImportFiles  FileConnection                         `gocti:"importFiles"  json:"importFiles,omitempty"`
	PendingFiles FileConnection                         `gocti:"pendingFiles" json:"pendingFiles,omitempty"`
	ExportFiles  FileConnection                         `gocti:"exportFiles"  json:"exportFiles,omitempty"`
	EditContext  []EditUserContext                      `gocti:"editContext"  json:"editContext,omitempty"`
	Connectors   []Connector                            `gocti:"connectors"   json:"connectors,omitempty"`
	Jobs         []Work                                 `gocti:"jobs"         json:"jobs,omitempty"`
}

func (e ExternalReference) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempExternalReference ExternalReference

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempExternalReference)(&e))
}

// ExternalReferenceConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ExternalReferenceConnection struct {
	// ExternalReferenceConnection
	PageInfo PageInfo                `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []ExternalReferenceEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (e ExternalReferenceConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempExternalReferenceConnection ExternalReferenceConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempExternalReferenceConnection)(&e))
}

// ExternalReferenceEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ExternalReferenceEdge struct {
	// ExternalReferenceEdge
	Cursor string            `gocti:"cursor" json:"cursor,omitempty"`
	Node   ExternalReference `gocti:"node"   json:"node,omitempty"`
}

func (e ExternalReferenceEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(e).IsZero() {
		return []byte("null"), nil
	}

	type tempExternalReferenceEdge ExternalReferenceEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempExternalReferenceEdge)(&e))
}

// Feedback represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Feedback struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Case
	Name        string         `gocti:"name"        json:"name,omitempty"`
	Description string         `gocti:"description" json:"description,omitempty"`
	Content     string         `gocti:"content"     json:"content,omitempty"`
	Tasks       TaskConnection `gocti:"tasks"       json:"tasks,omitempty"`

	// Feedback
	Rating int `gocti:"rating" json:"rating,omitempty"`
}

func (f Feedback) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(f).IsZero() {
		return []byte("null"), nil
	}

	type tempFeedback Feedback

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempFeedback)(&f))
}

// File represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type File struct {
	// File
	ID                   string              `gocti:"id"                   json:"id,omitempty"`
	EntityType           string              `gocti:"entity_type"          json:"entity_type,omitempty"`
	DraftVersion         DraftVersion        `gocti:"draftVersion"         json:"draftVersion,omitempty"`
	Name                 string              `gocti:"name"                 json:"name,omitempty"`
	Size                 int                 `gocti:"size"                 json:"size,omitempty"`
	LastModified         *time.Time          `gocti:"lastModified"         json:"lastModified,omitempty"`
	LastModifiedSinceMin int                 `gocti:"lastModifiedSinceMin" json:"lastModifiedSinceMin,omitempty"`
	MetaData             FileMetadata        `gocti:"metaData"             json:"metaData,omitempty"`
	ObjectMarking        []MarkingDefinition `gocti:"objectMarking"        json:"objectMarking,omitempty"`
	UploadStatus         State               `gocti:"uploadStatus"         json:"uploadStatus,omitempty"`
	Works                []Work              `gocti:"works"                json:"works,omitempty"`
}

func (f File) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(f).IsZero() {
		return []byte("null"), nil
	}

	type tempFile File

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempFile)(&f))
}

// FileConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type FileConnection struct {
	// FileConnection
	PageInfo PageInfo   `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []FileEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (f FileConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(f).IsZero() {
		return []byte("null"), nil
	}

	type tempFileConnection FileConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempFileConnection)(&f))
}

// FileEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type FileEdge struct {
	// FileEdge
	Cursor string `gocti:"cursor" json:"cursor,omitempty"`
	Node   File   `gocti:"node"   json:"node,omitempty"`
}

func (f FileEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(f).IsZero() {
		return []byte("null"), nil
	}

	type tempFileEdge FileEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempFileEdge)(&f))
}

// FileMetadata represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type FileMetadata struct {
	// FileMetadata
	Encoding              string        `gocti:"encoding"                json:"encoding,omitempty"`
	Mimetype              string        `gocti:"mimetype"                json:"mimetype,omitempty"`
	Version               string        `gocti:"version"                 json:"version,omitempty"`
	Messages              []WorkMessage `gocti:"messages"                json:"messages,omitempty"`
	Errors                []WorkMessage `gocti:"errors"                  json:"errors,omitempty"`
	ListFilters           string        `gocti:"list_filters"            json:"list_filters,omitempty"`
	EntityID              string        `gocti:"entity_id"               json:"entity_id,omitempty"`
	Entity                StixObject    `gocti:"entity"                  json:"entity,omitempty"`
	LabelsText            string        `gocti:"labels_text"             json:"labels_text,omitempty"`
	Labels                []string      `gocti:"labels"                  json:"labels,omitempty"`
	FileMarkings          []string      `gocti:"file_markings"           json:"file_markings,omitempty"`
	CreatorID             string        `gocti:"creator_id"              json:"creator_id,omitempty"`
	ExternalReferenceID   string        `gocti:"external_reference_id"   json:"external_reference_id,omitempty"`
	Creator               Creator       `gocti:"creator"                 json:"creator,omitempty"`
	Description           string        `gocti:"description"             json:"description,omitempty"`
	Order                 int           `gocti:"order"                   json:"order,omitempty"`
	InCarousel            bool          `gocti:"inCarousel"              json:"inCarousel,omitempty"`
	AnalysisContentSource string        `gocti:"analysis_content_source" json:"analysis_content_source,omitempty"`
	AnalysisContentType   string        `gocti:"analysis_content_type"   json:"analysis_content_type,omitempty"`
	AnalysisType          string        `gocti:"analysis_type"           json:"analysis_type,omitempty"`
}

func (f FileMetadata) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(f).IsZero() {
		return []byte("null"), nil
	}

	type tempFileMetadata FileMetadata

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempFileMetadata)(&f))
}

// FintelTemplate represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type FintelTemplate struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// FintelTemplate
	Name                  string                 `gocti:"name"                    json:"name,omitempty"`
	SettingsTypes         []string               `gocti:"settings_types"          json:"settings_types,omitempty"`
	Description           string                 `gocti:"description"             json:"description,omitempty"`
	InstanceFilters       string                 `gocti:"instance_filters"        json:"instance_filters,omitempty"`
	TemplateContent       string                 `gocti:"template_content"        json:"template_content,omitempty"`
	StartDate             *time.Time             `gocti:"start_date"              json:"start_date,omitempty"`
	FintelTemplateWidgets []FintelTemplateWidget `gocti:"fintel_template_widgets" json:"fintel_template_widgets,omitempty"`
	ToConfigurationExport string                 `gocti:"toConfigurationExport"   json:"toConfigurationExport,omitempty"`
}

func (f FintelTemplate) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(f).IsZero() {
		return []byte("null"), nil
	}

	type tempFintelTemplate FintelTemplate

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempFintelTemplate)(&f))
}

// FintelTemplateConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type FintelTemplateConnection struct {
	// FintelTemplateConnection
	PageInfo PageInfo             `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []FintelTemplateEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (f FintelTemplateConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(f).IsZero() {
		return []byte("null"), nil
	}

	type tempFintelTemplateConnection FintelTemplateConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempFintelTemplateConnection)(&f))
}

// FintelTemplateEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type FintelTemplateEdge struct {
	// FintelTemplateEdge
	Cursor string         `gocti:"cursor" json:"cursor,omitempty"`
	Node   FintelTemplate `gocti:"node"   json:"node,omitempty"`
}

func (f FintelTemplateEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(f).IsZero() {
		return []byte("null"), nil
	}

	type tempFintelTemplateEdge FintelTemplateEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempFintelTemplateEdge)(&f))
}

// FintelTemplateWidget represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type FintelTemplateWidget struct {
	// FintelTemplateWidget
	VariableName string `gocti:"variable_name" json:"variable_name,omitempty"`
	Widget       Widget `gocti:"widget"        json:"widget,omitempty"`
}

func (f FintelTemplateWidget) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(f).IsZero() {
		return []byte("null"), nil
	}

	type tempFintelTemplateWidget FintelTemplateWidget

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempFintelTemplateWidget)(&f))
}

// Group represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Group struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// Group
	AutoIntegrationAssignation []string            `gocti:"auto_integration_assignation" json:"auto_integration_assignation,omitempty"`
	Name                       string              `gocti:"name"                         json:"name,omitempty"`
	DefaultAssignation         bool                `gocti:"default_assignation"          json:"default_assignation,omitempty"`
	NoCreators                 bool                `gocti:"no_creators"                  json:"no_creators,omitempty"`
	RestrictDelete             bool                `gocti:"restrict_delete"              json:"restrict_delete,omitempty"`
	AutoNewMarking             bool                `gocti:"auto_new_marking"             json:"auto_new_marking,omitempty"`
	Description                string              `gocti:"description"                  json:"description,omitempty"`
	DefaultDashboard           Workspace           `gocti:"default_dashboard"            json:"default_dashboard,omitempty"`
	Members                    UserConnection      `gocti:"members"                      json:"members,omitempty"`
	CreatedAt                  *time.Time          `gocti:"created_at"                   json:"created_at,omitempty"`
	UpdatedAt                  *time.Time          `gocti:"updated_at"                   json:"updated_at,omitempty"`
	Roles                      RoleConnection      `gocti:"roles"                        json:"roles,omitempty"`
	AllowedMarking             []MarkingDefinition `gocti:"allowed_marking"              json:"allowed_marking,omitempty"`
	DefaultMarking             []DefaultMarking    `gocti:"default_marking"              json:"default_marking,omitempty"`
	NotShareableMarkingTypes   []string            `gocti:"not_shareable_marking_types"  json:"not_shareable_marking_types,omitempty"`
	MaxShareableMarking        []MarkingDefinition `gocti:"max_shareable_marking"        json:"max_shareable_marking,omitempty"`
	DefaultHiddenTypes         []string            `gocti:"default_hidden_types"         json:"default_hidden_types,omitempty"`
	GroupConfidenceLevel       ConfidenceLevel     `gocti:"group_confidence_level"       json:"group_confidence_level,omitempty"`
	EditContext                []EditUserContext   `gocti:"editContext"                  json:"editContext,omitempty"`
}

func (g Group) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(g).IsZero() {
		return []byte("null"), nil
	}

	type tempGroup Group

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempGroup)(&g))
}

// GroupConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type GroupConnection struct {
	// GroupConnection
	PageInfo PageInfo    `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []GroupEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (g GroupConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(g).IsZero() {
		return []byte("null"), nil
	}

	type tempGroupConnection GroupConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempGroupConnection)(&g))
}

// GroupEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type GroupEdge struct {
	// GroupEdge
	Cursor string `gocti:"cursor" json:"cursor,omitempty"`
	Node   Group  `gocti:"node"   json:"node,omitempty"`
}

func (g GroupEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(g).IsZero() {
		return []byte("null"), nil
	}

	type tempGroupEdge GroupEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempGroupEdge)(&g))
}

// Grouping represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Grouping struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Grouping
	Name            string   `gocti:"name"              json:"name,omitempty"`
	Description     string   `gocti:"description"       json:"description,omitempty"`
	Content         string   `gocti:"content"           json:"content,omitempty"`
	ContentMapping  string   `gocti:"content_mapping"   json:"content_mapping,omitempty"`
	Context         string   `gocti:"context"           json:"context,omitempty"`
	XOpenctiAliases []string `gocti:"x_opencti_aliases" json:"x_opencti_aliases,omitempty"`
}

func (g Grouping) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(g).IsZero() {
		return []byte("null"), nil
	}

	type tempGrouping Grouping

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempGrouping)(&g))
}

// GroupingConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type GroupingConnection struct {
	// GroupingConnection
	PageInfo PageInfo       `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []GroupingEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (g GroupingConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(g).IsZero() {
		return []byte("null"), nil
	}

	type tempGroupingConnection GroupingConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempGroupingConnection)(&g))
}

// GroupingEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type GroupingEdge struct {
	// GroupingEdge
	Cursor string   `gocti:"cursor" json:"cursor,omitempty"`
	Node   Grouping `gocti:"node"   json:"node,omitempty"`
}

func (g GroupingEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(g).IsZero() {
		return []byte("null"), nil
	}

	type tempGroupingEdge GroupingEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempGroupingEdge)(&g))
}

// Hash represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Hash struct {
	// Hash
	Algorithm string `gocti:"algorithm" json:"algorithm,omitempty"`
	Hash      string `gocti:"hash"      json:"hash,omitempty"`
}

func (h Hash) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(h).IsZero() {
		return []byte("null"), nil
	}

	type tempHash Hash

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempHash)(&h))
}

// HashInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type HashInput struct {
	// HashInput
	Algorithm string `gocti:"algorithm" json:"algorithm,omitempty"`
	Hash      string `gocti:"hash"      json:"hash,omitempty"`
}

func (h HashInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(h).IsZero() {
		return []byte("null"), nil
	}

	type tempHashInput HashInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempHashInput)(&h))
}

// Hostname represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Hostname struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// Hostname
	Value string `gocti:"value" json:"value,omitempty"`
}

func (h Hostname) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(h).IsZero() {
		return []byte("null"), nil
	}

	type tempHostname Hostname

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempHostname)(&h))
}

// HostnameAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type HostnameAddInput struct {
	// HostnameAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (h HostnameAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(h).IsZero() {
		return []byte("null"), nil
	}

	type tempHostnameAddInput HostnameAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempHostnameAddInput)(&h))
}

// IPv4Addr represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type IPv4Addr struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// IPv4Addr
	Value     string            `gocti:"value"     json:"value,omitempty"`
	Countries CountryConnection `gocti:"countries" json:"countries,omitempty"`
}

func (i IPv4Addr) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIPv4Addr IPv4Addr

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIPv4Addr)(&i))
}

// IPv4AddrAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type IPv4AddrAddInput struct {
	// IPv4AddrAddInput
	Value      string   `gocti:"value"      json:"value,omitempty"`
	BelongsTo  []string `gocti:"belongsTo"  json:"belongsTo,omitempty"`
	ResolvesTo []string `gocti:"resolvesTo" json:"resolvesTo,omitempty"`
	File       []byte   `gocti:"file"       json:"file,omitempty"`
}

func (i IPv4AddrAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIPv4AddrAddInput IPv4AddrAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIPv4AddrAddInput)(&i))
}

// IPv6Addr represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type IPv6Addr struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// IPv6Addr
	Value     string            `gocti:"value"     json:"value,omitempty"`
	Countries CountryConnection `gocti:"countries" json:"countries,omitempty"`
}

func (i IPv6Addr) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIPv6Addr IPv6Addr

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIPv6Addr)(&i))
}

// IPv6AddrAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type IPv6AddrAddInput struct {
	// IPv6AddrAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (i IPv6AddrAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIPv6AddrAddInput IPv6AddrAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIPv6AddrAddInput)(&i))
}

// Identity represents a GraphQL INTERFACE
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [Individual]
// - [Sector]
// - [System]
// - [Organization]
// - [SecurityPlatform]
//
// (See the examples for ways to decode an interface field into an implementation).
type Identity struct {
	// Identity
	ID                  string                      `gocti:"id"                    json:"id,omitempty"`
	StandardID          string                      `gocti:"standard_id"           json:"standard_id,omitempty"`
	EntityType          string                      `gocti:"entity_type"           json:"entity_type,omitempty"`
	ParentTypes         []string                    `gocti:"parent_types"          json:"parent_types,omitempty"`
	SpecVersion         string                      `gocti:"spec_version"          json:"spec_version,omitempty"`
	CreatedAt           *time.Time                  `gocti:"created_at"            json:"created_at,omitempty"`
	UpdatedAt           *time.Time                  `gocti:"updated_at"            json:"updated_at,omitempty"`
	DraftVersion        DraftVersion                `gocti:"draftVersion"          json:"draftVersion,omitempty"`
	CreatedBy           *Identity                   `gocti:"createdBy"             json:"createdBy,omitempty"`
	ObjectMarking       []MarkingDefinition         `gocti:"objectMarking"         json:"objectMarking,omitempty"`
	ObjectOrganization  []Organization              `gocti:"objectOrganization"    json:"objectOrganization,omitempty"`
	ObjectLabel         []Label                     `gocti:"objectLabel"           json:"objectLabel,omitempty"`
	ExternalReferences  ExternalReferenceConnection `gocti:"externalReferences"    json:"externalReferences,omitempty"`
	OpinionsMetrics     OpinionsMetrics             `gocti:"opinions_metrics"      json:"opinions_metrics,omitempty"`
	Revoked             bool                        `gocti:"revoked"               json:"revoked,omitempty"`
	Confidence          int                         `gocti:"confidence"            json:"confidence,omitempty"`
	Lang                string                      `gocti:"lang"                  json:"lang,omitempty"`
	Created             *time.Time                  `gocti:"created"               json:"created,omitempty"`
	Modified            *time.Time                  `gocti:"modified"              json:"modified,omitempty"`
	IdentityClass       string                      `gocti:"identity_class"        json:"identity_class,omitempty"`
	Name                string                      `gocti:"name"                  json:"name,omitempty"`
	Description         string                      `gocti:"description"           json:"description,omitempty"`
	Roles               []string                    `gocti:"roles"                 json:"roles,omitempty"`
	ContactInformation  string                      `gocti:"contact_information"   json:"contact_information,omitempty"`
	XOpenctiAliases     []string                    `gocti:"x_opencti_aliases"     json:"x_opencti_aliases,omitempty"`
	XOpenctiReliability string                      `gocti:"x_opencti_reliability" json:"x_opencti_reliability,omitempty"`
	Creators            []Creator                   `gocti:"creators"              json:"creators,omitempty"`
	ImportFiles         FileConnection              `gocti:"importFiles"           json:"importFiles,omitempty"`
	Status              Status                      `gocti:"status"                json:"status,omitempty"`
	WorkflowEnabled     bool                        `gocti:"workflowEnabled"       json:"workflowEnabled,omitempty"`

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (i Identity) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[Individual](),
		reflect.TypeFor[Sector](),
		reflect.TypeFor[System](),
		reflect.TypeFor[Organization](),
		reflect.TypeFor[SecurityPlatform](),
	}
}

func (i Identity) Remainder() map[string]any {
	return i.Remain
}

func (i Identity) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIdentity Identity

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIdentity)(&i))
}

type IdentityType string

const (
	IdentityTypeSector       IdentityType = "Sector"
	IdentityTypeOrganization IdentityType = "Organization"
	IdentityTypeIndividual   IdentityType = "Individual"
	IdentityTypeSystem       IdentityType = "System"
)

func (i IdentityType) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIdentityType IdentityType

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIdentityType)(&i))
}

// Incident represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Incident struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Incident
	Name         string     `gocti:"name"          json:"name,omitempty"`
	Description  string     `gocti:"description"   json:"description,omitempty"`
	Aliases      []string   `gocti:"aliases"       json:"aliases,omitempty"`
	FirstSeen    *time.Time `gocti:"first_seen"    json:"first_seen,omitempty"`
	LastSeen     *time.Time `gocti:"last_seen"     json:"last_seen,omitempty"`
	Objective    string     `gocti:"objective"     json:"objective,omitempty"`
	IncidentType string     `gocti:"incident_type" json:"incident_type,omitempty"`
	Severity     string     `gocti:"severity"      json:"severity,omitempty"`
	Source       string     `gocti:"source"        json:"source,omitempty"`
}

func (i Incident) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIncident Incident

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIncident)(&i))
}

// Indicator represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Indicator struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Indicator
	PatternType                string                        `gocti:"pattern_type"                   json:"pattern_type,omitempty"`
	PatternVersion             string                        `gocti:"pattern_version"                json:"pattern_version,omitempty"`
	Pattern                    string                        `gocti:"pattern"                        json:"pattern,omitempty"`
	Name                       string                        `gocti:"name"                           json:"name,omitempty"`
	Description                string                        `gocti:"description"                    json:"description,omitempty"`
	IndicatorTypes             []string                      `gocti:"indicator_types"                json:"indicator_types,omitempty"`
	ValidFrom                  *time.Time                    `gocti:"valid_from"                     json:"valid_from,omitempty"`
	ValidUntil                 *time.Time                    `gocti:"valid_until"                    json:"valid_until,omitempty"`
	XOpenctiScore              int                           `gocti:"x_opencti_score"                json:"x_opencti_score,omitempty"`
	XOpenctiDetection          bool                          `gocti:"x_opencti_detection"            json:"x_opencti_detection,omitempty"`
	XOpenctiMainObservableType string                        `gocti:"x_opencti_main_observable_type" json:"x_opencti_main_observable_type,omitempty"`
	XOpenctiObservableValues   []ObservablesValues           `gocti:"x_opencti_observable_values"    json:"x_opencti_observable_values,omitempty"`
	XMitrePlatforms            []string                      `gocti:"x_mitre_platforms"              json:"x_mitre_platforms,omitempty"`
	KillChainPhases            []KillChainPhase              `gocti:"killChainPhases"                json:"killChainPhases,omitempty"`
	Observables                StixCyberObservableConnection `gocti:"observables"                    json:"observables,omitempty"`
	DecayBaseScore             int                           `gocti:"decay_base_score"               json:"decay_base_score,omitempty"`
	DecayBaseScoreDate         *time.Time                    `gocti:"decay_base_score_date"          json:"decay_base_score_date,omitempty"`
	DecayAppliedRule           IndicatorDecayRule            `gocti:"decay_applied_rule"             json:"decay_applied_rule,omitempty"`
	DecayHistory               []DecayHistory                `gocti:"decay_history"                  json:"decay_history,omitempty"`
	DecayLiveDetails           DecayLiveDetails              `gocti:"decayLiveDetails"               json:"decayLiveDetails,omitempty"`
	DecayChartData             DecayChartData                `gocti:"decayChartData"                 json:"decayChartData,omitempty"`
}

func (i Indicator) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIndicator Indicator

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIndicator)(&i))
}

// IndicatorConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type IndicatorConnection struct {
	// IndicatorConnection
	PageInfo PageInfo        `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []IndicatorEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (i IndicatorConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIndicatorConnection IndicatorConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIndicatorConnection)(&i))
}

// IndicatorDecayRule represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type IndicatorDecayRule struct {
	// IndicatorDecayRule
	DecayRuleID      string  `gocti:"decay_rule_id"      json:"decay_rule_id,omitempty"`
	DecayLifetime    int     `gocti:"decay_lifetime"     json:"decay_lifetime,omitempty"`
	DecayPound       float64 `gocti:"decay_pound"        json:"decay_pound,omitempty"`
	DecayPoints      []int   `gocti:"decay_points"       json:"decay_points,omitempty"`
	DecayRevokeScore int     `gocti:"decay_revoke_score" json:"decay_revoke_score,omitempty"`
}

func (i IndicatorDecayRule) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIndicatorDecayRule IndicatorDecayRule

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIndicatorDecayRule)(&i))
}

// IndicatorEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type IndicatorEdge struct {
	// IndicatorEdge
	Cursor string    `gocti:"cursor" json:"cursor,omitempty"`
	Node   Indicator `gocti:"node"   json:"node,omitempty"`
}

func (i IndicatorEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIndicatorEdge IndicatorEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIndicatorEdge)(&i))
}

// Individual represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Individual struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Identity
	IdentityClass       string   `gocti:"identity_class"        json:"identity_class,omitempty"`
	Name                string   `gocti:"name"                  json:"name,omitempty"`
	Description         string   `gocti:"description"           json:"description,omitempty"`
	Roles               []string `gocti:"roles"                 json:"roles,omitempty"`
	ContactInformation  string   `gocti:"contact_information"   json:"contact_information,omitempty"`
	XOpenctiAliases     []string `gocti:"x_opencti_aliases"     json:"x_opencti_aliases,omitempty"`
	XOpenctiReliability string   `gocti:"x_opencti_reliability" json:"x_opencti_reliability,omitempty"`

	// Individual
	XOpenctiFirstname string                 `gocti:"x_opencti_firstname" json:"x_opencti_firstname,omitempty"`
	XOpenctiLastname  string                 `gocti:"x_opencti_lastname"  json:"x_opencti_lastname,omitempty"`
	Organizations     OrganizationConnection `gocti:"organizations"       json:"organizations,omitempty"`
	IsUser            bool                   `gocti:"isUser"              json:"isUser,omitempty"`
}

func (i Individual) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIndividual Individual

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIndividual)(&i))
}

// Infrastructure represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Infrastructure struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Infrastructure
	Name                string           `gocti:"name"                 json:"name,omitempty"`
	Aliases             []string         `gocti:"aliases"              json:"aliases,omitempty"`
	Description         string           `gocti:"description"          json:"description,omitempty"`
	InfrastructureTypes []string         `gocti:"infrastructure_types" json:"infrastructure_types,omitempty"`
	FirstSeen           *time.Time       `gocti:"first_seen"           json:"first_seen,omitempty"`
	LastSeen            *time.Time       `gocti:"last_seen"            json:"last_seen,omitempty"`
	KillChainPhases     []KillChainPhase `gocti:"killChainPhases"      json:"killChainPhases,omitempty"`
}

func (i Infrastructure) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempInfrastructure Infrastructure

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempInfrastructure)(&i))
}

// IntrusionSet represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type IntrusionSet struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// IntrusionSet
	Name                 string             `gocti:"name"                  json:"name,omitempty"`
	Description          string             `gocti:"description"           json:"description,omitempty"`
	Aliases              []string           `gocti:"aliases"               json:"aliases,omitempty"`
	FirstSeen            *time.Time         `gocti:"first_seen"            json:"first_seen,omitempty"`
	LastSeen             *time.Time         `gocti:"last_seen"             json:"last_seen,omitempty"`
	Goals                []string           `gocti:"goals"                 json:"goals,omitempty"`
	ResourceLevel        string             `gocti:"resource_level"        json:"resource_level,omitempty"`
	PrimaryMotivation    string             `gocti:"primary_motivation"    json:"primary_motivation,omitempty"`
	SecondaryMotivations []string           `gocti:"secondary_motivations" json:"secondary_motivations,omitempty"`
	Locations            LocationConnection `gocti:"locations"             json:"locations,omitempty"`
}

func (i IntrusionSet) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(i).IsZero() {
		return []byte("null"), nil
	}

	type tempIntrusionSet IntrusionSet

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempIntrusionSet)(&i))
}

// KillChainPhase represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type KillChainPhase struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixMetaObject
	Created  *time.Time `gocti:"created"  json:"created,omitempty"`
	Modified *time.Time `gocti:"modified" json:"modified,omitempty"`

	// KillChainPhase
	KillChainName string            `gocti:"kill_chain_name" json:"kill_chain_name,omitempty"`
	PhaseName     string            `gocti:"phase_name"      json:"phase_name,omitempty"`
	XOpenctiOrder int               `gocti:"x_opencti_order" json:"x_opencti_order,omitempty"`
	EditContext   []EditUserContext `gocti:"editContext"     json:"editContext,omitempty"`
}

func (k KillChainPhase) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(k).IsZero() {
		return []byte("null"), nil
	}

	type tempKillChainPhase KillChainPhase

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempKillChainPhase)(&k))
}

// Label represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Label struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixMetaObject
	Created  *time.Time `gocti:"created"  json:"created,omitempty"`
	Modified *time.Time `gocti:"modified" json:"modified,omitempty"`

	// Label
	Value       string            `gocti:"value"       json:"value,omitempty"`
	Color       string            `gocti:"color"       json:"color,omitempty"`
	ToStix      string            `gocti:"toStix"      json:"toStix,omitempty"`
	EditContext []EditUserContext `gocti:"editContext" json:"editContext,omitempty"`
}

func (l Label) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(l).IsZero() {
		return []byte("null"), nil
	}

	type tempLabel Label

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempLabel)(&l))
}

// Language represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Language struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Language
	Name    string   `gocti:"name"    json:"name,omitempty"`
	Aliases []string `gocti:"aliases" json:"aliases,omitempty"`
}

func (l Language) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(l).IsZero() {
		return []byte("null"), nil
	}

	type tempLanguage Language

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempLanguage)(&l))
}

// Location represents a GraphQL INTERFACE
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [Position]
// - [City]
// - [Country]
// - [Region]
// - [AdministrativeArea]
//
// (See the examples for ways to decode an interface field into an implementation).
type Location struct {
	// Location
	ID                 string                      `gocti:"id"                 json:"id,omitempty"`
	StandardID         string                      `gocti:"standard_id"        json:"standard_id,omitempty"`
	EntityType         string                      `gocti:"entity_type"        json:"entity_type,omitempty"`
	ParentTypes        []string                    `gocti:"parent_types"       json:"parent_types,omitempty"`
	SpecVersion        string                      `gocti:"spec_version"       json:"spec_version,omitempty"`
	CreatedAt          *time.Time                  `gocti:"created_at"         json:"created_at,omitempty"`
	UpdatedAt          *time.Time                  `gocti:"updated_at"         json:"updated_at,omitempty"`
	DraftVersion       DraftVersion                `gocti:"draftVersion"       json:"draftVersion,omitempty"`
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`
	Revoked            bool                        `gocti:"revoked"            json:"revoked,omitempty"`
	Confidence         int                         `gocti:"confidence"         json:"confidence,omitempty"`
	Lang               string                      `gocti:"lang"               json:"lang,omitempty"`
	Created            *time.Time                  `gocti:"created"            json:"created,omitempty"`
	Modified           *time.Time                  `gocti:"modified"           json:"modified,omitempty"`
	Name               string                      `gocti:"name"               json:"name,omitempty"`
	Description        string                      `gocti:"description"        json:"description,omitempty"`
	Latitude           float64                     `gocti:"latitude"           json:"latitude,omitempty"`
	Longitude          float64                     `gocti:"longitude"          json:"longitude,omitempty"`
	Precision          float64                     `gocti:"precision"          json:"precision,omitempty"`
	XOpenctiAliases    []string                    `gocti:"x_opencti_aliases"  json:"x_opencti_aliases,omitempty"`
	Creators           []Creator                   `gocti:"creators"           json:"creators,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	Status             Status                      `gocti:"status"             json:"status,omitempty"`
	WorkflowEnabled    bool                        `gocti:"workflowEnabled"    json:"workflowEnabled,omitempty"`

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (l Location) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[Position](),
		reflect.TypeFor[City](),
		reflect.TypeFor[Country](),
		reflect.TypeFor[Region](),
		reflect.TypeFor[AdministrativeArea](),
	}
}

func (l Location) Remainder() map[string]any {
	return l.Remain
}

func (l Location) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(l).IsZero() {
		return []byte("null"), nil
	}

	type tempLocation Location

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempLocation)(&l))
}

// LocationConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type LocationConnection struct {
	// LocationConnection
	PageInfo PageInfo       `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []LocationEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (l LocationConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(l).IsZero() {
		return []byte("null"), nil
	}

	type tempLocationConnection LocationConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempLocationConnection)(&l))
}

// LocationEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type LocationEdge struct {
	// LocationEdge
	Cursor string   `gocti:"cursor" json:"cursor,omitempty"`
	Types  []string `gocti:"types"  json:"types,omitempty"`
	Node   Location `gocti:"node"   json:"node,omitempty"`
}

func (l LocationEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(l).IsZero() {
		return []byte("null"), nil
	}

	type tempLocationEdge LocationEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempLocationEdge)(&l))
}

// MacAddr represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MacAddr struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// MacAddr
	Value string `gocti:"value" json:"value,omitempty"`
}

func (m MacAddr) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMacAddr MacAddr

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMacAddr)(&m))
}

// MacAddrAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MacAddrAddInput struct {
	// MacAddrAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (m MacAddrAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMacAddrAddInput MacAddrAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMacAddrAddInput)(&m))
}

// Malware represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Malware struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Malware
	Name                      string                `gocti:"name"                        json:"name,omitempty"`
	Description               string                `gocti:"description"                 json:"description,omitempty"`
	Aliases                   []string              `gocti:"aliases"                     json:"aliases,omitempty"`
	MalwareTypes              []string              `gocti:"malware_types"               json:"malware_types,omitempty"`
	IsFamily                  bool                  `gocti:"is_family"                   json:"is_family,omitempty"`
	FirstSeen                 *time.Time            `gocti:"first_seen"                  json:"first_seen,omitempty"`
	LastSeen                  *time.Time            `gocti:"last_seen"                   json:"last_seen,omitempty"`
	ArchitectureExecutionEnvs []string              `gocti:"architecture_execution_envs" json:"architecture_execution_envs,omitempty"`
	ImplementationLanguages   []string              `gocti:"implementation_languages"    json:"implementation_languages,omitempty"`
	Capabilities              []string              `gocti:"capabilities"                json:"capabilities,omitempty"`
	KillChainPhases           []KillChainPhase      `gocti:"killChainPhases"             json:"killChainPhases,omitempty"`
	Samples                   []StixCyberObservable `gocti:"samples"                     json:"samples,omitempty"`
}

func (m Malware) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMalware Malware

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMalware)(&m))
}

// MalwareAnalysis represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MalwareAnalysis struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// MalwareAnalysis
	Product                   string                        `gocti:"product"                     json:"product,omitempty"`
	Version                   string                        `gocti:"version"                     json:"version,omitempty"`
	HostVM                    Software                      `gocti:"hostVm"                      json:"hostVm,omitempty"`
	OperatingSystem           Software                      `gocti:"operatingSystem"             json:"operatingSystem,omitempty"`
	InstalledSoftware         SoftwareConnection            `gocti:"installedSoftware"           json:"installedSoftware,omitempty"`
	ConfigurationVersion      string                        `gocti:"configuration_version"       json:"configuration_version,omitempty"`
	Modules                   []string                      `gocti:"modules"                     json:"modules,omitempty"`
	AnalysisEngineVersion     string                        `gocti:"analysis_engine_version"     json:"analysis_engine_version,omitempty"`
	AnalysisDefinitionVersion string                        `gocti:"analysis_definition_version" json:"analysis_definition_version,omitempty"`
	Submitted                 *time.Time                    `gocti:"submitted"                   json:"submitted,omitempty"`
	AnalysisStarted           *time.Time                    `gocti:"analysis_started"            json:"analysis_started,omitempty"`
	AnalysisEnded             *time.Time                    `gocti:"analysis_ended"              json:"analysis_ended,omitempty"`
	ResultName                string                        `gocti:"result_name"                 json:"result_name,omitempty"`
	Result                    string                        `gocti:"result"                      json:"result,omitempty"`
	AnalysisSco               StixCyberObservableConnection `gocti:"analysisSco"                 json:"analysisSco,omitempty"`
	Sample                    StixCyberObservable           `gocti:"sample"                      json:"sample,omitempty"`
}

func (m MalwareAnalysis) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMalwareAnalysis MalwareAnalysis

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMalwareAnalysis)(&m))
}

// ManagerConfiguration represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ManagerConfiguration struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// ManagerConfiguration
	ManagerID        string     `gocti:"manager_id"          json:"manager_id,omitempty"`
	ManagerRunning   bool       `gocti:"manager_running"     json:"manager_running,omitempty"`
	LastRunStartDate *time.Time `gocti:"last_run_start_date" json:"last_run_start_date,omitempty"`
	LastRunEndDate   *time.Time `gocti:"last_run_end_date"   json:"last_run_end_date,omitempty"`
	ManagerSetting   string     `gocti:"manager_setting"     json:"manager_setting,omitempty"`
}

func (m ManagerConfiguration) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempManagerConfiguration ManagerConfiguration

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempManagerConfiguration)(&m))
}

// ManagerContractConfiguration represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ManagerContractConfiguration struct {
	// ManagerContractConfiguration
	Key   string `gocti:"key"   json:"key,omitempty"`
	Value string `gocti:"value" json:"value,omitempty"`
}

func (m ManagerContractConfiguration) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempManagerContractConfiguration ManagerContractConfiguration

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempManagerContractConfiguration)(&m))
}

// MarkingDefinition represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MarkingDefinition struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixMetaObject
	Created  *time.Time `gocti:"created"  json:"created,omitempty"`
	Modified *time.Time `gocti:"modified" json:"modified,omitempty"`

	// MarkingDefinition
	DefinitionType string            `gocti:"definition_type" json:"definition_type,omitempty"`
	Definition     string            `gocti:"definition"      json:"definition,omitempty"`
	XOpenctiOrder  int               `gocti:"x_opencti_order" json:"x_opencti_order,omitempty"`
	XOpenctiColor  string            `gocti:"x_opencti_color" json:"x_opencti_color,omitempty"`
	ToStix         string            `gocti:"toStix"          json:"toStix,omitempty"`
	EditContext    []EditUserContext `gocti:"editContext"     json:"editContext,omitempty"`
}

func (m MarkingDefinition) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMarkingDefinition MarkingDefinition

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMarkingDefinition)(&m))
}

// MarkingDefinitionShort represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MarkingDefinitionShort struct {
	// MarkingDefinitionShort
	ID             string         `gocti:"id"              json:"id,omitempty"`
	StandardID     string         `gocti:"standard_id"     json:"standard_id,omitempty"`
	EntityType     string         `gocti:"entity_type"     json:"entity_type,omitempty"`
	Representative Representative `gocti:"representative"  json:"representative,omitempty"`
	DefinitionType string         `gocti:"definition_type" json:"definition_type,omitempty"`
	Definition     string         `gocti:"definition"      json:"definition,omitempty"`
	XOpenctiOrder  int            `gocti:"x_opencti_order" json:"x_opencti_order,omitempty"`
	XOpenctiColor  string         `gocti:"x_opencti_color" json:"x_opencti_color,omitempty"`
}

func (m MarkingDefinitionShort) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMarkingDefinitionShort MarkingDefinitionShort

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMarkingDefinitionShort)(&m))
}

// Measure represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Measure struct {
	// Measure
	Index    int        `gocti:"index"     json:"index,omitempty"`
	Measure  float64    `gocti:"measure"   json:"measure,omitempty"`
	DateSeen *time.Time `gocti:"date_seen" json:"date_seen,omitempty"`
}

func (m Measure) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMeasure Measure

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMeasure)(&m))
}

// MeasureInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MeasureInput struct {
	// MeasureInput
	Measure  float64    `gocti:"measure"   json:"measure,omitempty"`
	DateSeen *time.Time `gocti:"date_seen" json:"date_seen,omitempty"`
}

func (m MeasureInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMeasureInput MeasureInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMeasureInput)(&m))
}

// MediaContent represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MediaContent struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// MediaContent
	Title           string     `gocti:"title"            json:"title,omitempty"`
	Description     string     `gocti:"description"      json:"description,omitempty"`
	Content         string     `gocti:"content"          json:"content,omitempty"`
	MediaCategory   string     `gocti:"media_category"   json:"media_category,omitempty"`
	URL             string     `gocti:"url"              json:"url,omitempty"`
	PublicationDate *time.Time `gocti:"publication_date" json:"publication_date,omitempty"`
}

func (m MediaContent) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMediaContent MediaContent

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMediaContent)(&m))
}

// MediaContentAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MediaContentAddInput struct {
	// MediaContentAddInput
	Title           string     `gocti:"title"            json:"title,omitempty"`
	Content         string     `gocti:"content"          json:"content,omitempty"`
	MediaCategory   string     `gocti:"media_category"   json:"media_category,omitempty"`
	URL             string     `gocti:"url"              json:"url,omitempty"`
	PublicationDate *time.Time `gocti:"publication_date" json:"publication_date,omitempty"`
	File            []byte     `gocti:"file"             json:"file,omitempty"`
}

func (m MediaContentAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMediaContentAddInput MediaContentAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMediaContentAddInput)(&m))
}

// MemberAccess represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MemberAccess struct {
	// MemberAccess
	ID                string                   `gocti:"id"                 json:"id,omitempty"`
	MemberID          string                   `gocti:"member_id"          json:"member_id,omitempty"`
	Name              string                   `gocti:"name"               json:"name,omitempty"`
	EntityType        string                   `gocti:"entity_type"        json:"entity_type,omitempty"`
	AccessRight       string                   `gocti:"access_right"       json:"access_right,omitempty"`
	GroupsRestriction []MemberGroupRestriction `gocti:"groups_restriction" json:"groups_restriction,omitempty"`
}

func (m MemberAccess) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMemberAccess MemberAccess

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMemberAccess)(&m))
}

// MemberAccessInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MemberAccessInput struct {
	// MemberAccessInput
	ID                   string   `gocti:"id"                     json:"id,omitempty"`
	AccessRight          string   `gocti:"access_right"           json:"access_right,omitempty"`
	GroupsRestrictionIDs []string `gocti:"groups_restriction_ids" json:"groups_restriction_ids,omitempty"`
}

func (m MemberAccessInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMemberAccessInput MemberAccessInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMemberAccessInput)(&m))
}

// MemberGroupRestriction represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MemberGroupRestriction struct {
	// MemberGroupRestriction
	ID   string `gocti:"id"   json:"id,omitempty"`
	Name string `gocti:"name" json:"name,omitempty"`
}

func (m MemberGroupRestriction) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMemberGroupRestriction MemberGroupRestriction

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMemberGroupRestriction)(&m))
}

// Mutex represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Mutex struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// Mutex
	Name string `gocti:"name" json:"name,omitempty"`
}

func (m Mutex) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMutex Mutex

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMutex)(&m))
}

// MutexAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type MutexAddInput struct {
	// MutexAddInput
	Name string `gocti:"name" json:"name,omitempty"`
	File []byte `gocti:"file" json:"file,omitempty"`
}

func (m MutexAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(m).IsZero() {
		return []byte("null"), nil
	}

	type tempMutexAddInput MutexAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempMutexAddInput)(&m))
}

// Narrative represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Narrative struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Narrative
	Name             string              `gocti:"name"             json:"name,omitempty"`
	Description      string              `gocti:"description"      json:"description,omitempty"`
	NarrativeTypes   []string            `gocti:"narrative_types"  json:"narrative_types,omitempty"`
	Aliases          []string            `gocti:"aliases"          json:"aliases,omitempty"`
	ParentNarratives NarrativeConnection `gocti:"parentNarratives" json:"parentNarratives,omitempty"`
	SubNarratives    NarrativeConnection `gocti:"subNarratives"    json:"subNarratives,omitempty"`
	IsSubNarrative   bool                `gocti:"isSubNarrative"   json:"isSubNarrative,omitempty"`
}

func (n Narrative) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNarrative Narrative

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNarrative)(&n))
}

// NarrativeConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type NarrativeConnection struct {
	// NarrativeConnection
	PageInfo PageInfo        `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []NarrativeEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (n NarrativeConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNarrativeConnection NarrativeConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNarrativeConnection)(&n))
}

// NarrativeEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type NarrativeEdge struct {
	// NarrativeEdge
	Cursor string    `gocti:"cursor" json:"cursor,omitempty"`
	Node   Narrative `gocti:"node"   json:"node,omitempty"`
}

func (n NarrativeEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNarrativeEdge NarrativeEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNarrativeEdge)(&n))
}

// NetworkTraffic represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type NetworkTraffic struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// NetworkTraffic
	Extensions   string     `gocti:"extensions"     json:"extensions,omitempty"`
	Start        *time.Time `gocti:"start"          json:"start,omitempty"`
	End          *time.Time `gocti:"end"            json:"end,omitempty"`
	IsActive     bool       `gocti:"is_active"      json:"is_active,omitempty"`
	SrcPort      int        `gocti:"src_port"       json:"src_port,omitempty"`
	DstPort      int        `gocti:"dst_port"       json:"dst_port,omitempty"`
	Protocols    []string   `gocti:"protocols"      json:"protocols,omitempty"`
	SrcByteCount int        `gocti:"src_byte_count" json:"src_byte_count,omitempty"`
	DstByteCount int        `gocti:"dst_byte_count" json:"dst_byte_count,omitempty"`
	SrcPackets   int        `gocti:"src_packets"    json:"src_packets,omitempty"`
	DstPackets   int        `gocti:"dst_packets"    json:"dst_packets,omitempty"`
}

func (n NetworkTraffic) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNetworkTraffic NetworkTraffic

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNetworkTraffic)(&n))
}

// NetworkTrafficAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type NetworkTrafficAddInput struct {
	// NetworkTrafficAddInput
	Start        *time.Time `gocti:"start"          json:"start,omitempty"`
	End          *time.Time `gocti:"end"            json:"end,omitempty"`
	IsActive     bool       `gocti:"is_active"      json:"is_active,omitempty"`
	NetworkSrc   string     `gocti:"networkSrc"     json:"networkSrc,omitempty"`
	NetworkDst   string     `gocti:"networkDst"     json:"networkDst,omitempty"`
	SrcPort      int        `gocti:"src_port"       json:"src_port,omitempty"`
	DstPort      int        `gocti:"dst_port"       json:"dst_port,omitempty"`
	Protocols    []string   `gocti:"protocols"      json:"protocols,omitempty"`
	SrcByteCount int        `gocti:"src_byte_count" json:"src_byte_count,omitempty"`
	DstByteCount int        `gocti:"dst_byte_count" json:"dst_byte_count,omitempty"`
	SrcPackets   int        `gocti:"src_packets"    json:"src_packets,omitempty"`
	DstPackets   int        `gocti:"dst_packets"    json:"dst_packets,omitempty"`
	File         []byte     `gocti:"file"           json:"file,omitempty"`
}

func (n NetworkTrafficAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNetworkTrafficAddInput NetworkTrafficAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNetworkTrafficAddInput)(&n))
}

// Note represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Note struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Note
	AttributeAbstract string   `gocti:"attribute_abstract" json:"attribute_abstract,omitempty"`
	Content           string   `gocti:"content"            json:"content,omitempty"`
	Authors           []string `gocti:"authors"            json:"authors,omitempty"`
	NoteTypes         []string `gocti:"note_types"         json:"note_types,omitempty"`
	Likelihood        int      `gocti:"likelihood"         json:"likelihood,omitempty"`
}

func (n Note) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNote Note

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNote)(&n))
}

// NoteConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type NoteConnection struct {
	// NoteConnection
	PageInfo PageInfo   `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []NoteEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (n NoteConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNoteConnection NoteConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNoteConnection)(&n))
}

// NoteEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type NoteEdge struct {
	// NoteEdge
	Cursor string `gocti:"cursor" json:"cursor,omitempty"`
	Node   Note   `gocti:"node"   json:"node,omitempty"`
}

func (n NoteEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNoteEdge NoteEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNoteEdge)(&n))
}

// Notifier represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Notifier struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// Notifier
	Created               *time.Time        `gocti:"created"                json:"created,omitempty"`
	Modified              *time.Time        `gocti:"modified"               json:"modified,omitempty"`
	Name                  string            `gocti:"name"                   json:"name,omitempty"`
	Description           string            `gocti:"description"            json:"description,omitempty"`
	NotifierConnector     NotifierConnector `gocti:"notifier_connector"     json:"notifier_connector,omitempty"`
	NotifierConnectorID   string            `gocti:"notifier_connector_id"  json:"notifier_connector_id,omitempty"`
	NotifierConfiguration string            `gocti:"notifier_configuration" json:"notifier_configuration,omitempty"`
	AuthorizedMembers     []MemberAccess    `gocti:"authorized_members"     json:"authorized_members,omitempty"`
}

func (n Notifier) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNotifier Notifier

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNotifier)(&n))
}

// NotifierConnector represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type NotifierConnector struct {
	// NotifierConnector
	ID                string `gocti:"id"                  json:"id,omitempty"`
	Name              string `gocti:"name"                json:"name,omitempty"`
	ConnectorType     string `gocti:"connector_type"      json:"connector_type,omitempty"`
	ConnectorSchema   string `gocti:"connector_schema"    json:"connector_schema,omitempty"`
	ConnectorSchemaUi string `gocti:"connector_schema_ui" json:"connector_schema_ui,omitempty"`
	BuiltIn           bool   `gocti:"built_in"            json:"built_in,omitempty"`
}

func (n NotifierConnector) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNotifierConnector NotifierConnector

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNotifierConnector)(&n))
}

// Number represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Number struct {
	// Number
	Total int `gocti:"total" json:"total,omitempty"`
	Count int `gocti:"count" json:"count,omitempty"`
}

func (n Number) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(n).IsZero() {
		return []byte("null"), nil
	}

	type tempNumber Number

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempNumber)(&n))
}

// ObservablesValues represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ObservablesValues struct {
	// ObservablesValues
	Type   string `gocti:"type"   json:"type,omitempty"`
	Value  string `gocti:"value"  json:"value,omitempty"`
	Hashes []Hash `gocti:"hashes" json:"hashes,omitempty"`
}

func (o ObservablesValues) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempObservablesValues ObservablesValues

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempObservablesValues)(&o))
}

// ObservedData represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ObservedData struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// ObservedData
	FirstObserved  *time.Time `gocti:"first_observed"  json:"first_observed,omitempty"`
	LastObserved   *time.Time `gocti:"last_observed"   json:"last_observed,omitempty"`
	NumberObserved int        `gocti:"number_observed" json:"number_observed,omitempty"`
	Name           string     `gocti:"name"            json:"name,omitempty"`
}

func (o ObservedData) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempObservedData ObservedData

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempObservedData)(&o))
}

// Opinion represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Opinion struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Opinion
	Explanation string   `gocti:"explanation" json:"explanation,omitempty"`
	Authors     []string `gocti:"authors"     json:"authors,omitempty"`
	Opinion     string   `gocti:"opinion"     json:"opinion,omitempty"`
}

func (o Opinion) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempOpinion Opinion

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempOpinion)(&o))
}

// OpinionConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type OpinionConnection struct {
	// OpinionConnection
	PageInfo PageInfo      `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []OpinionEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (o OpinionConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempOpinionConnection OpinionConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempOpinionConnection)(&o))
}

// OpinionEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type OpinionEdge struct {
	// OpinionEdge
	Cursor string  `gocti:"cursor" json:"cursor,omitempty"`
	Node   Opinion `gocti:"node"   json:"node,omitempty"`
}

func (o OpinionEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempOpinionEdge OpinionEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempOpinionEdge)(&o))
}

// OpinionsMetrics represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type OpinionsMetrics struct {
	// OpinionsMetrics
	Mean  float64 `gocti:"mean"  json:"mean,omitempty"`
	Min   int     `gocti:"min"   json:"min,omitempty"`
	Max   int     `gocti:"max"   json:"max,omitempty"`
	Total int     `gocti:"total" json:"total,omitempty"`
}

func (o OpinionsMetrics) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempOpinionsMetrics OpinionsMetrics

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempOpinionsMetrics)(&o))
}

// Organization represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Organization struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization *[]Organization             `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Identity
	IdentityClass       string   `gocti:"identity_class"        json:"identity_class,omitempty"`
	Name                string   `gocti:"name"                  json:"name,omitempty"`
	Description         string   `gocti:"description"           json:"description,omitempty"`
	Roles               []string `gocti:"roles"                 json:"roles,omitempty"`
	ContactInformation  string   `gocti:"contact_information"   json:"contact_information,omitempty"`
	XOpenctiAliases     []string `gocti:"x_opencti_aliases"     json:"x_opencti_aliases,omitempty"`
	XOpenctiReliability string   `gocti:"x_opencti_reliability" json:"x_opencti_reliability,omitempty"`

	// Organization
	XOpenctiOrganizationType string                 `gocti:"x_opencti_organization_type" json:"x_opencti_organization_type,omitempty"`
	XOpenctiScore            int                    `gocti:"x_opencti_score"             json:"x_opencti_score,omitempty"`
	Sectors                  SectorConnection       `gocti:"sectors"                     json:"sectors,omitempty"`
	Members                  UserConnection         `gocti:"members"                     json:"members,omitempty"`
	AuthorizedAuthorities    []string               `gocti:"authorized_authorities"      json:"authorized_authorities,omitempty"`
	GrantableGroups          []Group                `gocti:"grantable_groups"            json:"grantable_groups,omitempty"`
	SubOrganizations         OrganizationConnection `gocti:"subOrganizations"            json:"subOrganizations,omitempty"`
	ParentOrganizations      OrganizationConnection `gocti:"parentOrganizations"         json:"parentOrganizations,omitempty"`
	DefaultDashboard         Workspace              `gocti:"default_dashboard"           json:"default_dashboard,omitempty"`
	DefaultHiddenTypes       []string               `gocti:"default_hidden_types"        json:"default_hidden_types,omitempty"`
}

func (o Organization) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempOrganization Organization

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempOrganization)(&o))
}

// OrganizationConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type OrganizationConnection struct {
	// OrganizationConnection
	PageInfo PageInfo           `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []OrganizationEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (o OrganizationConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempOrganizationConnection OrganizationConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempOrganizationConnection)(&o))
}

// OrganizationEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type OrganizationEdge struct {
	// OrganizationEdge
	Cursor string       `gocti:"cursor" json:"cursor,omitempty"`
	Node   Organization `gocti:"node"   json:"node,omitempty"`
}

func (o OrganizationEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempOrganizationEdge OrganizationEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempOrganizationEdge)(&o))
}

// OverviewWidgetCustomization represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type OverviewWidgetCustomization struct {
	// OverviewWidgetCustomization
	Key   string `gocti:"key"   json:"key,omitempty"`
	Width int    `gocti:"width" json:"width,omitempty"`
	Label string `gocti:"label" json:"label,omitempty"`
}

func (o OverviewWidgetCustomization) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(o).IsZero() {
		return []byte("null"), nil
	}

	type tempOverviewWidgetCustomization OverviewWidgetCustomization

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempOverviewWidgetCustomization)(&o))
}

// PageInfo represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type PageInfo struct {
	// PageInfo
	StartCursor     string `gocti:"startCursor"     json:"startCursor,omitempty"`
	EndCursor       string `gocti:"endCursor"       json:"endCursor,omitempty"`
	HasNextPage     bool   `gocti:"hasNextPage"     json:"hasNextPage,omitempty"`
	HasPreviousPage bool   `gocti:"hasPreviousPage" json:"hasPreviousPage,omitempty"`
	GlobalCount     int    `gocti:"globalCount"     json:"globalCount,omitempty"`
}

func (p PageInfo) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPageInfo PageInfo

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPageInfo)(&p))
}

// Participant represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Participant struct {
	// Participant
	ID         string `gocti:"id"          json:"id,omitempty"`
	Name       string `gocti:"name"        json:"name,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`
}

func (p Participant) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempParticipant Participant

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempParticipant)(&p))
}

// PaymentCard represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type PaymentCard struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// PaymentCard
	CardNumber     string     `gocti:"card_number"     json:"card_number,omitempty"`
	ExpirationDate *time.Time `gocti:"expiration_date" json:"expiration_date,omitempty"`
	Cvv            int        `gocti:"cvv"             json:"cvv,omitempty"`
	HolderName     string     `gocti:"holder_name"     json:"holder_name,omitempty"`
}

func (p PaymentCard) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPaymentCard PaymentCard

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPaymentCard)(&p))
}

// PaymentCardAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type PaymentCardAddInput struct {
	// PaymentCardAddInput
	CardNumber     string     `gocti:"card_number"     json:"card_number,omitempty"`
	ExpirationDate *time.Time `gocti:"expiration_date" json:"expiration_date,omitempty"`
	Cvv            int        `gocti:"cvv"             json:"cvv,omitempty"`
	HolderName     string     `gocti:"holder_name"     json:"holder_name,omitempty"`
	File           []byte     `gocti:"file"            json:"file,omitempty"`
}

func (p PaymentCardAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPaymentCardAddInput PaymentCardAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPaymentCardAddInput)(&p))
}

// Persona represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Persona struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// Persona
	PersonaName string `gocti:"persona_name" json:"persona_name,omitempty"`
	PersonaType string `gocti:"persona_type" json:"persona_type,omitempty"`
}

func (p Persona) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPersona Persona

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPersona)(&p))
}

// PersonaAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type PersonaAddInput struct {
	// PersonaAddInput
	PersonaName string `gocti:"persona_name" json:"persona_name,omitempty"`
	PersonaType string `gocti:"persona_type" json:"persona_type,omitempty"`
}

func (p PersonaAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPersonaAddInput PersonaAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPersonaAddInput)(&p))
}

// PhoneNumber represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type PhoneNumber struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// PhoneNumber
	Value string `gocti:"value" json:"value,omitempty"`
}

func (p PhoneNumber) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPhoneNumber PhoneNumber

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPhoneNumber)(&p))
}

// PhoneNumberAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type PhoneNumberAddInput struct {
	// PhoneNumberAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (p PhoneNumberAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPhoneNumberAddInput PhoneNumberAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPhoneNumberAddInput)(&p))
}

// Pir represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Pir struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// Pir
	CreatedAt     *time.Time          `gocti:"created_at"      json:"created_at,omitempty"`
	UpdatedAt     *time.Time          `gocti:"updated_at"      json:"updated_at,omitempty"`
	Creators      []Creator           `gocti:"creators"        json:"creators,omitempty"`
	ObjectMarking []MarkingDefinition `gocti:"objectMarking"   json:"objectMarking,omitempty"`
	Name          string              `gocti:"name"            json:"name,omitempty"`
	Description   string              `gocti:"description"     json:"description,omitempty"`
	PirRescanDays int                 `gocti:"pir_rescan_days" json:"pir_rescan_days,omitempty"`
	PirCriteria   []PirCriterion      `gocti:"pir_criteria"    json:"pir_criteria,omitempty"`
	PirFilters    string              `gocti:"pir_filters"     json:"pir_filters,omitempty"`
	LastEventID   string              `gocti:"lastEventId"     json:"lastEventId,omitempty"`
}

func (p Pir) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPir Pir

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPir)(&p))
}

// PirCriterion represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type PirCriterion struct {
	// PirCriterion
	Filters string `gocti:"filters" json:"filters,omitempty"`
	Weight  int    `gocti:"weight"  json:"weight,omitempty"`
}

func (p PirCriterion) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPirCriterion PirCriterion

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPirCriterion)(&p))
}

// PirExplanation represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type PirExplanation struct {
	// PirExplanation
	DependencyIDs []string     `gocti:"dependency_ids" json:"dependency_ids,omitempty"`
	Criterion     PirCriterion `gocti:"criterion"      json:"criterion,omitempty"`
}

func (p PirExplanation) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPirExplanation PirExplanation

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPirExplanation)(&p))
}

// Position represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Position struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Location
	Name            string   `gocti:"name"              json:"name,omitempty"`
	Description     string   `gocti:"description"       json:"description,omitempty"`
	Latitude        float64  `gocti:"latitude"          json:"latitude,omitempty"`
	Longitude       float64  `gocti:"longitude"         json:"longitude,omitempty"`
	Precision       float64  `gocti:"precision"         json:"precision,omitempty"`
	XOpenctiAliases []string `gocti:"x_opencti_aliases" json:"x_opencti_aliases,omitempty"`

	// Position
	StreetAddress string `gocti:"street_address" json:"street_address,omitempty"`
	PostalCode    string `gocti:"postal_code"    json:"postal_code,omitempty"`
	City          City   `gocti:"city"           json:"city,omitempty"`
}

func (p Position) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPosition Position

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPosition)(&p))
}

// Process represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Process struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// Process
	Extensions           string             `gocti:"extensions"            json:"extensions,omitempty"`
	IsHidden             bool               `gocti:"is_hidden"             json:"is_hidden,omitempty"`
	PID                  int                `gocti:"pid"                   json:"pid,omitempty"`
	CreatedTime          *time.Time         `gocti:"created_time"          json:"created_time,omitempty"`
	Cwd                  string             `gocti:"cwd"                   json:"cwd,omitempty"`
	CommandLine          string             `gocti:"command_line"          json:"command_line,omitempty"`
	EnvironmentVariables []string           `gocti:"environment_variables" json:"environment_variables,omitempty"`
	AslrEnabled          bool               `gocti:"aslr_enabled"          json:"aslr_enabled,omitempty"`
	DepEnabled           bool               `gocti:"dep_enabled"           json:"dep_enabled,omitempty"`
	Priority             string             `gocti:"priority"              json:"priority,omitempty"`
	OwnerSID             string             `gocti:"owner_sid"             json:"owner_sid,omitempty"`
	WindowTitle          string             `gocti:"window_title"          json:"window_title,omitempty"`
	StartupInfo          []Dictionary       `gocti:"startup_info"          json:"startup_info,omitempty"`
	IntegrityLevel       string             `gocti:"integrity_level"       json:"integrity_level,omitempty"`
	ServiceName          string             `gocti:"service_name"          json:"service_name,omitempty"`
	Descriptions         []string           `gocti:"descriptions"          json:"descriptions,omitempty"`
	DisplayName          string             `gocti:"display_name"          json:"display_name,omitempty"`
	GroupName            string             `gocti:"group_name"            json:"group_name,omitempty"`
	StartType            string             `gocti:"start_type"            json:"start_type,omitempty"`
	ServiceDlls          StixFileConnection `gocti:"serviceDlls"           json:"serviceDlls,omitempty"`
	ServiceType          string             `gocti:"service_type"          json:"service_type,omitempty"`
	ServiceStatus        string             `gocti:"service_status"        json:"service_status,omitempty"`
}

func (p Process) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempProcess Process

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempProcess)(&p))
}

// ProcessAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ProcessAddInput struct {
	// ProcessAddInput
	IsHidden             bool              `gocti:"is_hidden"             json:"is_hidden,omitempty"`
	PID                  int               `gocti:"pid"                   json:"pid,omitempty"`
	CreatedTime          *time.Time        `gocti:"created_time"          json:"created_time,omitempty"`
	Cwd                  string            `gocti:"cwd"                   json:"cwd,omitempty"`
	XOpenctiDescription  string            `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	CommandLine          string            `gocti:"command_line"          json:"command_line,omitempty"`
	EnvironmentVariables []string          `gocti:"environment_variables" json:"environment_variables,omitempty"`
	AslrEnabled          bool              `gocti:"aslr_enabled"          json:"aslr_enabled,omitempty"`
	DepEnabled           bool              `gocti:"dep_enabled"           json:"dep_enabled,omitempty"`
	Priority             string            `gocti:"priority"              json:"priority,omitempty"`
	OwnerSID             string            `gocti:"owner_sid"             json:"owner_sid,omitempty"`
	WindowTitle          string            `gocti:"window_title"          json:"window_title,omitempty"`
	StartupInfo          []DictionaryInput `gocti:"startup_info"          json:"startup_info,omitempty"`
	IntegrityLevel       string            `gocti:"integrity_level"       json:"integrity_level,omitempty"`
	ServiceName          string            `gocti:"service_name"          json:"service_name,omitempty"`
	Descriptions         []string          `gocti:"descriptions"          json:"descriptions,omitempty"`
	DisplayName          string            `gocti:"display_name"          json:"display_name,omitempty"`
	GroupName            string            `gocti:"group_name"            json:"group_name,omitempty"`
	StartType            string            `gocti:"start_type"            json:"start_type,omitempty"`
	ServiceDlls          []string          `gocti:"serviceDlls"           json:"serviceDlls,omitempty"`
	ServiceType          string            `gocti:"service_type"          json:"service_type,omitempty"`
	ServiceStatus        string            `gocti:"service_status"        json:"service_status,omitempty"`
	File                 []byte            `gocti:"file"                  json:"file,omitempty"`
}

func (p ProcessAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempProcessAddInput ProcessAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempProcessAddInput)(&p))
}

// PublicDashboard represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type PublicDashboard struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// PublicDashboard
	Name               string                   `gocti:"name"                 json:"name,omitempty"`
	Owner              Creator                  `gocti:"owner"                json:"owner,omitempty"`
	Description        string                   `gocti:"description"          json:"description,omitempty"`
	DashboardID        string                   `gocti:"dashboard_id"         json:"dashboard_id,omitempty"`
	Dashboard          Workspace                `gocti:"dashboard"            json:"dashboard,omitempty"`
	UserID             string                   `gocti:"user_id"              json:"user_id,omitempty"`
	PublicManifest     string                   `gocti:"public_manifest"      json:"public_manifest,omitempty"`
	PrivateManifest    string                   `gocti:"private_manifest"     json:"private_manifest,omitempty"`
	UriKey             string                   `gocti:"uri_key"              json:"uri_key,omitempty"`
	AllowedMarkingsIDs []string                 `gocti:"allowed_markings_ids" json:"allowed_markings_ids,omitempty"`
	AllowedMarkings    []MarkingDefinitionShort `gocti:"allowed_markings"     json:"allowed_markings,omitempty"`
	CreatedAt          *time.Time               `gocti:"created_at"           json:"created_at,omitempty"`
	UpdatedAt          *time.Time               `gocti:"updated_at"           json:"updated_at,omitempty"`
	EditContext        []EditUserContext        `gocti:"editContext"          json:"editContext,omitempty"`
	Enabled            bool                     `gocti:"enabled"              json:"enabled,omitempty"`
}

func (p PublicDashboard) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(p).IsZero() {
		return []byte("null"), nil
	}

	type tempPublicDashboard PublicDashboard

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempPublicDashboard)(&p))
}

// RabbitMQConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type RabbitMQConnection struct {
	// RabbitMQConnection
	Host   string `gocti:"host"    json:"host,omitempty"`
	Vhost  string `gocti:"vhost"   json:"vhost,omitempty"`
	UseSsl bool   `gocti:"use_ssl" json:"use_ssl,omitempty"`
	Port   int    `gocti:"port"    json:"port,omitempty"`
	User   string `gocti:"user"    json:"user,omitempty"`
	Pass   string `gocti:"pass"    json:"pass,omitempty"`
}

func (r RabbitMQConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRabbitMQConnection RabbitMQConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRabbitMQConnection)(&r))
}

// Region represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Region struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Location
	Name            string   `gocti:"name"              json:"name,omitempty"`
	Description     string   `gocti:"description"       json:"description,omitempty"`
	Latitude        float64  `gocti:"latitude"          json:"latitude,omitempty"`
	Longitude       float64  `gocti:"longitude"         json:"longitude,omitempty"`
	Precision       float64  `gocti:"precision"         json:"precision,omitempty"`
	XOpenctiAliases []string `gocti:"x_opencti_aliases" json:"x_opencti_aliases,omitempty"`

	// Region
	ParentRegions RegionConnection  `gocti:"parentRegions" json:"parentRegions,omitempty"`
	SubRegions    RegionConnection  `gocti:"subRegions"    json:"subRegions,omitempty"`
	Countries     CountryConnection `gocti:"countries"     json:"countries,omitempty"`
}

func (r Region) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRegion Region

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRegion)(&r))
}

// RegionConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type RegionConnection struct {
	// RegionConnection
	PageInfo PageInfo     `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []RegionEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (r RegionConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRegionConnection RegionConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRegionConnection)(&r))
}

// RegionEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type RegionEdge struct {
	// RegionEdge
	Cursor string `gocti:"cursor" json:"cursor,omitempty"`
	Node   Region `gocti:"node"   json:"node,omitempty"`
}

func (r RegionEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRegionEdge RegionEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRegionEdge)(&r))
}

// Report represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Report struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Report
	Name                    string     `gocti:"name"                    json:"name,omitempty"`
	Description             string     `gocti:"description"             json:"description,omitempty"`
	Content                 string     `gocti:"content"                 json:"content,omitempty"`
	ContentMapping          string     `gocti:"content_mapping"         json:"content_mapping,omitempty"`
	ReportTypes             []string   `gocti:"report_types"            json:"report_types,omitempty"`
	XOpenctiReliability     string     `gocti:"x_opencti_reliability"   json:"x_opencti_reliability,omitempty"`
	Published               *time.Time `gocti:"published"               json:"published,omitempty"`
	DeleteWithElementsCount int        `gocti:"deleteWithElementsCount" json:"deleteWithElementsCount,omitempty"`
}

func (r Report) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempReport Report

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempReport)(&r))
}

// ReportConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ReportConnection struct {
	// ReportConnection
	PageInfo PageInfo     `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []ReportEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (r ReportConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempReportConnection ReportConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempReportConnection)(&r))
}

// ReportEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ReportEdge struct {
	// ReportEdge
	Cursor string `gocti:"cursor" json:"cursor,omitempty"`
	Node   Report `gocti:"node"   json:"node,omitempty"`
}

func (r ReportEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempReportEdge ReportEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempReportEdge)(&r))
}

// Representative represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Representative struct {
	// Representative
	Main      string `gocti:"main"      json:"main,omitempty"`
	Secondary string `gocti:"secondary" json:"secondary,omitempty"`
}

func (r Representative) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRepresentative Representative

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRepresentative)(&r))
}

// RequestAccessConfiguration represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type RequestAccessConfiguration struct {
	// RequestAccessConfiguration
	ID             string                `gocti:"id"              json:"id,omitempty"`
	ApprovedStatus Status                `gocti:"approved_status" json:"approved_status,omitempty"`
	DeclinedStatus Status                `gocti:"declined_status" json:"declined_status,omitempty"`
	ApprovalAdmin  []RequestAccessMember `gocti:"approval_admin"  json:"approval_admin,omitempty"`
}

func (r RequestAccessConfiguration) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRequestAccessConfiguration RequestAccessConfiguration

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRequestAccessConfiguration)(&r))
}

// RequestAccessMember represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type RequestAccessMember struct {
	// RequestAccessMember
	ID   string `gocti:"id"   json:"id,omitempty"`
	Name string `gocti:"name" json:"name,omitempty"`
}

func (r RequestAccessMember) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRequestAccessMember RequestAccessMember

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRequestAccessMember)(&r))
}

// RfiRequestAccessConfiguration represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type RfiRequestAccessConfiguration struct {
	// RfiRequestAccessConfiguration
	Configuration   RequestAccessConfiguration `gocti:"configuration"   json:"configuration,omitempty"`
	IsUserCanAction bool                       `gocti:"isUserCanAction" json:"isUserCanAction,omitempty"`
}

func (r RfiRequestAccessConfiguration) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRfiRequestAccessConfiguration RfiRequestAccessConfiguration

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRfiRequestAccessConfiguration)(&r))
}

// Role represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Role struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// Role
	Name                     string            `gocti:"name"                        json:"name,omitempty"`
	Description              string            `gocti:"description"                 json:"description,omitempty"`
	CreatedAt                *time.Time        `gocti:"created_at"                  json:"created_at,omitempty"`
	UpdatedAt                *time.Time        `gocti:"updated_at"                  json:"updated_at,omitempty"`
	Capabilities             []Capability      `gocti:"capabilities"                json:"capabilities,omitempty"`
	EditContext              []EditUserContext `gocti:"editContext"                 json:"editContext,omitempty"`
	CanManageSensitiveConfig bool              `gocti:"can_manage_sensitive_config" json:"can_manage_sensitive_config,omitempty"`
}

func (r Role) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRole Role

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRole)(&r))
}

// RoleConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type RoleConnection struct {
	// RoleConnection
	PageInfo PageInfo   `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []RoleEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (r RoleConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRoleConnection RoleConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRoleConnection)(&r))
}

// RoleEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type RoleEdge struct {
	// RoleEdge
	Cursor string `gocti:"cursor" json:"cursor,omitempty"`
	Node   Role   `gocti:"node"   json:"node,omitempty"`
}

func (r RoleEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(r).IsZero() {
		return []byte("null"), nil
	}

	type tempRoleEdge RoleEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempRoleEdge)(&r))
}

// ScaleAttribute represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ScaleAttribute struct {
	// ScaleAttribute
	Name  string `gocti:"name"  json:"name,omitempty"`
	Scale string `gocti:"scale" json:"scale,omitempty"`
}

func (s ScaleAttribute) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempScaleAttribute ScaleAttribute

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempScaleAttribute)(&s))
}

// Sector represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Sector struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Identity
	IdentityClass       string   `gocti:"identity_class"        json:"identity_class,omitempty"`
	Name                string   `gocti:"name"                  json:"name,omitempty"`
	Description         string   `gocti:"description"           json:"description,omitempty"`
	Roles               []string `gocti:"roles"                 json:"roles,omitempty"`
	ContactInformation  string   `gocti:"contact_information"   json:"contact_information,omitempty"`
	XOpenctiAliases     []string `gocti:"x_opencti_aliases"     json:"x_opencti_aliases,omitempty"`
	XOpenctiReliability string   `gocti:"x_opencti_reliability" json:"x_opencti_reliability,omitempty"`

	// Sector
	ParentSectors         SectorConnection               `gocti:"parentSectors"         json:"parentSectors,omitempty"`
	SubSectors            SectorConnection               `gocti:"subSectors"            json:"subSectors,omitempty"`
	IsSubSector           bool                           `gocti:"isSubSector"           json:"isSubSector,omitempty"`
	TargetedOrganizations StixCoreRelationshipConnection `gocti:"targetedOrganizations" json:"targetedOrganizations,omitempty"`
}

func (s Sector) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSector Sector

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSector)(&s))
}

// SectorConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type SectorConnection struct {
	// SectorConnection
	PageInfo PageInfo     `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []SectorEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (s SectorConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSectorConnection SectorConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSectorConnection)(&s))
}

// SectorEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type SectorEdge struct {
	// SectorEdge
	Cursor string   `gocti:"cursor" json:"cursor,omitempty"`
	Types  []string `gocti:"types"  json:"types,omitempty"`
	Node   Sector   `gocti:"node"   json:"node,omitempty"`
}

func (s SectorEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSectorEdge SectorEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSectorEdge)(&s))
}

// SecurityPlatform represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type SecurityPlatform struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Identity
	IdentityClass       string   `gocti:"identity_class"        json:"identity_class,omitempty"`
	Name                string   `gocti:"name"                  json:"name,omitempty"`
	Description         string   `gocti:"description"           json:"description,omitempty"`
	Roles               []string `gocti:"roles"                 json:"roles,omitempty"`
	ContactInformation  string   `gocti:"contact_information"   json:"contact_information,omitempty"`
	XOpenctiAliases     []string `gocti:"x_opencti_aliases"     json:"x_opencti_aliases,omitempty"`
	XOpenctiReliability string   `gocti:"x_opencti_reliability" json:"x_opencti_reliability,omitempty"`

	// SecurityPlatform
	SecurityPlatformType string `gocti:"security_platform_type" json:"security_platform_type,omitempty"`
}

func (s SecurityPlatform) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSecurityPlatform SecurityPlatform

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSecurityPlatform)(&s))
}

// SessionDetail represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type SessionDetail struct {
	// SessionDetail
	ID             string     `gocti:"id"             json:"id,omitempty"`
	Created        *time.Time `gocti:"created"        json:"created,omitempty"`
	Ttl            int        `gocti:"ttl"            json:"ttl,omitempty"`
	OriginalMaxAge int        `gocti:"originalMaxAge" json:"originalMaxAge,omitempty"`
}

func (s SessionDetail) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSessionDetail SessionDetail

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSessionDetail)(&s))
}

// Software represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Software struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// Software
	Name            string                  `gocti:"name"              json:"name,omitempty"`
	Cpe             string                  `gocti:"cpe"               json:"cpe,omitempty"`
	SwID            string                  `gocti:"swid"              json:"swid,omitempty"`
	Languages       []string                `gocti:"languages"         json:"languages,omitempty"`
	Vendor          string                  `gocti:"vendor"            json:"vendor,omitempty"`
	Version         string                  `gocti:"version"           json:"version,omitempty"`
	XOpenctiProduct string                  `gocti:"x_opencti_product" json:"x_opencti_product,omitempty"`
	Vulnerabilities VulnerabilityConnection `gocti:"vulnerabilities"   json:"vulnerabilities,omitempty"`
}

func (s Software) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSoftware Software

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSoftware)(&s))
}

// SoftwareAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type SoftwareAddInput struct {
	// SoftwareAddInput
	Name            string   `gocti:"name"              json:"name,omitempty"`
	Cpe             string   `gocti:"cpe"               json:"cpe,omitempty"`
	SwID            string   `gocti:"swid"              json:"swid,omitempty"`
	Languages       []string `gocti:"languages"         json:"languages,omitempty"`
	Vendor          string   `gocti:"vendor"            json:"vendor,omitempty"`
	Version         string   `gocti:"version"           json:"version,omitempty"`
	XOpenctiProduct string   `gocti:"x_opencti_product" json:"x_opencti_product,omitempty"`
	File            []byte   `gocti:"file"              json:"file,omitempty"`
}

func (s SoftwareAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSoftwareAddInput SoftwareAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSoftwareAddInput)(&s))
}

// SoftwareConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type SoftwareConnection struct {
	// SoftwareConnection
	PageInfo PageInfo       `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []SoftwareEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (s SoftwareConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSoftwareConnection SoftwareConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSoftwareConnection)(&s))
}

// SoftwareEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type SoftwareEdge struct {
	// SoftwareEdge
	Cursor string   `gocti:"cursor" json:"cursor,omitempty"`
	Node   Software `gocti:"node"   json:"node,omitempty"`
}

func (s SoftwareEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSoftwareEdge SoftwareEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSoftwareEdge)(&s))
}

type State string

const (
	StateWait     State = "wait"
	StateProgress State = "progress"
	StateComplete State = "complete"
	StateTimeout  State = "timeout"
)

func (s State) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempState State

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempState)(&s))
}

// Status represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Status struct {
	// Status
	ID         string         `gocti:"id"          json:"id,omitempty"`
	TemplateID string         `gocti:"template_id" json:"template_id,omitempty"`
	Template   StatusTemplate `gocti:"template"    json:"template,omitempty"`
	Type       string         `gocti:"type"        json:"type,omitempty"`
	Order      int            `gocti:"order"       json:"order,omitempty"`
	Disabled   bool           `gocti:"disabled"    json:"disabled,omitempty"`
	Scope      StatusScope    `gocti:"scope"       json:"scope,omitempty"`
}

func (s Status) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStatus Status

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStatus)(&s))
}

type StatusScope string

const (
	StatusScopeGLOBAL        StatusScope = "GLOBAL"
	StatusScopeREQUESTACCESS StatusScope = "REQUEST_ACCESS"
)

func (s StatusScope) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStatusScope StatusScope

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStatusScope)(&s))
}

// StatusTemplate represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StatusTemplate struct {
	// StatusTemplate
	ID          string            `gocti:"id"          json:"id,omitempty"`
	Name        string            `gocti:"name"        json:"name,omitempty"`
	Color       string            `gocti:"color"       json:"color,omitempty"`
	EditContext []EditUserContext `gocti:"editContext" json:"editContext,omitempty"`
	Usages      int               `gocti:"usages"      json:"usages,omitempty"`
}

func (s StatusTemplate) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStatusTemplate StatusTemplate

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStatusTemplate)(&s))
}

// StixCoreObject represents a GraphQL INTERFACE
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [AttackPattern]
// - [Campaign]
// - [Note]
// - [ObservedData]
// - [Opinion]
// - [Report]
// - [CourseOfAction]
// - [Individual]
// - [Sector]
// - [System]
// - [Infrastructure]
// - [IntrusionSet]
// - [Position]
// - [City]
// - [Country]
// - [Region]
// - [Malware]
// - [ThreatActorGroup]
// - [Tool]
// - [Vulnerability]
// - [Incident]
// - [AutonomousSystem]
// - [Directory]
// - [DomainName]
// - [EmailAddr]
// - [EmailMessage]
// - [EmailMimePartType]
// - [Artifact]
// - [StixFile]
// - [X509Certificate]
// - [IPv4Addr]
// - [IPv6Addr]
// - [MacAddr]
// - [Mutex]
// - [NetworkTraffic]
// - [Process]
// - [Software]
// - [Url]
// - [UserAccount]
// - [WindowsRegistryKey]
// - [WindowsRegistryValueType]
// - [CryptographicKey]
// - [CryptocurrencyWallet]
// - [Hostname]
// - [Text]
// - [UserAgent]
// - [BankAccount]
// - [TrackingNumber]
// - [Credential]
// - [PhoneNumber]
// - [PaymentCard]
// - [MediaContent]
// - [Persona]
// - [Channel]
// - [Language]
// - [Event]
// - [Grouping]
// - [Narrative]
// - [DataComponent]
// - [DataSource]
// - [AdministrativeArea]
// - [Task]
// - [CaseIncident]
// - [CaseRfi]
// - [CaseRft]
// - [Feedback]
// - [MalwareAnalysis]
// - [ThreatActorIndividual]
// - [Indicator]
// - [Organization]
// - [SecurityPlatform]
//
// (See the examples for ways to decode an interface field into an implementation).
type StixCoreObject struct {
	// StixCoreObject
	ID                 string                      `gocti:"id"                 json:"id,omitempty"`
	StandardID         string                      `gocti:"standard_id"        json:"standard_id,omitempty"`
	EntityType         string                      `gocti:"entity_type"        json:"entity_type,omitempty"`
	ParentTypes        []string                    `gocti:"parent_types"       json:"parent_types,omitempty"`
	SpecVersion        string                      `gocti:"spec_version"       json:"spec_version,omitempty"`
	CreatedAt          *time.Time                  `gocti:"created_at"         json:"created_at,omitempty"`
	UpdatedAt          *time.Time                  `gocti:"updated_at"         json:"updated_at,omitempty"`
	DraftVersion       DraftVersion                `gocti:"draftVersion"       json:"draftVersion,omitempty"`
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	Creators           []Creator                   `gocti:"creators"           json:"creators,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (s StixCoreObject) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[AttackPattern](),
		reflect.TypeFor[Campaign](),
		reflect.TypeFor[Note](),
		reflect.TypeFor[ObservedData](),
		reflect.TypeFor[Opinion](),
		reflect.TypeFor[Report](),
		reflect.TypeFor[CourseOfAction](),
		reflect.TypeFor[Individual](),
		reflect.TypeFor[Sector](),
		reflect.TypeFor[System](),
		reflect.TypeFor[Infrastructure](),
		reflect.TypeFor[IntrusionSet](),
		reflect.TypeFor[Position](),
		reflect.TypeFor[City](),
		reflect.TypeFor[Country](),
		reflect.TypeFor[Region](),
		reflect.TypeFor[Malware](),
		reflect.TypeFor[ThreatActorGroup](),
		reflect.TypeFor[Tool](),
		reflect.TypeFor[Vulnerability](),
		reflect.TypeFor[Incident](),
		reflect.TypeFor[AutonomousSystem](),
		reflect.TypeFor[Directory](),
		reflect.TypeFor[DomainName](),
		reflect.TypeFor[EmailAddr](),
		reflect.TypeFor[EmailMessage](),
		reflect.TypeFor[EmailMimePartType](),
		reflect.TypeFor[Artifact](),
		reflect.TypeFor[StixFile](),
		reflect.TypeFor[X509Certificate](),
		reflect.TypeFor[IPv4Addr](),
		reflect.TypeFor[IPv6Addr](),
		reflect.TypeFor[MacAddr](),
		reflect.TypeFor[Mutex](),
		reflect.TypeFor[NetworkTraffic](),
		reflect.TypeFor[Process](),
		reflect.TypeFor[Software](),
		reflect.TypeFor[URL](),
		reflect.TypeFor[UserAccount](),
		reflect.TypeFor[WindowsRegistryKey](),
		reflect.TypeFor[WindowsRegistryValueType](),
		reflect.TypeFor[CryptographicKey](),
		reflect.TypeFor[CryptocurrencyWallet](),
		reflect.TypeFor[Hostname](),
		reflect.TypeFor[Text](),
		reflect.TypeFor[UserAgent](),
		reflect.TypeFor[BankAccount](),
		reflect.TypeFor[TrackingNumber](),
		reflect.TypeFor[Credential](),
		reflect.TypeFor[PhoneNumber](),
		reflect.TypeFor[PaymentCard](),
		reflect.TypeFor[MediaContent](),
		reflect.TypeFor[Persona](),
		reflect.TypeFor[Channel](),
		reflect.TypeFor[Language](),
		reflect.TypeFor[Event](),
		reflect.TypeFor[Grouping](),
		reflect.TypeFor[Narrative](),
		reflect.TypeFor[DataComponent](),
		reflect.TypeFor[DataSource](),
		reflect.TypeFor[AdministrativeArea](),
		reflect.TypeFor[Task](),
		reflect.TypeFor[CaseIncident](),
		reflect.TypeFor[CaseRfi](),
		reflect.TypeFor[CaseRft](),
		reflect.TypeFor[Feedback](),
		reflect.TypeFor[MalwareAnalysis](),
		reflect.TypeFor[ThreatActorIndividual](),
		reflect.TypeFor[Indicator](),
		reflect.TypeFor[Organization](),
		reflect.TypeFor[SecurityPlatform](),
	}
}

func (s StixCoreObject) Remainder() map[string]any {
	return s.Remain
}

func (s StixCoreObject) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixCoreObject StixCoreObject

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixCoreObject)(&s))
}

// StixCoreRelationship represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixCoreRelationship struct {
	// BasicRelationship
	ID          string     `gocti:"id"           json:"id,omitempty"`
	StandardID  string     `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string     `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string   `gocti:"parent_types" json:"parent_types,omitempty"`
	CreatedAt   *time.Time `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt   *time.Time `gocti:"updated_at"   json:"updated_at,omitempty"`
	Creators    []Creator  `gocti:"creators"     json:"creators,omitempty"`

	// StixRelationship
	From             StixObjectOrStixRelationshipOrCreator `gocti:"from"              json:"from,omitempty"`
	To               StixObjectOrStixRelationshipOrCreator `gocti:"to"                json:"to,omitempty"`
	SpecVersion      string                                `gocti:"spec_version"      json:"spec_version,omitempty"`
	Created          *time.Time                            `gocti:"created"           json:"created,omitempty"`
	Modified         *time.Time                            `gocti:"modified"          json:"modified,omitempty"`
	Confidence       int                                   `gocti:"confidence"        json:"confidence,omitempty"`
	RelationshipType string                                `gocti:"relationship_type" json:"relationship_type,omitempty"`
	CreatedBy        Identity                              `gocti:"createdBy"         json:"createdBy,omitempty"`
	ObjectMarking    []MarkingDefinition                   `gocti:"objectMarking"     json:"objectMarking,omitempty"`
	DraftVersion     DraftVersion                          `gocti:"draftVersion"      json:"draftVersion,omitempty"`

	// StixCoreRelationship
	FromID                string                         `gocti:"fromId"                json:"fromId,omitempty"`
	FromType              string                         `gocti:"fromType"              json:"fromType,omitempty"`
	ToID                  string                         `gocti:"toId"                  json:"toId,omitempty"`
	ToType                string                         `gocti:"toType"                json:"toType,omitempty"`
	Description           string                         `gocti:"description"           json:"description,omitempty"`
	StartTime             *time.Time                     `gocti:"start_time"            json:"start_time,omitempty"`
	StopTime              *time.Time                     `gocti:"stop_time"             json:"stop_time,omitempty"`
	Revoked               bool                           `gocti:"revoked"               json:"revoked,omitempty"`
	Lang                  string                         `gocti:"lang"                  json:"lang,omitempty"`
	ObjectLabel           []Label                        `gocti:"objectLabel"           json:"objectLabel,omitempty"`
	ObjectOrganization    []Organization                 `gocti:"objectOrganization"    json:"objectOrganization,omitempty"`
	ExternalReferences    ExternalReferenceConnection    `gocti:"externalReferences"    json:"externalReferences,omitempty"`
	ContainersNumber      Number                         `gocti:"containersNumber"      json:"containersNumber,omitempty"`
	Containers            ContainerConnection            `gocti:"containers"            json:"containers,omitempty"`
	Reports               ReportConnection               `gocti:"reports"               json:"reports,omitempty"`
	Notes                 NoteConnection                 `gocti:"notes"                 json:"notes,omitempty"`
	Opinions              OpinionConnection              `gocti:"opinions"              json:"opinions,omitempty"`
	Groupings             GroupingConnection             `gocti:"groupings"             json:"groupings,omitempty"`
	Cases                 CaseConnection                 `gocti:"cases"                 json:"cases,omitempty"`
	StixCoreRelationships StixCoreRelationshipConnection `gocti:"stixCoreRelationships" json:"stixCoreRelationships,omitempty"`
	KillChainPhases       []KillChainPhase               `gocti:"killChainPhases"       json:"killChainPhases,omitempty"`
	EditContext           []EditUserContext              `gocti:"editContext"           json:"editContext,omitempty"`
	Status                Status                         `gocti:"status"                json:"status,omitempty"`
	WorkflowEnabled       bool                           `gocti:"workflowEnabled"       json:"workflowEnabled,omitempty"`
}

func (s StixCoreRelationship) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixCoreRelationship StixCoreRelationship

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixCoreRelationship)(&s))
}

// StixCoreRelationshipConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixCoreRelationshipConnection struct {
	// StixCoreRelationshipConnection
	PageInfo PageInfo                   `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []StixCoreRelationshipEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (s StixCoreRelationshipConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixCoreRelationshipConnection StixCoreRelationshipConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixCoreRelationshipConnection)(&s))
}

// StixCoreRelationshipEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixCoreRelationshipEdge struct {
	// StixCoreRelationshipEdge
	Cursor string               `gocti:"cursor" json:"cursor,omitempty"`
	Node   StixCoreRelationship `gocti:"node"   json:"node,omitempty"`
}

func (s StixCoreRelationshipEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixCoreRelationshipEdge StixCoreRelationshipEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixCoreRelationshipEdge)(&s))
}

// StixCyberObservable represents a GraphQL INTERFACE
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [AutonomousSystem]
// - [Directory]
// - [DomainName]
// - [EmailAddr]
// - [EmailMessage]
// - [EmailMimePartType]
// - [Artifact]
// - [StixFile]
// - [X509Certificate]
// - [IPv4Addr]
// - [IPv6Addr]
// - [MacAddr]
// - [Mutex]
// - [NetworkTraffic]
// - [Process]
// - [Software]
// - [Url]
// - [UserAccount]
// - [WindowsRegistryKey]
// - [WindowsRegistryValueType]
// - [CryptographicKey]
// - [CryptocurrencyWallet]
// - [Hostname]
// - [Text]
// - [UserAgent]
// - [BankAccount]
// - [TrackingNumber]
// - [Credential]
// - [PhoneNumber]
// - [PaymentCard]
// - [MediaContent]
// - [Persona]
//
// (See the examples for ways to decode an interface field into an implementation).
type StixCyberObservable struct {
	// StixCyberObservable
	ID                  string                      `gocti:"id"                    json:"id,omitempty"`
	StandardID          string                      `gocti:"standard_id"           json:"standard_id,omitempty"`
	EntityType          string                      `gocti:"entity_type"           json:"entity_type,omitempty"`
	ParentTypes         []string                    `gocti:"parent_types"          json:"parent_types,omitempty"`
	SpecVersion         string                      `gocti:"spec_version"          json:"spec_version,omitempty"`
	CreatedAt           *time.Time                  `gocti:"created_at"            json:"created_at,omitempty"`
	UpdatedAt           *time.Time                  `gocti:"updated_at"            json:"updated_at,omitempty"`
	DraftVersion        DraftVersion                `gocti:"draftVersion"          json:"draftVersion,omitempty"`
	CreatedBy           Identity                    `gocti:"createdBy"             json:"createdBy,omitempty"`
	ObjectMarking       []MarkingDefinition         `gocti:"objectMarking"         json:"objectMarking,omitempty"`
	ObjectOrganization  []Organization              `gocti:"objectOrganization"    json:"objectOrganization,omitempty"`
	ObjectLabel         []Label                     `gocti:"objectLabel"           json:"objectLabel,omitempty"`
	ExternalReferences  ExternalReferenceConnection `gocti:"externalReferences"    json:"externalReferences,omitempty"`
	OpinionsMetrics     OpinionsMetrics             `gocti:"opinions_metrics"      json:"opinions_metrics,omitempty"`
	XOpenctiScore       int                         `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string                      `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string                      `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection         `gocti:"indicators"            json:"indicators,omitempty"`
	Creators            []Creator                   `gocti:"creators"              json:"creators,omitempty"`
	ImportFiles         FileConnection              `gocti:"importFiles"           json:"importFiles,omitempty"`

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (s StixCyberObservable) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[AutonomousSystem](),
		reflect.TypeFor[Directory](),
		reflect.TypeFor[DomainName](),
		reflect.TypeFor[EmailAddr](),
		reflect.TypeFor[EmailMessage](),
		reflect.TypeFor[EmailMimePartType](),
		reflect.TypeFor[Artifact](),
		reflect.TypeFor[StixFile](),
		reflect.TypeFor[X509Certificate](),
		reflect.TypeFor[IPv4Addr](),
		reflect.TypeFor[IPv6Addr](),
		reflect.TypeFor[MacAddr](),
		reflect.TypeFor[Mutex](),
		reflect.TypeFor[NetworkTraffic](),
		reflect.TypeFor[Process](),
		reflect.TypeFor[Software](),
		reflect.TypeFor[URL](),
		reflect.TypeFor[UserAccount](),
		reflect.TypeFor[WindowsRegistryKey](),
		reflect.TypeFor[WindowsRegistryValueType](),
		reflect.TypeFor[CryptographicKey](),
		reflect.TypeFor[CryptocurrencyWallet](),
		reflect.TypeFor[Hostname](),
		reflect.TypeFor[Text](),
		reflect.TypeFor[UserAgent](),
		reflect.TypeFor[BankAccount](),
		reflect.TypeFor[TrackingNumber](),
		reflect.TypeFor[Credential](),
		reflect.TypeFor[PhoneNumber](),
		reflect.TypeFor[PaymentCard](),
		reflect.TypeFor[MediaContent](),
		reflect.TypeFor[Persona](),
	}
}

func (s StixCyberObservable) Remainder() map[string]any {
	return s.Remain
}

func (s StixCyberObservable) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixCyberObservable StixCyberObservable

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixCyberObservable)(&s))
}

// StixCyberObservableConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixCyberObservableConnection struct {
	// StixCyberObservableConnection
	PageInfo PageInfo                  `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []StixCyberObservableEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (s StixCyberObservableConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixCyberObservableConnection StixCyberObservableConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixCyberObservableConnection)(&s))
}

// StixCyberObservableEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixCyberObservableEdge struct {
	// StixCyberObservableEdge
	Cursor string              `gocti:"cursor" json:"cursor,omitempty"`
	Node   StixCyberObservable `gocti:"node"   json:"node,omitempty"`
}

func (s StixCyberObservableEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixCyberObservableEdge StixCyberObservableEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixCyberObservableEdge)(&s))
}

// StixDomainObject represents a GraphQL INTERFACE
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [AttackPattern]
// - [Campaign]
// - [Note]
// - [ObservedData]
// - [Opinion]
// - [Report]
// - [CourseOfAction]
// - [Individual]
// - [Sector]
// - [System]
// - [Infrastructure]
// - [IntrusionSet]
// - [Position]
// - [City]
// - [Country]
// - [Region]
// - [Malware]
// - [ThreatActorGroup]
// - [Tool]
// - [Vulnerability]
// - [Incident]
// - [Channel]
// - [Language]
// - [Event]
// - [Grouping]
// - [Narrative]
// - [DataComponent]
// - [DataSource]
// - [AdministrativeArea]
// - [Task]
// - [CaseIncident]
// - [CaseRfi]
// - [CaseRft]
// - [Feedback]
// - [MalwareAnalysis]
// - [ThreatActorIndividual]
// - [Indicator]
// - [Organization]
// - [SecurityPlatform]
//
// (See the examples for ways to decode an interface field into an implementation).
type StixDomainObject struct {
	// StixDomainObject
	ID                 string                      `gocti:"id"                 json:"id,omitempty"`
	StandardID         string                      `gocti:"standard_id"        json:"standard_id,omitempty"`
	EntityType         string                      `gocti:"entity_type"        json:"entity_type,omitempty"`
	ParentTypes        []string                    `gocti:"parent_types"       json:"parent_types,omitempty"`
	SpecVersion        string                      `gocti:"spec_version"       json:"spec_version,omitempty"`
	CreatedAt          *time.Time                  `gocti:"created_at"         json:"created_at,omitempty"`
	UpdatedAt          *time.Time                  `gocti:"updated_at"         json:"updated_at,omitempty"`
	DraftVersion       DraftVersion                `gocti:"draftVersion"       json:"draftVersion,omitempty"`
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`
	Revoked            bool                        `gocti:"revoked"            json:"revoked,omitempty"`
	Confidence         int                         `gocti:"confidence"         json:"confidence,omitempty"`
	Lang               string                      `gocti:"lang"               json:"lang,omitempty"`
	Created            *time.Time                  `gocti:"created"            json:"created,omitempty"`
	Modified           *time.Time                  `gocti:"modified"           json:"modified,omitempty"`
	ObjectAssignee     []Assignee                  `gocti:"objectAssignee"     json:"objectAssignee,omitempty"`
	ObjectParticipant  []Participant               `gocti:"objectParticipant"  json:"objectParticipant,omitempty"`
	Creators           []Creator                   `gocti:"creators"           json:"creators,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	Status             Status                      `gocti:"status"             json:"status,omitempty"`
	WorkflowEnabled    bool                        `gocti:"workflowEnabled"    json:"workflowEnabled,omitempty"`

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (s StixDomainObject) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[AttackPattern](),
		reflect.TypeFor[Campaign](),
		reflect.TypeFor[Note](),
		reflect.TypeFor[ObservedData](),
		reflect.TypeFor[Opinion](),
		reflect.TypeFor[Report](),
		reflect.TypeFor[CourseOfAction](),
		reflect.TypeFor[Individual](),
		reflect.TypeFor[Sector](),
		reflect.TypeFor[System](),
		reflect.TypeFor[Infrastructure](),
		reflect.TypeFor[IntrusionSet](),
		reflect.TypeFor[Position](),
		reflect.TypeFor[City](),
		reflect.TypeFor[Country](),
		reflect.TypeFor[Region](),
		reflect.TypeFor[Malware](),
		reflect.TypeFor[ThreatActorGroup](),
		reflect.TypeFor[Tool](),
		reflect.TypeFor[Vulnerability](),
		reflect.TypeFor[Incident](),
		reflect.TypeFor[Channel](),
		reflect.TypeFor[Language](),
		reflect.TypeFor[Event](),
		reflect.TypeFor[Grouping](),
		reflect.TypeFor[Narrative](),
		reflect.TypeFor[DataComponent](),
		reflect.TypeFor[DataSource](),
		reflect.TypeFor[AdministrativeArea](),
		reflect.TypeFor[Task](),
		reflect.TypeFor[CaseIncident](),
		reflect.TypeFor[CaseRfi](),
		reflect.TypeFor[CaseRft](),
		reflect.TypeFor[Feedback](),
		reflect.TypeFor[MalwareAnalysis](),
		reflect.TypeFor[ThreatActorIndividual](),
		reflect.TypeFor[Indicator](),
		reflect.TypeFor[Organization](),
		reflect.TypeFor[SecurityPlatform](),
	}
}

func (s StixDomainObject) Remainder() map[string]any {
	return s.Remain
}

func (s StixDomainObject) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixDomainObject StixDomainObject

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixDomainObject)(&s))
}

// StixFile represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixFile struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// HashedObservable
	Hashes []Hash `gocti:"hashes" json:"hashes,omitempty"`

	// StixFile
	Extensions              string     `gocti:"extensions"                 json:"extensions,omitempty"`
	Size                    int        `gocti:"size"                       json:"size,omitempty"`
	Name                    string     `gocti:"name"                       json:"name,omitempty"`
	NameEnc                 string     `gocti:"name_enc"                   json:"name_enc,omitempty"`
	MagicNumberHex          string     `gocti:"magic_number_hex"           json:"magic_number_hex,omitempty"`
	MimeType                string     `gocti:"mime_type"                  json:"mime_type,omitempty"`
	Ctime                   *time.Time `gocti:"ctime"                      json:"ctime,omitempty"`
	Mtime                   *time.Time `gocti:"mtime"                      json:"mtime,omitempty"`
	Atime                   *time.Time `gocti:"atime"                      json:"atime,omitempty"`
	XOpenctiAdditionalNames []string   `gocti:"x_opencti_additional_names" json:"x_opencti_additional_names,omitempty"`
	ObsContent              Artifact   `gocti:"obsContent"                 json:"obsContent,omitempty"`
}

func (s StixFile) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixFile StixFile

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixFile)(&s))
}

// StixFileAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixFileAddInput struct {
	// StixFileAddInput
	Hashes                  []HashInput `gocti:"hashes"                     json:"hashes,omitempty"`
	Size                    int         `gocti:"size"                       json:"size,omitempty"`
	Name                    string      `gocti:"name"                       json:"name,omitempty"`
	NameEnc                 string      `gocti:"name_enc"                   json:"name_enc,omitempty"`
	MagicNumberHex          string      `gocti:"magic_number_hex"           json:"magic_number_hex,omitempty"`
	MimeType                string      `gocti:"mime_type"                  json:"mime_type,omitempty"`
	Ctime                   *time.Time  `gocti:"ctime"                      json:"ctime,omitempty"`
	Mtime                   *time.Time  `gocti:"mtime"                      json:"mtime,omitempty"`
	Atime                   *time.Time  `gocti:"atime"                      json:"atime,omitempty"`
	XOpenctiAdditionalNames []string    `gocti:"x_opencti_additional_names" json:"x_opencti_additional_names,omitempty"`
	ObsContent              string      `gocti:"obsContent"                 json:"obsContent,omitempty"`
	File                    []byte      `gocti:"file"                       json:"file,omitempty"`
}

func (s StixFileAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixFileAddInput StixFileAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixFileAddInput)(&s))
}

// StixFileConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixFileConnection struct {
	// StixFileConnection
	PageInfo PageInfo       `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []StixFileEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (s StixFileConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixFileConnection StixFileConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixFileConnection)(&s))
}

// StixFileEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixFileEdge struct {
	// StixFileEdge
	Cursor string   `gocti:"cursor" json:"cursor,omitempty"`
	Node   StixFile `gocti:"node"   json:"node,omitempty"`
}

func (s StixFileEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixFileEdge StixFileEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixFileEdge)(&s))
}

// StixObject represents a GraphQL INTERFACE
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [MarkingDefinition]
// - [Label]
// - [ExternalReference]
// - [KillChainPhase]
// - [AttackPattern]
// - [Campaign]
// - [Note]
// - [ObservedData]
// - [Opinion]
// - [Report]
// - [CourseOfAction]
// - [Individual]
// - [Sector]
// - [System]
// - [Infrastructure]
// - [IntrusionSet]
// - [Position]
// - [City]
// - [Country]
// - [Region]
// - [Malware]
// - [ThreatActorGroup]
// - [Tool]
// - [Vulnerability]
// - [Incident]
// - [AutonomousSystem]
// - [Directory]
// - [DomainName]
// - [EmailAddr]
// - [EmailMessage]
// - [EmailMimePartType]
// - [Artifact]
// - [StixFile]
// - [X509Certificate]
// - [IPv4Addr]
// - [IPv6Addr]
// - [MacAddr]
// - [Mutex]
// - [NetworkTraffic]
// - [Process]
// - [Software]
// - [Url]
// - [UserAccount]
// - [WindowsRegistryKey]
// - [WindowsRegistryValueType]
// - [CryptographicKey]
// - [CryptocurrencyWallet]
// - [Hostname]
// - [Text]
// - [UserAgent]
// - [BankAccount]
// - [TrackingNumber]
// - [Credential]
// - [PhoneNumber]
// - [PaymentCard]
// - [MediaContent]
// - [Persona]
// - [Channel]
// - [Language]
// - [Event]
// - [Grouping]
// - [Narrative]
// - [DataComponent]
// - [DataSource]
// - [Vocabulary]
// - [AdministrativeArea]
// - [Task]
// - [CaseIncident]
// - [CaseRfi]
// - [CaseRft]
// - [Feedback]
// - [MalwareAnalysis]
// - [ThreatActorIndividual]
// - [Indicator]
// - [Organization]
// - [SecurityPlatform]
//
// (See the examples for ways to decode an interface field into an implementation).
type StixObject struct {
	// StixObject
	ID           string       `gocti:"id"           json:"id,omitempty"`
	StandardID   string       `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType   string       `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes  []string     `gocti:"parent_types" json:"parent_types,omitempty"`
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (s StixObject) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[MarkingDefinition](),
		reflect.TypeFor[Label](),
		reflect.TypeFor[ExternalReference](),
		reflect.TypeFor[KillChainPhase](),
		reflect.TypeFor[AttackPattern](),
		reflect.TypeFor[Campaign](),
		reflect.TypeFor[Note](),
		reflect.TypeFor[ObservedData](),
		reflect.TypeFor[Opinion](),
		reflect.TypeFor[Report](),
		reflect.TypeFor[CourseOfAction](),
		reflect.TypeFor[Individual](),
		reflect.TypeFor[Sector](),
		reflect.TypeFor[System](),
		reflect.TypeFor[Infrastructure](),
		reflect.TypeFor[IntrusionSet](),
		reflect.TypeFor[Position](),
		reflect.TypeFor[City](),
		reflect.TypeFor[Country](),
		reflect.TypeFor[Region](),
		reflect.TypeFor[Malware](),
		reflect.TypeFor[ThreatActorGroup](),
		reflect.TypeFor[Tool](),
		reflect.TypeFor[Vulnerability](),
		reflect.TypeFor[Incident](),
		reflect.TypeFor[AutonomousSystem](),
		reflect.TypeFor[Directory](),
		reflect.TypeFor[DomainName](),
		reflect.TypeFor[EmailAddr](),
		reflect.TypeFor[EmailMessage](),
		reflect.TypeFor[EmailMimePartType](),
		reflect.TypeFor[Artifact](),
		reflect.TypeFor[StixFile](),
		reflect.TypeFor[X509Certificate](),
		reflect.TypeFor[IPv4Addr](),
		reflect.TypeFor[IPv6Addr](),
		reflect.TypeFor[MacAddr](),
		reflect.TypeFor[Mutex](),
		reflect.TypeFor[NetworkTraffic](),
		reflect.TypeFor[Process](),
		reflect.TypeFor[Software](),
		reflect.TypeFor[URL](),
		reflect.TypeFor[UserAccount](),
		reflect.TypeFor[WindowsRegistryKey](),
		reflect.TypeFor[WindowsRegistryValueType](),
		reflect.TypeFor[CryptographicKey](),
		reflect.TypeFor[CryptocurrencyWallet](),
		reflect.TypeFor[Hostname](),
		reflect.TypeFor[Text](),
		reflect.TypeFor[UserAgent](),
		reflect.TypeFor[BankAccount](),
		reflect.TypeFor[TrackingNumber](),
		reflect.TypeFor[Credential](),
		reflect.TypeFor[PhoneNumber](),
		reflect.TypeFor[PaymentCard](),
		reflect.TypeFor[MediaContent](),
		reflect.TypeFor[Persona](),
		reflect.TypeFor[Channel](),
		reflect.TypeFor[Language](),
		reflect.TypeFor[Event](),
		reflect.TypeFor[Grouping](),
		reflect.TypeFor[Narrative](),
		reflect.TypeFor[DataComponent](),
		reflect.TypeFor[DataSource](),
		reflect.TypeFor[Vocabulary](),
		reflect.TypeFor[AdministrativeArea](),
		reflect.TypeFor[Task](),
		reflect.TypeFor[CaseIncident](),
		reflect.TypeFor[CaseRfi](),
		reflect.TypeFor[CaseRft](),
		reflect.TypeFor[Feedback](),
		reflect.TypeFor[MalwareAnalysis](),
		reflect.TypeFor[ThreatActorIndividual](),
		reflect.TypeFor[Indicator](),
		reflect.TypeFor[Organization](),
		reflect.TypeFor[SecurityPlatform](),
	}
}

func (s StixObject) Remainder() map[string]any {
	return s.Remain
}

func (s StixObject) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixObject StixObject

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixObject)(&s))
}

// StixObjectOrStixRelationship represents a GraphQL UNION
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [MarkingDefinition]
// - [Label]
// - [KillChainPhase]
// - [ExternalReference]
// - [AttackPattern]
// - [Campaign]
// - [Channel]
// - [Event]
// - [Narrative]
// - [Note]
// - [ObservedData]
// - [Opinion]
// - [Report]
// - [Grouping]
// - [CourseOfAction]
// - [Individual]
// - [Organization]
// - [SecurityPlatform]
// - [Sector]
// - [System]
// - [Indicator]
// - [Infrastructure]
// - [IntrusionSet]
// - [Language]
// - [City]
// - [AdministrativeArea]
// - [Country]
// - [Region]
// - [Position]
// - [Malware]
// - [MalwareAnalysis]
// - [ThreatActorGroup]
// - [ThreatActorIndividual]
// - [Tool]
// - [Vulnerability]
// - [Incident]
// - [AutonomousSystem]
// - [Directory]
// - [DomainName]
// - [EmailAddr]
// - [EmailMessage]
// - [EmailMimePartType]
// - [Artifact]
// - [StixFile]
// - [X509Certificate]
// - [IPv4Addr]
// - [IPv6Addr]
// - [MacAddr]
// - [Mutex]
// - [NetworkTraffic]
// - [Process]
// - [Software]
// - [Url]
// - [UserAccount]
// - [WindowsRegistryKey]
// - [WindowsRegistryValueType]
// - [CryptographicKey]
// - [CryptocurrencyWallet]
// - [Hostname]
// - [Text]
// - [UserAgent]
// - [BankAccount]
// - [Credential]
// - [TrackingNumber]
// - [PhoneNumber]
// - [PaymentCard]
// - [MediaContent]
// - [Persona]
// - [StixCoreRelationship]
// - [StixSightingRelationship]
// - [StixRefRelationship]
// - [DataComponent]
// - [DataSource]
// - [CaseIncident]
// - [CaseRfi]
// - [CaseRft]
// - [Feedback]
// - [CaseTemplate]
// - [Task]
// - [EntitySetting]
// - [ManagerConfiguration]
// - [Workspace]
// - [CsvMapper]
// - [PublicDashboard]
// - [Pir]
//
// (See the examples for ways to decode an interface field into an implementation).
type StixObjectOrStixRelationship struct {
	// StixObjectOrStixRelationship

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (s StixObjectOrStixRelationship) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[MarkingDefinition](),
		reflect.TypeFor[Label](),
		reflect.TypeFor[KillChainPhase](),
		reflect.TypeFor[ExternalReference](),
		reflect.TypeFor[AttackPattern](),
		reflect.TypeFor[Campaign](),
		reflect.TypeFor[Channel](),
		reflect.TypeFor[Event](),
		reflect.TypeFor[Narrative](),
		reflect.TypeFor[Note](),
		reflect.TypeFor[ObservedData](),
		reflect.TypeFor[Opinion](),
		reflect.TypeFor[Report](),
		reflect.TypeFor[Grouping](),
		reflect.TypeFor[CourseOfAction](),
		reflect.TypeFor[Individual](),
		reflect.TypeFor[Organization](),
		reflect.TypeFor[SecurityPlatform](),
		reflect.TypeFor[Sector](),
		reflect.TypeFor[System](),
		reflect.TypeFor[Indicator](),
		reflect.TypeFor[Infrastructure](),
		reflect.TypeFor[IntrusionSet](),
		reflect.TypeFor[Language](),
		reflect.TypeFor[City](),
		reflect.TypeFor[AdministrativeArea](),
		reflect.TypeFor[Country](),
		reflect.TypeFor[Region](),
		reflect.TypeFor[Position](),
		reflect.TypeFor[Malware](),
		reflect.TypeFor[MalwareAnalysis](),
		reflect.TypeFor[ThreatActorGroup](),
		reflect.TypeFor[ThreatActorIndividual](),
		reflect.TypeFor[Tool](),
		reflect.TypeFor[Vulnerability](),
		reflect.TypeFor[Incident](),
		reflect.TypeFor[AutonomousSystem](),
		reflect.TypeFor[Directory](),
		reflect.TypeFor[DomainName](),
		reflect.TypeFor[EmailAddr](),
		reflect.TypeFor[EmailMessage](),
		reflect.TypeFor[EmailMimePartType](),
		reflect.TypeFor[Artifact](),
		reflect.TypeFor[StixFile](),
		reflect.TypeFor[X509Certificate](),
		reflect.TypeFor[IPv4Addr](),
		reflect.TypeFor[IPv6Addr](),
		reflect.TypeFor[MacAddr](),
		reflect.TypeFor[Mutex](),
		reflect.TypeFor[NetworkTraffic](),
		reflect.TypeFor[Process](),
		reflect.TypeFor[Software](),
		reflect.TypeFor[URL](),
		reflect.TypeFor[UserAccount](),
		reflect.TypeFor[WindowsRegistryKey](),
		reflect.TypeFor[WindowsRegistryValueType](),
		reflect.TypeFor[CryptographicKey](),
		reflect.TypeFor[CryptocurrencyWallet](),
		reflect.TypeFor[Hostname](),
		reflect.TypeFor[Text](),
		reflect.TypeFor[UserAgent](),
		reflect.TypeFor[BankAccount](),
		reflect.TypeFor[Credential](),
		reflect.TypeFor[TrackingNumber](),
		reflect.TypeFor[PhoneNumber](),
		reflect.TypeFor[PaymentCard](),
		reflect.TypeFor[MediaContent](),
		reflect.TypeFor[Persona](),
		reflect.TypeFor[StixCoreRelationship](),
		reflect.TypeFor[StixSightingRelationship](),
		reflect.TypeFor[StixRefRelationship](),
		reflect.TypeFor[DataComponent](),
		reflect.TypeFor[DataSource](),
		reflect.TypeFor[CaseIncident](),
		reflect.TypeFor[CaseRfi](),
		reflect.TypeFor[CaseRft](),
		reflect.TypeFor[Feedback](),
		reflect.TypeFor[CaseTemplate](),
		reflect.TypeFor[Task](),
		reflect.TypeFor[EntitySetting](),
		reflect.TypeFor[ManagerConfiguration](),
		reflect.TypeFor[Workspace](),
		reflect.TypeFor[CsvMapper](),
		reflect.TypeFor[PublicDashboard](),
		reflect.TypeFor[Pir](),
	}
}

func (s StixObjectOrStixRelationship) Remainder() map[string]any {
	return s.Remain
}

func (s StixObjectOrStixRelationship) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixObjectOrStixRelationship StixObjectOrStixRelationship

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixObjectOrStixRelationship)(&s))
}

// StixObjectOrStixRelationshipConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixObjectOrStixRelationshipConnection struct {
	// StixObjectOrStixRelationshipConnection
	PageInfo PageInfo                           `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []StixObjectOrStixRelationshipEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (s StixObjectOrStixRelationshipConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixObjectOrStixRelationshipConnection StixObjectOrStixRelationshipConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixObjectOrStixRelationshipConnection)(&s))
}

// StixObjectOrStixRelationshipEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixObjectOrStixRelationshipEdge struct {
	// StixObjectOrStixRelationshipEdge
	Cursor string                       `gocti:"cursor" json:"cursor,omitempty"`
	Node   StixObjectOrStixRelationship `gocti:"node"   json:"node,omitempty"`
}

func (s StixObjectOrStixRelationshipEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixObjectOrStixRelationshipEdge StixObjectOrStixRelationshipEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixObjectOrStixRelationshipEdge)(&s))
}

// StixObjectOrStixRelationshipOrCreator represents a GraphQL UNION
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [MarkingDefinition]
// - [Label]
// - [KillChainPhase]
// - [ExternalReference]
// - [AttackPattern]
// - [Campaign]
// - [Channel]
// - [Event]
// - [Narrative]
// - [Note]
// - [ObservedData]
// - [Opinion]
// - [Report]
// - [Grouping]
// - [CourseOfAction]
// - [Individual]
// - [Organization]
// - [SecurityPlatform]
// - [Sector]
// - [System]
// - [Indicator]
// - [Infrastructure]
// - [IntrusionSet]
// - [Language]
// - [City]
// - [AdministrativeArea]
// - [Country]
// - [Region]
// - [Position]
// - [Malware]
// - [MalwareAnalysis]
// - [ThreatActorGroup]
// - [ThreatActorIndividual]
// - [Tool]
// - [Vulnerability]
// - [Incident]
// - [AutonomousSystem]
// - [Directory]
// - [DomainName]
// - [EmailAddr]
// - [EmailMessage]
// - [EmailMimePartType]
// - [Artifact]
// - [StixFile]
// - [X509Certificate]
// - [IPv4Addr]
// - [IPv6Addr]
// - [MacAddr]
// - [Mutex]
// - [NetworkTraffic]
// - [Process]
// - [Software]
// - [Url]
// - [UserAccount]
// - [WindowsRegistryKey]
// - [WindowsRegistryValueType]
// - [CryptographicKey]
// - [CryptocurrencyWallet]
// - [Hostname]
// - [Text]
// - [UserAgent]
// - [BankAccount]
// - [Credential]
// - [TrackingNumber]
// - [PhoneNumber]
// - [PaymentCard]
// - [MediaContent]
// - [Persona]
// - [StixCoreRelationship]
// - [StixSightingRelationship]
// - [StixRefRelationship]
// - [Task]
// - [DataComponent]
// - [DataSource]
// - [CaseIncident]
// - [CaseRfi]
// - [CaseRft]
// - [Feedback]
// - [CaseTemplate]
// - [EntitySetting]
// - [ManagerConfiguration]
// - [Creator]
// - [Group]
// - [Workspace]
// - [CsvMapper]
// - [Status]
// - [PublicDashboard]
// - [Pir]
//
// (See the examples for ways to decode an interface field into an implementation).
type StixObjectOrStixRelationshipOrCreator struct {
	// StixObjectOrStixRelationshipOrCreator

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (s StixObjectOrStixRelationshipOrCreator) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[MarkingDefinition](),
		reflect.TypeFor[Label](),
		reflect.TypeFor[KillChainPhase](),
		reflect.TypeFor[ExternalReference](),
		reflect.TypeFor[AttackPattern](),
		reflect.TypeFor[Campaign](),
		reflect.TypeFor[Channel](),
		reflect.TypeFor[Event](),
		reflect.TypeFor[Narrative](),
		reflect.TypeFor[Note](),
		reflect.TypeFor[ObservedData](),
		reflect.TypeFor[Opinion](),
		reflect.TypeFor[Report](),
		reflect.TypeFor[Grouping](),
		reflect.TypeFor[CourseOfAction](),
		reflect.TypeFor[Individual](),
		reflect.TypeFor[Organization](),
		reflect.TypeFor[SecurityPlatform](),
		reflect.TypeFor[Sector](),
		reflect.TypeFor[System](),
		reflect.TypeFor[Indicator](),
		reflect.TypeFor[Infrastructure](),
		reflect.TypeFor[IntrusionSet](),
		reflect.TypeFor[Language](),
		reflect.TypeFor[City](),
		reflect.TypeFor[AdministrativeArea](),
		reflect.TypeFor[Country](),
		reflect.TypeFor[Region](),
		reflect.TypeFor[Position](),
		reflect.TypeFor[Malware](),
		reflect.TypeFor[MalwareAnalysis](),
		reflect.TypeFor[ThreatActorGroup](),
		reflect.TypeFor[ThreatActorIndividual](),
		reflect.TypeFor[Tool](),
		reflect.TypeFor[Vulnerability](),
		reflect.TypeFor[Incident](),
		reflect.TypeFor[AutonomousSystem](),
		reflect.TypeFor[Directory](),
		reflect.TypeFor[DomainName](),
		reflect.TypeFor[EmailAddr](),
		reflect.TypeFor[EmailMessage](),
		reflect.TypeFor[EmailMimePartType](),
		reflect.TypeFor[Artifact](),
		reflect.TypeFor[StixFile](),
		reflect.TypeFor[X509Certificate](),
		reflect.TypeFor[IPv4Addr](),
		reflect.TypeFor[IPv6Addr](),
		reflect.TypeFor[MacAddr](),
		reflect.TypeFor[Mutex](),
		reflect.TypeFor[NetworkTraffic](),
		reflect.TypeFor[Process](),
		reflect.TypeFor[Software](),
		reflect.TypeFor[URL](),
		reflect.TypeFor[UserAccount](),
		reflect.TypeFor[WindowsRegistryKey](),
		reflect.TypeFor[WindowsRegistryValueType](),
		reflect.TypeFor[CryptographicKey](),
		reflect.TypeFor[CryptocurrencyWallet](),
		reflect.TypeFor[Hostname](),
		reflect.TypeFor[Text](),
		reflect.TypeFor[UserAgent](),
		reflect.TypeFor[BankAccount](),
		reflect.TypeFor[Credential](),
		reflect.TypeFor[TrackingNumber](),
		reflect.TypeFor[PhoneNumber](),
		reflect.TypeFor[PaymentCard](),
		reflect.TypeFor[MediaContent](),
		reflect.TypeFor[Persona](),
		reflect.TypeFor[StixCoreRelationship](),
		reflect.TypeFor[StixSightingRelationship](),
		reflect.TypeFor[StixRefRelationship](),
		reflect.TypeFor[Task](),
		reflect.TypeFor[DataComponent](),
		reflect.TypeFor[DataSource](),
		reflect.TypeFor[CaseIncident](),
		reflect.TypeFor[CaseRfi](),
		reflect.TypeFor[CaseRft](),
		reflect.TypeFor[Feedback](),
		reflect.TypeFor[CaseTemplate](),
		reflect.TypeFor[EntitySetting](),
		reflect.TypeFor[ManagerConfiguration](),
		reflect.TypeFor[Creator](),
		reflect.TypeFor[Group](),
		reflect.TypeFor[Workspace](),
		reflect.TypeFor[CsvMapper](),
		reflect.TypeFor[Status](),
		reflect.TypeFor[PublicDashboard](),
		reflect.TypeFor[Pir](),
	}
}

func (s StixObjectOrStixRelationshipOrCreator) Remainder() map[string]any {
	return s.Remain
}

func (s StixObjectOrStixRelationshipOrCreator) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixObjectOrStixRelationshipOrCreator StixObjectOrStixRelationshipOrCreator

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixObjectOrStixRelationshipOrCreator)(&s))
}

// StixObjectOrStixRelationshipRefConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixObjectOrStixRelationshipRefConnection struct {
	// StixObjectOrStixRelationshipRefConnection
	PageInfo PageInfo                              `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []StixObjectOrStixRelationshipRefEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (s StixObjectOrStixRelationshipRefConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixObjectOrStixRelationshipRefConnection StixObjectOrStixRelationshipRefConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixObjectOrStixRelationshipRefConnection)(&s))
}

// StixObjectOrStixRelationshipRefEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixObjectOrStixRelationshipRefEdge struct {
	// StixObjectOrStixRelationshipRefEdge
	Cursor string                       `gocti:"cursor" json:"cursor,omitempty"`
	Types  []string                     `gocti:"types"  json:"types,omitempty"`
	Node   StixObjectOrStixRelationship `gocti:"node"   json:"node,omitempty"`
}

func (s StixObjectOrStixRelationshipRefEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixObjectOrStixRelationshipRefEdge StixObjectOrStixRelationshipRefEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixObjectOrStixRelationshipRefEdge)(&s))
}

// StixRefRelationship represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixRefRelationship struct {
	// BasicRelationship
	ID          string     `gocti:"id"           json:"id,omitempty"`
	StandardID  string     `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string     `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string   `gocti:"parent_types" json:"parent_types,omitempty"`
	CreatedAt   *time.Time `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt   *time.Time `gocti:"updated_at"   json:"updated_at,omitempty"`
	Creators    []Creator  `gocti:"creators"     json:"creators,omitempty"`

	// StixRelationship
	From             StixObjectOrStixRelationshipOrCreator `gocti:"from"              json:"from,omitempty"`
	To               StixObjectOrStixRelationshipOrCreator `gocti:"to"                json:"to,omitempty"`
	SpecVersion      string                                `gocti:"spec_version"      json:"spec_version,omitempty"`
	Created          *time.Time                            `gocti:"created"           json:"created,omitempty"`
	Modified         *time.Time                            `gocti:"modified"          json:"modified,omitempty"`
	Confidence       int                                   `gocti:"confidence"        json:"confidence,omitempty"`
	RelationshipType string                                `gocti:"relationship_type" json:"relationship_type,omitempty"`
	CreatedBy        Identity                              `gocti:"createdBy"         json:"createdBy,omitempty"`
	ObjectMarking    []MarkingDefinition                   `gocti:"objectMarking"     json:"objectMarking,omitempty"`
	DraftVersion     DraftVersion                          `gocti:"draftVersion"      json:"draftVersion,omitempty"`

	// StixRefRelationship
	StartTime        *time.Time          `gocti:"start_time"       json:"start_time,omitempty"`
	StopTime         *time.Time          `gocti:"stop_time"        json:"stop_time,omitempty"`
	Datable          bool                `gocti:"datable"          json:"datable,omitempty"`
	ContainersNumber Number              `gocti:"containersNumber" json:"containersNumber,omitempty"`
	Containers       ContainerConnection `gocti:"containers"       json:"containers,omitempty"`
	Notes            NoteConnection      `gocti:"notes"            json:"notes,omitempty"`
	Reports          ReportConnection    `gocti:"reports"          json:"reports,omitempty"`
	Opinions         OpinionConnection   `gocti:"opinions"         json:"opinions,omitempty"`
	Groupings        GroupingConnection  `gocti:"groupings"        json:"groupings,omitempty"`
	Cases            CaseConnection      `gocti:"cases"            json:"cases,omitempty"`
	PirExplanations  []PirExplanation    `gocti:"pir_explanations" json:"pir_explanations,omitempty"`
	PirScore         int                 `gocti:"pir_score"        json:"pir_score,omitempty"`
	EditContext      []EditUserContext   `gocti:"editContext"      json:"editContext,omitempty"`
}

func (s StixRefRelationship) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixRefRelationship StixRefRelationship

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixRefRelationship)(&s))
}

// StixSightingRelationship represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type StixSightingRelationship struct {
	// BasicRelationship
	ID          string     `gocti:"id"           json:"id,omitempty"`
	StandardID  string     `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string     `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string   `gocti:"parent_types" json:"parent_types,omitempty"`
	CreatedAt   *time.Time `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt   *time.Time `gocti:"updated_at"   json:"updated_at,omitempty"`
	Creators    []Creator  `gocti:"creators"     json:"creators,omitempty"`

	// StixRelationship
	From             StixObjectOrStixRelationshipOrCreator `gocti:"from"              json:"from,omitempty"`
	To               StixObjectOrStixRelationshipOrCreator `gocti:"to"                json:"to,omitempty"`
	SpecVersion      string                                `gocti:"spec_version"      json:"spec_version,omitempty"`
	Created          *time.Time                            `gocti:"created"           json:"created,omitempty"`
	Modified         *time.Time                            `gocti:"modified"          json:"modified,omitempty"`
	Confidence       int                                   `gocti:"confidence"        json:"confidence,omitempty"`
	RelationshipType string                                `gocti:"relationship_type" json:"relationship_type,omitempty"`
	CreatedBy        Identity                              `gocti:"createdBy"         json:"createdBy,omitempty"`
	ObjectMarking    []MarkingDefinition                   `gocti:"objectMarking"     json:"objectMarking,omitempty"`
	DraftVersion     DraftVersion                          `gocti:"draftVersion"      json:"draftVersion,omitempty"`

	// StixSightingRelationship
	FromID             string                      `gocti:"fromId"             json:"fromId,omitempty"`
	FromType           string                      `gocti:"fromType"           json:"fromType,omitempty"`
	ToID               string                      `gocti:"toId"               json:"toId,omitempty"`
	ToType             string                      `gocti:"toType"             json:"toType,omitempty"`
	Description        string                      `gocti:"description"        json:"description,omitempty"`
	FirstSeen          *time.Time                  `gocti:"first_seen"         json:"first_seen,omitempty"`
	LastSeen           *time.Time                  `gocti:"last_seen"          json:"last_seen,omitempty"`
	AttributeCount     int                         `gocti:"attribute_count"    json:"attribute_count,omitempty"`
	XOpenctiNegative   bool                        `gocti:"x_opencti_negative" json:"x_opencti_negative,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ContainersNumber   Number                      `gocti:"containersNumber"   json:"containersNumber,omitempty"`
	Containers         ContainerConnection         `gocti:"containers"         json:"containers,omitempty"`
	Reports            ReportConnection            `gocti:"reports"            json:"reports,omitempty"`
	Notes              NoteConnection              `gocti:"notes"              json:"notes,omitempty"`
	Opinions           OpinionConnection           `gocti:"opinions"           json:"opinions,omitempty"`
	Groupings          GroupingConnection          `gocti:"groupings"          json:"groupings,omitempty"`
	Cases              CaseConnection              `gocti:"cases"              json:"cases,omitempty"`
	EditContext        []EditUserContext           `gocti:"editContext"        json:"editContext,omitempty"`
	Status             Status                      `gocti:"status"             json:"status,omitempty"`
	WorkflowEnabled    bool                        `gocti:"workflowEnabled"    json:"workflowEnabled,omitempty"`
}

func (s StixSightingRelationship) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempStixSightingRelationship StixSightingRelationship

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempStixSightingRelationship)(&s))
}

// SubType represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type SubType struct {
	// SubType
	ID                    string        `gocti:"id"                    json:"id,omitempty"`
	Label                 string        `gocti:"label"                 json:"label,omitempty"`
	Statuses              []Status      `gocti:"statuses"              json:"statuses,omitempty"`
	StatusesRequestAccess []Status      `gocti:"statusesRequestAccess" json:"statusesRequestAccess,omitempty"`
	WorkflowEnabled       bool          `gocti:"workflowEnabled"       json:"workflowEnabled,omitempty"`
	Settings              EntitySetting `gocti:"settings"              json:"settings,omitempty"`
}

func (s SubType) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSubType SubType

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSubType)(&s))
}

// System represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type System struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Identity
	IdentityClass       string   `gocti:"identity_class"        json:"identity_class,omitempty"`
	Name                string   `gocti:"name"                  json:"name,omitempty"`
	Description         string   `gocti:"description"           json:"description,omitempty"`
	Roles               []string `gocti:"roles"                 json:"roles,omitempty"`
	ContactInformation  string   `gocti:"contact_information"   json:"contact_information,omitempty"`
	XOpenctiAliases     []string `gocti:"x_opencti_aliases"     json:"x_opencti_aliases,omitempty"`
	XOpenctiReliability string   `gocti:"x_opencti_reliability" json:"x_opencti_reliability,omitempty"`

	// System
	XOpenctiFirstname string                 `gocti:"x_opencti_firstname" json:"x_opencti_firstname,omitempty"`
	XOpenctiLastname  string                 `gocti:"x_opencti_lastname"  json:"x_opencti_lastname,omitempty"`
	Organizations     OrganizationConnection `gocti:"organizations"       json:"organizations,omitempty"`
}

func (s System) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(s).IsZero() {
		return []byte("null"), nil
	}

	type tempSystem System

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempSystem)(&s))
}

// Task represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Task struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Container
	AuthorizedMembersActivationDate *time.Time                                `gocti:"authorized_members_activation_date" json:"authorized_members_activation_date,omitempty"`
	Objects                         StixObjectOrStixRelationshipRefConnection `gocti:"objects"                            json:"objects,omitempty"`
	FilesFromTemplate               FileConnection                            `gocti:"filesFromTemplate"                  json:"filesFromTemplate,omitempty"`
	FintelTemplates                 []FintelTemplate                          `gocti:"fintelTemplates"                    json:"fintelTemplates,omitempty"`

	// Task
	Name           string     `gocti:"name"            json:"name,omitempty"`
	Description    string     `gocti:"description"     json:"description,omitempty"`
	DueDate        *time.Time `gocti:"due_date"        json:"due_date,omitempty"`
	ContentMapping string     `gocti:"content_mapping" json:"content_mapping,omitempty"`
}

func (t Task) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTask Task

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTask)(&t))
}

// TaskConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type TaskConnection struct {
	// TaskConnection
	PageInfo PageInfo   `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []TaskEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (t TaskConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTaskConnection TaskConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTaskConnection)(&t))
}

// TaskEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type TaskEdge struct {
	// TaskEdge
	Cursor string `gocti:"cursor" json:"cursor,omitempty"`
	Node   Task   `gocti:"node"   json:"node,omitempty"`
}

func (t TaskEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTaskEdge TaskEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTaskEdge)(&t))
}

// TaskTemplate represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type TaskTemplate struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// TaskTemplate
	Created     *time.Time `gocti:"created"     json:"created,omitempty"`
	Modified    *time.Time `gocti:"modified"    json:"modified,omitempty"`
	Name        string     `gocti:"name"        json:"name,omitempty"`
	Description string     `gocti:"description" json:"description,omitempty"`
}

func (t TaskTemplate) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTaskTemplate TaskTemplate

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTaskTemplate)(&t))
}

// TaskTemplateConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type TaskTemplateConnection struct {
	// TaskTemplateConnection
	PageInfo PageInfo           `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []TaskTemplateEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (t TaskTemplateConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTaskTemplateConnection TaskTemplateConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTaskTemplateConnection)(&t))
}

// TaskTemplateEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type TaskTemplateEdge struct {
	// TaskTemplateEdge
	Cursor string       `gocti:"cursor" json:"cursor,omitempty"`
	Node   TaskTemplate `gocti:"node"   json:"node,omitempty"`
}

func (t TaskTemplateEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTaskTemplateEdge TaskTemplateEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTaskTemplateEdge)(&t))
}

// Text represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Text struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// Text
	Value string `gocti:"value" json:"value,omitempty"`
}

func (t Text) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempText Text

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempText)(&t))
}

// TextAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type TextAddInput struct {
	// TextAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (t TextAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTextAddInput TextAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTextAddInput)(&t))
}

// ThreatActor represents a GraphQL INTERFACE
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type)
//
// Available implementations are:
// - [ThreatActorGroup]
// - [ThreatActorIndividual]
//
// (See the examples for ways to decode an interface field into an implementation).
type ThreatActor struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// ThreatActor
	Name                 string             `gocti:"name"                  json:"name,omitempty"`
	Description          string             `gocti:"description"           json:"description,omitempty"`
	Aliases              []string           `gocti:"aliases"               json:"aliases,omitempty"`
	ThreatActorTypes     []string           `gocti:"threat_actor_types"    json:"threat_actor_types,omitempty"`
	FirstSeen            *time.Time         `gocti:"first_seen"            json:"first_seen,omitempty"`
	LastSeen             *time.Time         `gocti:"last_seen"             json:"last_seen,omitempty"`
	Roles                []string           `gocti:"roles"                 json:"roles,omitempty"`
	Goals                []string           `gocti:"goals"                 json:"goals,omitempty"`
	Sophistication       string             `gocti:"sophistication"        json:"sophistication,omitempty"`
	ResourceLevel        string             `gocti:"resource_level"        json:"resource_level,omitempty"`
	PrimaryMotivation    string             `gocti:"primary_motivation"    json:"primary_motivation,omitempty"`
	SecondaryMotivations []string           `gocti:"secondary_motivations" json:"secondary_motivations,omitempty"`
	PersonalMotivations  []string           `gocti:"personal_motivations"  json:"personal_motivations,omitempty"`
	Locations            LocationConnection `gocti:"locations"             json:"locations,omitempty"`
	Countries            CountryConnection  `gocti:"countries"             json:"countries,omitempty"`

	// For storing interface implementations' data
	Remain map[string]any `gocti:",remain"`
}

func (t ThreatActor) Implementations() []reflect.Type {
	return []reflect.Type{
		reflect.TypeFor[ThreatActorGroup](),
		reflect.TypeFor[ThreatActorIndividual](),
	}
}

func (t ThreatActor) Remainder() map[string]any {
	return t.Remain
}

func (t ThreatActor) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempThreatActor ThreatActor

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempThreatActor)(&t))
}

// ThreatActorGroup represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ThreatActorGroup struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// ThreatActor
	Name                 string             `gocti:"name"                  json:"name,omitempty"`
	Description          string             `gocti:"description"           json:"description,omitempty"`
	Aliases              []string           `gocti:"aliases"               json:"aliases,omitempty"`
	ThreatActorTypes     []string           `gocti:"threat_actor_types"    json:"threat_actor_types,omitempty"`
	FirstSeen            *time.Time         `gocti:"first_seen"            json:"first_seen,omitempty"`
	LastSeen             *time.Time         `gocti:"last_seen"             json:"last_seen,omitempty"`
	Roles                []string           `gocti:"roles"                 json:"roles,omitempty"`
	Goals                []string           `gocti:"goals"                 json:"goals,omitempty"`
	Sophistication       string             `gocti:"sophistication"        json:"sophistication,omitempty"`
	ResourceLevel        string             `gocti:"resource_level"        json:"resource_level,omitempty"`
	PrimaryMotivation    string             `gocti:"primary_motivation"    json:"primary_motivation,omitempty"`
	SecondaryMotivations []string           `gocti:"secondary_motivations" json:"secondary_motivations,omitempty"`
	PersonalMotivations  []string           `gocti:"personal_motivations"  json:"personal_motivations,omitempty"`
	Locations            LocationConnection `gocti:"locations"             json:"locations,omitempty"`
	Countries            CountryConnection  `gocti:"countries"             json:"countries,omitempty"`

	// ThreatActorGroup
}

func (t ThreatActorGroup) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempThreatActorGroup ThreatActorGroup

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempThreatActorGroup)(&t))
}

// ThreatActorIndividual represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type ThreatActorIndividual struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// ThreatActor
	Name                 string             `gocti:"name"                  json:"name,omitempty"`
	Description          string             `gocti:"description"           json:"description,omitempty"`
	Aliases              []string           `gocti:"aliases"               json:"aliases,omitempty"`
	ThreatActorTypes     []string           `gocti:"threat_actor_types"    json:"threat_actor_types,omitempty"`
	FirstSeen            *time.Time         `gocti:"first_seen"            json:"first_seen,omitempty"`
	LastSeen             *time.Time         `gocti:"last_seen"             json:"last_seen,omitempty"`
	Roles                []string           `gocti:"roles"                 json:"roles,omitempty"`
	Goals                []string           `gocti:"goals"                 json:"goals,omitempty"`
	Sophistication       string             `gocti:"sophistication"        json:"sophistication,omitempty"`
	ResourceLevel        string             `gocti:"resource_level"        json:"resource_level,omitempty"`
	PrimaryMotivation    string             `gocti:"primary_motivation"    json:"primary_motivation,omitempty"`
	SecondaryMotivations []string           `gocti:"secondary_motivations" json:"secondary_motivations,omitempty"`
	PersonalMotivations  []string           `gocti:"personal_motivations"  json:"personal_motivations,omitempty"`
	Locations            LocationConnection `gocti:"locations"             json:"locations,omitempty"`
	Countries            CountryConnection  `gocti:"countries"             json:"countries,omitempty"`

	// ThreatActorIndividual
	DateOfBirth   *time.Time `gocti:"date_of_birth"  json:"date_of_birth,omitempty"`
	Gender        string     `gocti:"gender"         json:"gender,omitempty"`
	JobTitle      string     `gocti:"job_title"      json:"job_title,omitempty"`
	MaritalStatus string     `gocti:"marital_status" json:"marital_status,omitempty"`
	EyeColor      string     `gocti:"eye_color"      json:"eye_color,omitempty"`
	HairColor     string     `gocti:"hair_color"     json:"hair_color,omitempty"`
	Height        []Measure  `gocti:"height"         json:"height,omitempty"`
	Weight        []Measure  `gocti:"weight"         json:"weight,omitempty"`
	BornIn        Country    `gocti:"bornIn"         json:"bornIn,omitempty"`
	Ethnicity     Country    `gocti:"ethnicity"      json:"ethnicity,omitempty"`
}

func (t ThreatActorIndividual) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempThreatActorIndividual ThreatActorIndividual

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempThreatActorIndividual)(&t))
}

// Tool represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Tool struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Tool
	Name            string           `gocti:"name"            json:"name,omitempty"`
	Description     string           `gocti:"description"     json:"description,omitempty"`
	Aliases         []string         `gocti:"aliases"         json:"aliases,omitempty"`
	ToolTypes       []string         `gocti:"tool_types"      json:"tool_types,omitempty"`
	ToolVersion     string           `gocti:"tool_version"    json:"tool_version,omitempty"`
	KillChainPhases []KillChainPhase `gocti:"killChainPhases" json:"killChainPhases,omitempty"`
}

func (t Tool) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTool Tool

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTool)(&t))
}

// TrackingNumber represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type TrackingNumber struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// TrackingNumber
	Value string `gocti:"value" json:"value,omitempty"`
}

func (t TrackingNumber) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTrackingNumber TrackingNumber

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTrackingNumber)(&t))
}

// TrackingNumberAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type TrackingNumberAddInput struct {
	// TrackingNumberAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (t TrackingNumberAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTrackingNumberAddInput TrackingNumberAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTrackingNumberAddInput)(&t))
}

// TypeAttribute represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type TypeAttribute struct {
	// TypeAttribute
	Name          string         `gocti:"name"          json:"name,omitempty"`
	Type          string         `gocti:"type"          json:"type,omitempty"`
	Mandatory     bool           `gocti:"mandatory"     json:"mandatory,omitempty"`
	MandatoryType string         `gocti:"mandatoryType" json:"mandatoryType,omitempty"`
	EditDefault   bool           `gocti:"editDefault"   json:"editDefault,omitempty"`
	Multiple      bool           `gocti:"multiple"      json:"multiple,omitempty"`
	Label         string         `gocti:"label"         json:"label,omitempty"`
	DefaultValues []DefaultValue `gocti:"defaultValues" json:"defaultValues,omitempty"`
	Scale         string         `gocti:"scale"         json:"scale,omitempty"`
}

func (t TypeAttribute) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(t).IsZero() {
		return []byte("null"), nil
	}

	type tempTypeAttribute TypeAttribute

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempTypeAttribute)(&t))
}

type UnitSystem string

const (
	UnitSystemAuto     UnitSystem = "auto"
	UnitSystemMetric   UnitSystem = "Metric"
	UnitSystemImperial UnitSystem = "Imperial"
)

func (u UnitSystem) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempUnitSystem UnitSystem

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempUnitSystem)(&u))
}

// Url represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type URL struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// Url
	Value string `gocti:"value" json:"value,omitempty"`
}

func (u URL) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempURL URL

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempURL)(&u))
}

// UrlAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type URLAddInput struct {
	// UrlAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (u URLAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempURLAddInput URLAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempURLAddInput)(&u))
}

// User represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type User struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// User
	UserEmail                  string                   `gocti:"user_email"                  json:"user_email,omitempty"`
	ApiToken                   string                   `gocti:"api_token"                   json:"api_token,omitempty"`
	PersonalNotifiers          []Notifier               `gocti:"personal_notifiers"          json:"personal_notifiers,omitempty"`
	IndividualID               string                   `gocti:"individual_id"               json:"individual_id,omitempty"`
	Name                       string                   `gocti:"name"                        json:"name,omitempty"`
	Description                string                   `gocti:"description"                 json:"description,omitempty"`
	Firstname                  string                   `gocti:"firstname"                   json:"firstname,omitempty"`
	OtpActivated               bool                     `gocti:"otp_activated"               json:"otp_activated,omitempty"`
	OtpQr                      string                   `gocti:"otp_qr"                      json:"otp_qr,omitempty"`
	OtpMandatory               bool                     `gocti:"otp_mandatory"               json:"otp_mandatory,omitempty"`
	Lastname                   string                   `gocti:"lastname"                    json:"lastname,omitempty"`
	Theme                      string                   `gocti:"theme"                       json:"theme,omitempty"`
	Language                   string                   `gocti:"language"                    json:"language,omitempty"`
	External                   bool                     `gocti:"external"                    json:"external,omitempty"`
	Roles                      []Role                   `gocti:"roles"                       json:"roles,omitempty"`
	Capabilities               []Capability             `gocti:"capabilities"                json:"capabilities,omitempty"`
	DefaultHiddenTypes         []string                 `gocti:"default_hidden_types"        json:"default_hidden_types,omitempty"`
	UserConfidenceLevel        ConfidenceLevel          `gocti:"user_confidence_level"       json:"user_confidence_level,omitempty"`
	EffectiveConfidenceLevel   EffectiveConfidenceLevel `gocti:"effective_confidence_level"  json:"effective_confidence_level,omitempty"`
	NoCreators                 bool                     `gocti:"no_creators"                 json:"no_creators,omitempty"`
	RestrictDelete             bool                     `gocti:"restrict_delete"             json:"restrict_delete,omitempty"`
	Groups                     GroupConnection          `gocti:"groups"                      json:"groups,omitempty"`
	ObjectOrganization         OrganizationConnection   `gocti:"objectOrganization"          json:"objectOrganization,omitempty"`
	ObjectAssignedOrganization OrganizationConnection   `gocti:"objectAssignedOrganization"  json:"objectAssignedOrganization,omitempty"`
	CreatedAt                  *time.Time               `gocti:"created_at"                  json:"created_at,omitempty"`
	UpdatedAt                  *time.Time               `gocti:"updated_at"                  json:"updated_at,omitempty"`
	Sessions                   []SessionDetail          `gocti:"sessions"                    json:"sessions,omitempty"`
	DefaultTimeField           string                   `gocti:"default_time_field"          json:"default_time_field,omitempty"`
	AccountStatus              string                   `gocti:"account_status"              json:"account_status,omitempty"`
	AccountLockAfterDate       *time.Time               `gocti:"account_lock_after_date"     json:"account_lock_after_date,omitempty"`
	AdministratedOrganizations []Organization           `gocti:"administrated_organizations" json:"administrated_organizations,omitempty"`
	UnitSystem                 UnitSystem               `gocti:"unit_system"                 json:"unit_system,omitempty"`
	SubmenuShowIcons           bool                     `gocti:"submenu_show_icons"          json:"submenu_show_icons,omitempty"`
	SubmenuAutoCollapse        bool                     `gocti:"submenu_auto_collapse"       json:"submenu_auto_collapse,omitempty"`
	MonochromeLabels           bool                     `gocti:"monochrome_labels"           json:"monochrome_labels,omitempty"`
	EditContext                []EditUserContext        `gocti:"editContext"                 json:"editContext,omitempty"`
}

func (u User) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempUser User

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempUser)(&u))
}

// UserAccount represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type UserAccount struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// UserAccount
	Extensions            string     `gocti:"extensions"              json:"extensions,omitempty"`
	UserID                string     `gocti:"user_id"                 json:"user_id,omitempty"`
	Credential            string     `gocti:"credential"              json:"credential,omitempty"`
	AccountLogin          string     `gocti:"account_login"           json:"account_login,omitempty"`
	AccountType           string     `gocti:"account_type"            json:"account_type,omitempty"`
	DisplayName           string     `gocti:"display_name"            json:"display_name,omitempty"`
	IsServiceAccount      bool       `gocti:"is_service_account"      json:"is_service_account,omitempty"`
	IsPrivileged          bool       `gocti:"is_privileged"           json:"is_privileged,omitempty"`
	CanEscalatePrivs      bool       `gocti:"can_escalate_privs"      json:"can_escalate_privs,omitempty"`
	IsDisabled            bool       `gocti:"is_disabled"             json:"is_disabled,omitempty"`
	AccountCreated        *time.Time `gocti:"account_created"         json:"account_created,omitempty"`
	AccountExpires        *time.Time `gocti:"account_expires"         json:"account_expires,omitempty"`
	CredentialLastChanged *time.Time `gocti:"credential_last_changed" json:"credential_last_changed,omitempty"`
	AccountFirstLogin     *time.Time `gocti:"account_first_login"     json:"account_first_login,omitempty"`
	AccountLastLogin      *time.Time `gocti:"account_last_login"      json:"account_last_login,omitempty"`
}

func (u UserAccount) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempUserAccount UserAccount

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempUserAccount)(&u))
}

// UserAccountAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type UserAccountAddInput struct {
	// UserAccountAddInput
	UserID                string     `gocti:"user_id"                 json:"user_id,omitempty"`
	Credential            string     `gocti:"credential"              json:"credential,omitempty"`
	AccountLogin          string     `gocti:"account_login"           json:"account_login,omitempty"`
	AccountType           string     `gocti:"account_type"            json:"account_type,omitempty"`
	DisplayName           string     `gocti:"display_name"            json:"display_name,omitempty"`
	IsServiceAccount      bool       `gocti:"is_service_account"      json:"is_service_account,omitempty"`
	IsPrivileged          bool       `gocti:"is_privileged"           json:"is_privileged,omitempty"`
	CanEscalatePrivs      bool       `gocti:"can_escalate_privs"      json:"can_escalate_privs,omitempty"`
	IsDisabled            bool       `gocti:"is_disabled"             json:"is_disabled,omitempty"`
	AccountCreated        *time.Time `gocti:"account_created"         json:"account_created,omitempty"`
	AccountExpires        *time.Time `gocti:"account_expires"         json:"account_expires,omitempty"`
	CredentialLastChanged *time.Time `gocti:"credential_last_changed" json:"credential_last_changed,omitempty"`
	AccountFirstLogin     *time.Time `gocti:"account_first_login"     json:"account_first_login,omitempty"`
	AccountLastLogin      *time.Time `gocti:"account_last_login"      json:"account_last_login,omitempty"`
	File                  []byte     `gocti:"file"                    json:"file,omitempty"`
}

func (u UserAccountAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempUserAccountAddInput UserAccountAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempUserAccountAddInput)(&u))
}

// UserAgent represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type UserAgent struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// UserAgent
	Value string `gocti:"value" json:"value,omitempty"`
}

func (u UserAgent) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempUserAgent UserAgent

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempUserAgent)(&u))
}

// UserAgentAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type UserAgentAddInput struct {
	// UserAgentAddInput
	Value string `gocti:"value" json:"value,omitempty"`
	File  []byte `gocti:"file"  json:"file,omitempty"`
}

func (u UserAgentAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempUserAgentAddInput UserAgentAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempUserAgentAddInput)(&u))
}

// UserConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type UserConnection struct {
	// UserConnection
	PageInfo PageInfo   `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []UserEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (u UserConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempUserConnection UserConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempUserConnection)(&u))
}

// UserEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type UserEdge struct {
	// UserEdge
	Cursor string `gocti:"cursor" json:"cursor,omitempty"`
	Node   User   `gocti:"node"   json:"node,omitempty"`
}

func (u UserEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(u).IsZero() {
		return []byte("null"), nil
	}

	type tempUserEdge UserEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempUserEdge)(&u))
}

// Vocabulary represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Vocabulary struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixMetaObject
	Created  *time.Time `gocti:"created"  json:"created,omitempty"`
	Modified *time.Time `gocti:"modified" json:"modified,omitempty"`

	// Vocabulary
	Category    VocabularyDefinition `gocti:"category"    json:"category,omitempty"`
	Name        string               `gocti:"name"        json:"name,omitempty"`
	Description string               `gocti:"description" json:"description,omitempty"`
	Usages      int                  `gocti:"usages"      json:"usages,omitempty"`
	Aliases     []string             `gocti:"aliases"     json:"aliases,omitempty"`
	BuiltIn     bool                 `gocti:"builtIn"     json:"builtIn,omitempty"`
	IsHidden    bool                 `gocti:"is_hidden"   json:"is_hidden,omitempty"`
	Order       int                  `gocti:"order"       json:"order,omitempty"`
}

func (v Vocabulary) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(v).IsZero() {
		return []byte("null"), nil
	}

	type tempVocabulary Vocabulary

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempVocabulary)(&v))
}

// VocabularyDefinition represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type VocabularyDefinition struct {
	// VocabularyDefinition
	Key         string                      `gocti:"key"          json:"key,omitempty"`
	Description string                      `gocti:"description"  json:"description,omitempty"`
	EntityTypes []string                    `gocti:"entity_types" json:"entity_types,omitempty"`
	Fields      []VocabularyFieldDefinition `gocti:"fields"       json:"fields,omitempty"`
}

func (v VocabularyDefinition) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(v).IsZero() {
		return []byte("null"), nil
	}

	type tempVocabularyDefinition VocabularyDefinition

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempVocabularyDefinition)(&v))
}

// VocabularyFieldDefinition represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type VocabularyFieldDefinition struct {
	// VocabularyFieldDefinition
	Key      string `gocti:"key"      json:"key,omitempty"`
	Required bool   `gocti:"required" json:"required,omitempty"`
	Multiple bool   `gocti:"multiple" json:"multiple,omitempty"`
}

func (v VocabularyFieldDefinition) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(v).IsZero() {
		return []byte("null"), nil
	}

	type tempVocabularyFieldDefinition VocabularyFieldDefinition

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempVocabularyFieldDefinition)(&v))
}

// Vulnerability represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Vulnerability struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixDomainObject
	Revoked           bool          `gocti:"revoked"           json:"revoked,omitempty"`
	Confidence        int           `gocti:"confidence"        json:"confidence,omitempty"`
	Lang              string        `gocti:"lang"              json:"lang,omitempty"`
	Created           *time.Time    `gocti:"created"           json:"created,omitempty"`
	Modified          *time.Time    `gocti:"modified"          json:"modified,omitempty"`
	ObjectAssignee    []Assignee    `gocti:"objectAssignee"    json:"objectAssignee,omitempty"`
	ObjectParticipant []Participant `gocti:"objectParticipant" json:"objectParticipant,omitempty"`
	Status            Status        `gocti:"status"            json:"status,omitempty"`
	WorkflowEnabled   bool          `gocti:"workflowEnabled"   json:"workflowEnabled,omitempty"`

	// Vulnerability
	Name                                 string                        `gocti:"name"                                       json:"name,omitempty"`
	Description                          string                        `gocti:"description"                                json:"description,omitempty"`
	XOpenctiAliases                      []string                      `gocti:"x_opencti_aliases"                          json:"x_opencti_aliases,omitempty"`
	XOpenctiCvssVectorString             string                        `gocti:"x_opencti_cvss_vector_string"               json:"x_opencti_cvss_vector_string,omitempty"`
	XOpenctiCvssBaseScore                float64                       `gocti:"x_opencti_cvss_base_score"                  json:"x_opencti_cvss_base_score,omitempty"`
	XOpenctiCvssBaseSeverity             string                        `gocti:"x_opencti_cvss_base_severity"               json:"x_opencti_cvss_base_severity,omitempty"`
	XOpenctiCvssAttackVector             string                        `gocti:"x_opencti_cvss_attack_vector"               json:"x_opencti_cvss_attack_vector,omitempty"`
	XOpenctiCvssAttackComplexity         string                        `gocti:"x_opencti_cvss_attack_complexity"           json:"x_opencti_cvss_attack_complexity,omitempty"`
	XOpenctiCvssPrivilegesRequired       string                        `gocti:"x_opencti_cvss_privileges_required"         json:"x_opencti_cvss_privileges_required,omitempty"`
	XOpenctiCvssUserInteraction          string                        `gocti:"x_opencti_cvss_user_interaction"            json:"x_opencti_cvss_user_interaction,omitempty"`
	XOpenctiCvssScope                    string                        `gocti:"x_opencti_cvss_scope"                       json:"x_opencti_cvss_scope,omitempty"`
	XOpenctiCvssConfidentialityImpact    string                        `gocti:"x_opencti_cvss_confidentiality_impact"      json:"x_opencti_cvss_confidentiality_impact,omitempty"`
	XOpenctiCvssIntegrityImpact          string                        `gocti:"x_opencti_cvss_integrity_impact"            json:"x_opencti_cvss_integrity_impact,omitempty"`
	XOpenctiCvssAvailabilityImpact       string                        `gocti:"x_opencti_cvss_availability_impact"         json:"x_opencti_cvss_availability_impact,omitempty"`
	XOpenctiCvssExploitCodeMaturity      string                        `gocti:"x_opencti_cvss_exploit_code_maturity"       json:"x_opencti_cvss_exploit_code_maturity,omitempty"`
	XOpenctiCvssRemediationLevel         string                        `gocti:"x_opencti_cvss_remediation_level"           json:"x_opencti_cvss_remediation_level,omitempty"`
	XOpenctiCvssReportConfidence         string                        `gocti:"x_opencti_cvss_report_confidence"           json:"x_opencti_cvss_report_confidence,omitempty"`
	XOpenctiCvssTemporalScore            float64                       `gocti:"x_opencti_cvss_temporal_score"              json:"x_opencti_cvss_temporal_score,omitempty"`
	XOpenctiCvssV2VectorString           string                        `gocti:"x_opencti_cvss_v2_vector_string"            json:"x_opencti_cvss_v2_vector_string,omitempty"`
	XOpenctiCvssV2BaseScore              float64                       `gocti:"x_opencti_cvss_v2_base_score"               json:"x_opencti_cvss_v2_base_score,omitempty"`
	XOpenctiCvssV2AccessVector           string                        `gocti:"x_opencti_cvss_v2_access_vector"            json:"x_opencti_cvss_v2_access_vector,omitempty"`
	XOpenctiCvssV2AccessComplexity       string                        `gocti:"x_opencti_cvss_v2_access_complexity"        json:"x_opencti_cvss_v2_access_complexity,omitempty"`
	XOpenctiCvssV2Authentication         string                        `gocti:"x_opencti_cvss_v2_authentication"           json:"x_opencti_cvss_v2_authentication,omitempty"`
	XOpenctiCvssV2ConfidentialityImpact  string                        `gocti:"x_opencti_cvss_v2_confidentiality_impact"   json:"x_opencti_cvss_v2_confidentiality_impact,omitempty"`
	XOpenctiCvssV2IntegrityImpact        string                        `gocti:"x_opencti_cvss_v2_integrity_impact"         json:"x_opencti_cvss_v2_integrity_impact,omitempty"`
	XOpenctiCvssV2AvailabilityImpact     string                        `gocti:"x_opencti_cvss_v2_availability_impact"      json:"x_opencti_cvss_v2_availability_impact,omitempty"`
	XOpenctiCvssV2Exploitability         string                        `gocti:"x_opencti_cvss_v2_exploitability"           json:"x_opencti_cvss_v2_exploitability,omitempty"`
	XOpenctiCvssV2RemediationLevel       string                        `gocti:"x_opencti_cvss_v2_remediation_level"        json:"x_opencti_cvss_v2_remediation_level,omitempty"`
	XOpenctiCvssV2ReportConfidence       string                        `gocti:"x_opencti_cvss_v2_report_confidence"        json:"x_opencti_cvss_v2_report_confidence,omitempty"`
	XOpenctiCvssV2TemporalScore          float64                       `gocti:"x_opencti_cvss_v2_temporal_score"           json:"x_opencti_cvss_v2_temporal_score,omitempty"`
	XOpenctiCvssV4VectorString           string                        `gocti:"x_opencti_cvss_v4_vector_string"            json:"x_opencti_cvss_v4_vector_string,omitempty"`
	XOpenctiCvssV4BaseScore              float64                       `gocti:"x_opencti_cvss_v4_base_score"               json:"x_opencti_cvss_v4_base_score,omitempty"`
	XOpenctiCvssV4BaseSeverity           string                        `gocti:"x_opencti_cvss_v4_base_severity"            json:"x_opencti_cvss_v4_base_severity,omitempty"`
	XOpenctiCvssV4AttackVector           string                        `gocti:"x_opencti_cvss_v4_attack_vector"            json:"x_opencti_cvss_v4_attack_vector,omitempty"`
	XOpenctiCvssV4AttackComplexity       string                        `gocti:"x_opencti_cvss_v4_attack_complexity"        json:"x_opencti_cvss_v4_attack_complexity,omitempty"`
	XOpenctiCvssV4AttackRequirements     string                        `gocti:"x_opencti_cvss_v4_attack_requirements"      json:"x_opencti_cvss_v4_attack_requirements,omitempty"`
	XOpenctiCvssV4PrivilegesRequired     string                        `gocti:"x_opencti_cvss_v4_privileges_required"      json:"x_opencti_cvss_v4_privileges_required,omitempty"`
	XOpenctiCvssV4UserInteraction        string                        `gocti:"x_opencti_cvss_v4_user_interaction"         json:"x_opencti_cvss_v4_user_interaction,omitempty"`
	XOpenctiCvssV4ConfidentialityImpactV string                        `gocti:"x_opencti_cvss_v4_confidentiality_impact_v" json:"x_opencti_cvss_v4_confidentiality_impact_v,omitempty"`
	XOpenctiCvssV4ConfidentialityImpactS string                        `gocti:"x_opencti_cvss_v4_confidentiality_impact_s" json:"x_opencti_cvss_v4_confidentiality_impact_s,omitempty"`
	XOpenctiCvssV4IntegrityImpactV       string                        `gocti:"x_opencti_cvss_v4_integrity_impact_v"       json:"x_opencti_cvss_v4_integrity_impact_v,omitempty"`
	XOpenctiCvssV4IntegrityImpactS       string                        `gocti:"x_opencti_cvss_v4_integrity_impact_s"       json:"x_opencti_cvss_v4_integrity_impact_s,omitempty"`
	XOpenctiCvssV4AvailabilityImpactV    string                        `gocti:"x_opencti_cvss_v4_availability_impact_v"    json:"x_opencti_cvss_v4_availability_impact_v,omitempty"`
	XOpenctiCvssV4AvailabilityImpactS    string                        `gocti:"x_opencti_cvss_v4_availability_impact_s"    json:"x_opencti_cvss_v4_availability_impact_s,omitempty"`
	XOpenctiCvssV4ExploitMaturity        string                        `gocti:"x_opencti_cvss_v4_exploit_maturity"         json:"x_opencti_cvss_v4_exploit_maturity,omitempty"`
	XOpenctiCwe                          []string                      `gocti:"x_opencti_cwe"                              json:"x_opencti_cwe,omitempty"`
	XOpenctiCisaKev                      bool                          `gocti:"x_opencti_cisa_kev"                         json:"x_opencti_cisa_kev,omitempty"`
	XOpenctiEpssScore                    float64                       `gocti:"x_opencti_epss_score"                       json:"x_opencti_epss_score,omitempty"`
	XOpenctiEpssPercentile               float64                       `gocti:"x_opencti_epss_percentile"                  json:"x_opencti_epss_percentile,omitempty"`
	XOpenctiScore                        int                           `gocti:"x_opencti_score"                            json:"x_opencti_score,omitempty"`
	XOpenctiFirstSeenActive              *time.Time                    `gocti:"x_opencti_first_seen_active"                json:"x_opencti_first_seen_active,omitempty"`
	Softwares                            StixCyberObservableConnection `gocti:"softwares"                                  json:"softwares,omitempty"`
}

func (v Vulnerability) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(v).IsZero() {
		return []byte("null"), nil
	}

	type tempVulnerability Vulnerability

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempVulnerability)(&v))
}

// VulnerabilityConnection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type VulnerabilityConnection struct {
	// VulnerabilityConnection
	PageInfo PageInfo            `gocti:"pageInfo" json:"pageInfo,omitempty"`
	Edges    []VulnerabilityEdge `gocti:"edges"    json:"edges,omitempty"`
}

func (v VulnerabilityConnection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(v).IsZero() {
		return []byte("null"), nil
	}

	type tempVulnerabilityConnection VulnerabilityConnection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempVulnerabilityConnection)(&v))
}

// VulnerabilityEdge represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type VulnerabilityEdge struct {
	// VulnerabilityEdge
	Cursor string        `gocti:"cursor" json:"cursor,omitempty"`
	Node   Vulnerability `gocti:"node"   json:"node,omitempty"`
}

func (v VulnerabilityEdge) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(v).IsZero() {
		return []byte("null"), nil
	}

	type tempVulnerabilityEdge VulnerabilityEdge

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempVulnerabilityEdge)(&v))
}

// Widget represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Widget struct {
	// Widget
	ID            string                `gocti:"id"            json:"id,omitempty"`
	Type          string                `gocti:"type"          json:"type,omitempty"`
	Perspective   WidgetPerspective     `gocti:"perspective"   json:"perspective,omitempty"`
	DataSelection []WidgetDataSelection `gocti:"dataSelection" json:"dataSelection,omitempty"`
	Parameters    WidgetParameters      `gocti:"parameters"    json:"parameters,omitempty"`
	Layout        WidgetLayout          `gocti:"layout"        json:"layout,omitempty"`
}

func (w Widget) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWidget Widget

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWidget)(&w))
}

// WidgetColumn represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WidgetColumn struct {
	// WidgetColumn
	Attribute    string `gocti:"attribute"    json:"attribute,omitempty"`
	DisplayStyle string `gocti:"displayStyle" json:"displayStyle,omitempty"`
	Label        string `gocti:"label"        json:"label,omitempty"`
	VariableName string `gocti:"variableName" json:"variableName,omitempty"`
}

func (w WidgetColumn) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWidgetColumn WidgetColumn

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWidgetColumn)(&w))
}

// WidgetDataSelection represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WidgetDataSelection struct {
	// WidgetDataSelection
	Label         string            `gocti:"label"          json:"label,omitempty"`
	Number        int               `gocti:"number"         json:"number,omitempty"`
	Attribute     string            `gocti:"attribute"      json:"attribute,omitempty"`
	DateAttribute string            `gocti:"date_attribute" json:"date_attribute,omitempty"`
	CenterLat     float64           `gocti:"centerLat"      json:"centerLat,omitempty"`
	CenterLng     float64           `gocti:"centerLng"      json:"centerLng,omitempty"`
	Zoom          float64           `gocti:"zoom"           json:"zoom,omitempty"`
	IsTo          bool              `gocti:"isTo"           json:"isTo,omitempty"`
	Perspective   WidgetPerspective `gocti:"perspective"    json:"perspective,omitempty"`
	Filters       string            `gocti:"filters"        json:"filters,omitempty"`
	DynamicFrom   string            `gocti:"dynamicFrom"    json:"dynamicFrom,omitempty"`
	DynamicTo     string            `gocti:"dynamicTo"      json:"dynamicTo,omitempty"`
	Columns       []WidgetColumn    `gocti:"columns"        json:"columns,omitempty"`
	InstanceID    string            `gocti:"instance_id"    json:"instance_id,omitempty"`
	SortBy        string            `gocti:"sort_by"        json:"sort_by,omitempty"`
	SortMode      string            `gocti:"sort_mode"      json:"sort_mode,omitempty"`
}

func (w WidgetDataSelection) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWidgetDataSelection WidgetDataSelection

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWidgetDataSelection)(&w))
}

// WidgetLayout represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WidgetLayout struct {
	// WidgetLayout
	W      float64 `gocti:"w"      json:"w,omitempty"`
	H      float64 `gocti:"h"      json:"h,omitempty"`
	X      float64 `gocti:"x"      json:"x,omitempty"`
	Y      float64 `gocti:"y"      json:"y,omitempty"`
	I      float64 `gocti:"i"      json:"i,omitempty"`
	Moved  bool    `gocti:"moved"  json:"moved,omitempty"`
	Static bool    `gocti:"static" json:"static,omitempty"`
}

func (w WidgetLayout) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWidgetLayout WidgetLayout

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWidgetLayout)(&w))
}

// WidgetParameters represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WidgetParameters struct {
	// WidgetParameters
	Title       string `gocti:"title"       json:"title,omitempty"`
	Description string `gocti:"description" json:"description,omitempty"`
	Interval    string `gocti:"interval"    json:"interval,omitempty"`
	Stacked     bool   `gocti:"stacked"     json:"stacked,omitempty"`
	Legend      bool   `gocti:"legend"      json:"legend,omitempty"`
	Distributed bool   `gocti:"distributed" json:"distributed,omitempty"`
}

func (w WidgetParameters) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWidgetParameters WidgetParameters

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWidgetParameters)(&w))
}

type WidgetPerspective string

const (
	WidgetPerspectiveEntities      WidgetPerspective = "entities"
	WidgetPerspectiveRelationships WidgetPerspective = "relationships"
	WidgetPerspectiveAudits        WidgetPerspective = "audits"
)

func (w WidgetPerspective) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWidgetPerspective WidgetPerspective

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWidgetPerspective)(&w))
}

// WindowsRegistryKey represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WindowsRegistryKey struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// WindowsRegistryKey
	AttributeKey    string     `gocti:"attribute_key"     json:"attribute_key,omitempty"`
	ModifiedTime    *time.Time `gocti:"modified_time"     json:"modified_time,omitempty"`
	NumberOfSubkeys int        `gocti:"number_of_subkeys" json:"number_of_subkeys,omitempty"`
}

func (w WindowsRegistryKey) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWindowsRegistryKey WindowsRegistryKey

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWindowsRegistryKey)(&w))
}

// WindowsRegistryKeyAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WindowsRegistryKeyAddInput struct {
	// WindowsRegistryKeyAddInput
	AttributeKey    string     `gocti:"attribute_key"     json:"attribute_key,omitempty"`
	ModifiedTime    *time.Time `gocti:"modified_time"     json:"modified_time,omitempty"`
	File            []byte     `gocti:"file"              json:"file,omitempty"`
	NumberOfSubkeys int        `gocti:"number_of_subkeys" json:"number_of_subkeys,omitempty"`
}

func (w WindowsRegistryKeyAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWindowsRegistryKeyAddInput WindowsRegistryKeyAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWindowsRegistryKeyAddInput)(&w))
}

// WindowsRegistryValueType represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WindowsRegistryValueType struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// WindowsRegistryValueType
	Name     string `gocti:"name"      json:"name,omitempty"`
	Data     string `gocti:"data"      json:"data,omitempty"`
	DataType string `gocti:"data_type" json:"data_type,omitempty"`
}

func (w WindowsRegistryValueType) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWindowsRegistryValueType WindowsRegistryValueType

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWindowsRegistryValueType)(&w))
}

// WindowsRegistryValueTypeAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WindowsRegistryValueTypeAddInput struct {
	// WindowsRegistryValueTypeAddInput
	Name     string `gocti:"name"      json:"name,omitempty"`
	Data     string `gocti:"data"      json:"data,omitempty"`
	DataType string `gocti:"data_type" json:"data_type,omitempty"`
	File     []byte `gocti:"file"      json:"file,omitempty"`
}

func (w WindowsRegistryValueTypeAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWindowsRegistryValueTypeAddInput WindowsRegistryValueTypeAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWindowsRegistryValueTypeAddInput)(&w))
}

// Work represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Work struct {
	// Work
	ID              string        `gocti:"id"               json:"id,omitempty"`
	Name            string        `gocti:"name"             json:"name,omitempty"`
	User            Creator       `gocti:"user"             json:"user,omitempty"`
	Connector       Connector     `gocti:"connector"        json:"connector,omitempty"`
	Timestamp       *time.Time    `gocti:"timestamp"        json:"timestamp,omitempty"`
	Status          State         `gocti:"status"           json:"status,omitempty"`
	EventSourceID   string        `gocti:"event_source_id"  json:"event_source_id,omitempty"`
	ReceivedTime    *time.Time    `gocti:"received_time"    json:"received_time,omitempty"`
	ProcessedTime   *time.Time    `gocti:"processed_time"   json:"processed_time,omitempty"`
	CompletedTime   *time.Time    `gocti:"completed_time"   json:"completed_time,omitempty"`
	CompletedNumber int           `gocti:"completed_number" json:"completed_number,omitempty"`
	Messages        []WorkMessage `gocti:"messages"         json:"messages,omitempty"`
	Errors          []WorkMessage `gocti:"errors"           json:"errors,omitempty"`
	Tracking        WorkTracking  `gocti:"tracking"         json:"tracking,omitempty"`
	DraftContext    string        `gocti:"draft_context"    json:"draft_context,omitempty"`
}

func (w Work) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWork Work

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWork)(&w))
}

// WorkMessage represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WorkMessage struct {
	// WorkMessage
	Timestamp *time.Time `gocti:"timestamp" json:"timestamp,omitempty"`
	Message   string     `gocti:"message"   json:"message,omitempty"`
	Sequence  int        `gocti:"sequence"  json:"sequence,omitempty"`
	Source    string     `gocti:"source"    json:"source,omitempty"`
}

func (w WorkMessage) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWorkMessage WorkMessage

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWorkMessage)(&w))
}

// WorkTracking represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type WorkTracking struct {
	// WorkTracking
	ImportExpectedNumber  int        `gocti:"import_expected_number"  json:"import_expected_number,omitempty"`
	ImportLastProcessed   *time.Time `gocti:"import_last_processed"   json:"import_last_processed,omitempty"`
	ImportProcessedNumber int        `gocti:"import_processed_number" json:"import_processed_number,omitempty"`
}

func (w WorkTracking) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWorkTracking WorkTracking

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWorkTracking)(&w))
}

// Workspace represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type Workspace struct {
	// InternalObject
	ID         string `gocti:"id"          json:"id,omitempty"`
	EntityType string `gocti:"entity_type" json:"entity_type,omitempty"`

	// BasicObject
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// Workspace
	Type                    string                                    `gocti:"type"                      json:"type,omitempty"`
	Name                    string                                    `gocti:"name"                      json:"name,omitempty"`
	Description             string                                    `gocti:"description"               json:"description,omitempty"`
	Owner                   Creator                                   `gocti:"owner"                     json:"owner,omitempty"`
	Tags                    []string                                  `gocti:"tags"                      json:"tags,omitempty"`
	Manifest                string                                    `gocti:"manifest"                  json:"manifest,omitempty"`
	CreatedAt               *time.Time                                `gocti:"created_at"                json:"created_at,omitempty"`
	UpdatedAt               *time.Time                                `gocti:"updated_at"                json:"updated_at,omitempty"`
	EditContext             []EditUserContext                         `gocti:"editContext"               json:"editContext,omitempty"`
	InvestigatedEntitiesIDs []string                                  `gocti:"investigated_entities_ids" json:"investigated_entities_ids,omitempty"`
	Objects                 StixObjectOrStixRelationshipRefConnection `gocti:"objects"                   json:"objects,omitempty"`
	GraphData               string                                    `gocti:"graph_data"                json:"graph_data,omitempty"`
	AuthorizedMembers       []MemberAccess                            `gocti:"authorizedMembers"         json:"authorizedMembers,omitempty"`
	CurrentUserAccessRight  string                                    `gocti:"currentUserAccessRight"    json:"currentUserAccessRight,omitempty"`
	ToStixReportBundle      string                                    `gocti:"toStixReportBundle"        json:"toStixReportBundle,omitempty"`
	ToConfigurationExport   string                                    `gocti:"toConfigurationExport"     json:"toConfigurationExport,omitempty"`
	ToWidgetExport          string                                    `gocti:"toWidgetExport"            json:"toWidgetExport,omitempty"`
	IsShared                bool                                      `gocti:"isShared"                  json:"isShared,omitempty"`
}

func (w Workspace) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(w).IsZero() {
		return []byte("null"), nil
	}

	type tempWorkspace Workspace

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempWorkspace)(&w))
}

// X509Certificate represents a GraphQL OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type X509Certificate struct {
	// BasicObject
	ID          string   `gocti:"id"           json:"id,omitempty"`
	StandardID  string   `gocti:"standard_id"  json:"standard_id,omitempty"`
	EntityType  string   `gocti:"entity_type"  json:"entity_type,omitempty"`
	ParentTypes []string `gocti:"parent_types" json:"parent_types,omitempty"`

	// StixObject
	SpecVersion  string       `gocti:"spec_version" json:"spec_version,omitempty"`
	CreatedAt    *time.Time   `gocti:"created_at"   json:"created_at,omitempty"`
	UpdatedAt    *time.Time   `gocti:"updated_at"   json:"updated_at,omitempty"`
	DraftVersion DraftVersion `gocti:"draftVersion" json:"draftVersion,omitempty"`
	Creators     []Creator    `gocti:"creators"     json:"creators,omitempty"`

	// StixCoreObject
	CreatedBy          Identity                    `gocti:"createdBy"          json:"createdBy,omitempty"`
	ObjectMarking      []MarkingDefinition         `gocti:"objectMarking"      json:"objectMarking,omitempty"`
	ObjectOrganization []Organization              `gocti:"objectOrganization" json:"objectOrganization,omitempty"`
	ObjectLabel        []Label                     `gocti:"objectLabel"        json:"objectLabel,omitempty"`
	ExternalReferences ExternalReferenceConnection `gocti:"externalReferences" json:"externalReferences,omitempty"`
	ImportFiles        FileConnection              `gocti:"importFiles"        json:"importFiles,omitempty"`
	OpinionsMetrics    OpinionsMetrics             `gocti:"opinions_metrics"   json:"opinions_metrics,omitempty"`

	// StixCyberObservable
	XOpenctiScore       int                 `gocti:"x_opencti_score"       json:"x_opencti_score,omitempty"`
	XOpenctiDescription string              `gocti:"x_opencti_description" json:"x_opencti_description,omitempty"`
	ObservableValue     string              `gocti:"observable_value"      json:"observable_value,omitempty"`
	Indicators          IndicatorConnection `gocti:"indicators"            json:"indicators,omitempty"`

	// HashedObservable
	Hashes []Hash `gocti:"hashes" json:"hashes,omitempty"`

	// X509Certificate
	IsSelfSigned                   bool       `gocti:"is_self_signed"                      json:"is_self_signed,omitempty"`
	Version                        string     `gocti:"version"                             json:"version,omitempty"`
	SerialNumber                   string     `gocti:"serial_number"                       json:"serial_number,omitempty"`
	SignatureAlgorithm             string     `gocti:"signature_algorithm"                 json:"signature_algorithm,omitempty"`
	Issuer                         string     `gocti:"issuer"                              json:"issuer,omitempty"`
	Subject                        string     `gocti:"subject"                             json:"subject,omitempty"`
	SubjectPublicKeyAlgorithm      string     `gocti:"subject_public_key_algorithm"        json:"subject_public_key_algorithm,omitempty"`
	SubjectPublicKeyModulus        string     `gocti:"subject_public_key_modulus"          json:"subject_public_key_modulus,omitempty"`
	SubjectPublicKeyExponent       int        `gocti:"subject_public_key_exponent"         json:"subject_public_key_exponent,omitempty"`
	ValidityNotBefore              *time.Time `gocti:"validity_not_before"                 json:"validity_not_before,omitempty"`
	ValidityNotAfter               *time.Time `gocti:"validity_not_after"                  json:"validity_not_after,omitempty"`
	BasicConstraints               string     `gocti:"basic_constraints"                   json:"basic_constraints,omitempty"`
	NameConstraints                string     `gocti:"name_constraints"                    json:"name_constraints,omitempty"`
	PolicyConstraints              string     `gocti:"policy_constraints"                  json:"policy_constraints,omitempty"`
	KeyUsage                       string     `gocti:"key_usage"                           json:"key_usage,omitempty"`
	ExtendedKeyUsage               string     `gocti:"extended_key_usage"                  json:"extended_key_usage,omitempty"`
	SubjectKeyIdentifier           string     `gocti:"subject_key_identifier"              json:"subject_key_identifier,omitempty"`
	AuthorityKeyIdentifier         string     `gocti:"authority_key_identifier"            json:"authority_key_identifier,omitempty"`
	SubjectAlternativeName         string     `gocti:"subject_alternative_name"            json:"subject_alternative_name,omitempty"`
	IssuerAlternativeName          string     `gocti:"issuer_alternative_name"             json:"issuer_alternative_name,omitempty"`
	SubjectDirectoryAttributes     string     `gocti:"subject_directory_attributes"        json:"subject_directory_attributes,omitempty"`
	CrlDistributionPoints          string     `gocti:"crl_distribution_points"             json:"crl_distribution_points,omitempty"`
	InhibitAnyPolicy               string     `gocti:"inhibit_any_policy"                  json:"inhibit_any_policy,omitempty"`
	PrivateKeyUsagePeriodNotBefore *time.Time `gocti:"private_key_usage_period_not_before" json:"private_key_usage_period_not_before,omitempty"`
	PrivateKeyUsagePeriodNotAfter  *time.Time `gocti:"private_key_usage_period_not_after"  json:"private_key_usage_period_not_after,omitempty"`
	CertificatePolicies            string     `gocti:"certificate_policies"                json:"certificate_policies,omitempty"`
	PolicyMappings                 string     `gocti:"policy_mappings"                     json:"policy_mappings,omitempty"`
}

func (x X509Certificate) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(x).IsZero() {
		return []byte("null"), nil
	}

	type tempX509Certificate X509Certificate

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempX509Certificate)(&x))
}

// X509CertificateAddInput represents a GraphQL INPUT_OBJECT
// Some fields from the OpenCTI schema may be missing
// (See the examples for ways to expand an existing type).
type X509CertificateAddInput struct {
	// X509CertificateAddInput
	Hashes                         []HashInput `gocti:"hashes"                              json:"hashes,omitempty"`
	IsSelfSigned                   bool        `gocti:"is_self_signed"                      json:"is_self_signed,omitempty"`
	Version                        string      `gocti:"version"                             json:"version,omitempty"`
	SerialNumber                   string      `gocti:"serial_number"                       json:"serial_number,omitempty"`
	SignatureAlgorithm             string      `gocti:"signature_algorithm"                 json:"signature_algorithm,omitempty"`
	Issuer                         string      `gocti:"issuer"                              json:"issuer,omitempty"`
	Subject                        string      `gocti:"subject"                             json:"subject,omitempty"`
	SubjectPublicKeyAlgorithm      string      `gocti:"subject_public_key_algorithm"        json:"subject_public_key_algorithm,omitempty"`
	SubjectPublicKeyModulus        string      `gocti:"subject_public_key_modulus"          json:"subject_public_key_modulus,omitempty"`
	SubjectPublicKeyExponent       int         `gocti:"subject_public_key_exponent"         json:"subject_public_key_exponent,omitempty"`
	ValidityNotBefore              *time.Time  `gocti:"validity_not_before"                 json:"validity_not_before,omitempty"`
	ValidityNotAfter               *time.Time  `gocti:"validity_not_after"                  json:"validity_not_after,omitempty"`
	BasicConstraints               string      `gocti:"basic_constraints"                   json:"basic_constraints,omitempty"`
	NameConstraints                string      `gocti:"name_constraints"                    json:"name_constraints,omitempty"`
	PolicyConstraints              string      `gocti:"policy_constraints"                  json:"policy_constraints,omitempty"`
	KeyUsage                       string      `gocti:"key_usage"                           json:"key_usage,omitempty"`
	ExtendedKeyUsage               string      `gocti:"extended_key_usage"                  json:"extended_key_usage,omitempty"`
	SubjectKeyIdentifier           string      `gocti:"subject_key_identifier"              json:"subject_key_identifier,omitempty"`
	AuthorityKeyIdentifier         string      `gocti:"authority_key_identifier"            json:"authority_key_identifier,omitempty"`
	SubjectAlternativeName         string      `gocti:"subject_alternative_name"            json:"subject_alternative_name,omitempty"`
	IssuerAlternativeName          string      `gocti:"issuer_alternative_name"             json:"issuer_alternative_name,omitempty"`
	SubjectDirectoryAttributes     string      `gocti:"subject_directory_attributes"        json:"subject_directory_attributes,omitempty"`
	CrlDistributionPoints          string      `gocti:"crl_distribution_points"             json:"crl_distribution_points,omitempty"`
	InhibitAnyPolicy               string      `gocti:"inhibit_any_policy"                  json:"inhibit_any_policy,omitempty"`
	PrivateKeyUsagePeriodNotBefore *time.Time  `gocti:"private_key_usage_period_not_before" json:"private_key_usage_period_not_before,omitempty"`
	PrivateKeyUsagePeriodNotAfter  *time.Time  `gocti:"private_key_usage_period_not_after"  json:"private_key_usage_period_not_after,omitempty"`
	CertificatePolicies            string      `gocti:"certificate_policies"                json:"certificate_policies,omitempty"`
	PolicyMappings                 string      `gocti:"policy_mappings"                     json:"policy_mappings,omitempty"`
	File                           []byte      `gocti:"file"                                json:"file,omitempty"`
}

func (x X509CertificateAddInput) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(x).IsZero() {
		return []byte("null"), nil
	}

	type tempX509CertificateAddInput X509CertificateAddInput

	//nolint:wrapcheck // To avoid complete implementation
	return json.Marshal((*tempX509CertificateAddInput)(&x))
}
